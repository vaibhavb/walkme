<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Health.ItemTypes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Health.ItemTypes.Address">
            <summary>
            Represents a physical mailing address.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Address.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Address"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Address.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Address"/> class with 
            values for the mandatory properties.
            </summary>
            
            <param name="city">
            The name of the city.
            </param>
            
            <param name="country">
            The name of the country.
            </param>
            
            <param name="postalCode">
            The postal code.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="city"/>, <paramref name="country"/> or
            <paramref name="postalCode"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Address.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Address"/> class with 
            values for the mandatory properties.
            </summary>
            
            <param name="street">
            The street address.
            </param>
            
            <param name="city">
            The name of the city.
            </param>
            
            <param name="country">
            The name of the country.
            </param>
            
            <param name="postalCode">
            The postal code.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="street"/>, <paramref name="city"/>, <paramref name="country"/> or
            <paramref name="postalCode"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Address.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the address information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Address.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the address into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the address.
            </param>
            
            <param name="writer">
            The XML writer into which the address should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Address.Street"/> property is empty or <see cref="P:Microsoft.Health.ItemTypes.Address.City"/>, 
            <see cref="P:Microsoft.Health.ItemTypes.Address.Country"/>, or <see cref="P:Microsoft.Health.ItemTypes.Address.PostalCode"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Address.ToString">
            <summary>
            Gets a string representation of the address.
            </summary>
            
            <returns>
            A string representation of the address with commas separating the "lines"
            of the address.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Address.Description">
            <summary>
            Gets or sets the description for the address.
            </summary>
            
            <value>
            A string representing the description.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the description should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Address.IsPrimary">
            <summary>
            Gets or sets a value indicating whether the address is the primary 
            address for the person.
            </summary>
            
            <value>
            <b>true</b> if the address is the primary one; otherwise, <b>false</b>.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if <see cref="P:Microsoft.Health.ItemTypes.Address.IsPrimary"/> should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Address.Street">
            <summary>
            Gets the street number, name, apartment, and so on.
            </summary>
            
            <value>
            A string collection of address information.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Address.City">
            <summary>
            Gets or sets the city.
            </summary>
            
            <value>
            A string representing the city name.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
            whitespace during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Address.State">
            <summary>
            Gets or sets the state.
            </summary>
            
            <value>
            A string representing the state name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the state should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Address.Country">
            <summary>
            Gets or sets the country.
            </summary>
            
            <value>
            A string representing the country name.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only 
            whitespace during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Address.PostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
            
            <value>
            A string representing the postal code.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
            whitespace during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Address.County">
            <summary>
            Gets or sets the county.
            </summary>
            
            <value>
            A string representing the county name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the county should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.AerobicData">
            <summary>
            Represents data about an aerobic session.
            </summary>
            
            <remarks>
            Aerobic data can represent the data for an entire session, the data
            for a single lap, or the desired aerobic session for an aerobic goal.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicData.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AerobicData"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicData.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the length from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the length.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicData.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the aerobic data to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the aerobic data.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the aerobic data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicData.ToString">
            <summary>
            Gets a summary of the aerobic data.
            </summary>
            
            <returns>
            A string summary of the aerobic data.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.Mode">
            <summary>
            Gets or sets the mode by which the aerobic session occurred.
            </summary>
            
            <remarks>
            The mode of the aerobic session include actions such as bike, run, or
            swim and are defined by the HealthVault dictionary.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.Distance">
            <summary>
            Gets or sets the length traversed by this aerobic session.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length"/> value representing the distance.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if there is no distance.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.Duration">
            <summary>
            Gets or sets the duration of the session in minutes.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no duration.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.DurationAsTimeSpan">
            <summary>
            Gets the duration of the aerobic session as a 
            <see cref="T:System.TimeSpan"/>.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.Intensity">
            <summary>
            Gets or sets the relative intensity of the session.
            </summary>
            
            <remarks>
            Set the value to <see cref="F:Microsoft.Health.ItemTypes.RelativeRating.None"/> if there is 
            no intensity.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.PeakHeartRate">
            <summary>
            Gets or sets the peak heart rate for the session.
            </summary>
            
            <remarks>
            If there is no heart rate data for the session, the value should
            be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AverageHeartRate">
            <summary>
            Gets or sets the average heart rate for the session.
            </summary>
            
            <remarks>
            If there is no heart rate data for the session, the value should
            be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.MinHeartRate">
            <summary>
            Gets or sets the minimum heart rate for the session.
            </summary>
            
            <remarks>
            If there is no heart rate data for the session, the value should
            be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to 
            zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.Energy">
            <summary>
            Gets or sets the food energy consumed during the session.
            </summary>
            
            <remarks>
            The energy consumed is measured in kilojoules.
            Set the value to <b>null</b> if there is no energy reading.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.EnergyFromFat">
            <summary>
            Gets or sets the energy from fat consumed during the session.
            </summary>
            
            <remarks>
            The energy consumed is measured in kilojoules.
            Set the value to <b>null</b> if there is no energy from fat reading.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.PeakSpeed">
            <summary>
            Gets or sets the peak speed, in meters per second, during the 
            session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no speed reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AverageSpeed">
            <summary>
            Gets or sets the average speed, in meters per second, during the 
            session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no speed reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.MinSpeed">
            <summary>
            Gets or sets the minimum speed, in meters per second, during the 
            session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no speed reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.PeakPace">
            <summary>
            Gets or sets the peak pace, in seconds per 100 meters, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no pace reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AveragePace">
            <summary>
            Gets or sets the average pace, in seconds per 100 meters, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no pace reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.MinPace">
            <summary>
            Gets or sets the minimum pace, in seconds per 100 meters, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no pace reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.PeakPower">
            <summary>
            Gets or sets the peak power, in watts, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no power reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AveragePower">
            <summary>
            Gets or sets the average power, in watts, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no power reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.MinPower">
            <summary>
            Gets or sets the minimum power, in watts, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no power reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.PeakTorque">
            <summary>
            Gets or sets the peak torque, in newton meters, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no torque reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AverageTorque">
            <summary>
            Gets or sets the average torque, in newton meters, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no torque reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.MinTorque">
            <summary>
            Gets or sets the minimum torque, in newton meters, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no torque reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.LeftRightBalance">
            <summary>
            Gets or sets the balance between left and right strokes.
            </summary>
            
            <remarks>
            The value is a percentage where the indicated value is the 
            percentage of the left stroke. The remaining percentage is
            the right stroke.
            Set the value to <b>null</b> if there is no balance reading.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or greater than one when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.PeakCadence">
            <summary>
            Gets or sets the peak cadence, in revolutions per minute (rpm), 
            during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no cadence reading.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AverageCadence">
            <summary>
            Gets or sets the average cadence, in revolutions per minute (rpm), 
            during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no cadence reading.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.MinCadence">
            <summary>
            Gets or sets the minimum cadence, in revolutions per minute (rpm), 
            during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no cadence reading.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.PeakTemperature">
            <summary>
            Gets or sets the peak temperature, in degrees Celsius (C), during 
            the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no temperature reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AverageTemperature">
            <summary>
            Gets or sets the average temperature, in degrees Celsius (C), 
            during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no temperature reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.MinTemperature">
            <summary>
            Gets or sets the minimum temperature, in degrees Celsius (C), 
            during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no temperature reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.PeakAltitude">
            <summary>
            Gets or sets the peak altitude, in meters above sea level, during 
            the session.
            </summary>
            
            <remarks>
            Negative values indicate the meters below sea level.
            Set the value to <b>null</b> if there is no altitude reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AverageAltitude">
            <summary>
            Gets or sets the average altitude, in meters above sea level, 
            during the session.
            </summary>
            
            <remarks>
            Negative values indicate the meters below sea level.
            Set the value to <b>null</b> if there is no altitude reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.MinAltitude">
            <summary>
            Gets or sets the minimum altitude, in meters above sea level, 
            during the session.
            </summary>
            
            <remarks>
            Negative values indicate the meters below sea level.
            Set the value to <b>null</b> if there is no altitude reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.ElevationGain">
            <summary>
            Gets or sets the elevation gained, in meters, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no elevation gain reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.ElevationLoss">
            <summary>
            Gets or sets the elevation lossed, in meters, during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no elevation loss reading.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.NumberOfSteps">
            <summary>
            Gets or sets the number of steps taken during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no step readings.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.NumberOfAerobicSteps">
            <summary>
            Gets or sets the number of aerobic steps taken during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no aerobic step readings.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicData.AerobicStepMinutes">
            <summary>
            Gets or sets the number of aerobic minutes during the session.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there are no readings indicating the number of 
            aerobic minutes.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.AerobicProfile">
            <summary>
            Represents a health record item type that encapsulates a person's 
            aerobic profile at a single point in time.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicProfile.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AerobicProfile"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicProfile.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AerobicProfile"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date/time when the aerobic profile was take.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.AerobicProfile.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicProfile.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.AerobicProfile"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the aerobic profile data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an aerobic-session node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicProfile.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the aerobic profile data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the aerobic profile data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicProfile.ToString">
            <summary>
            Gets a string representation of the aerobic profile item.
            </summary>
            
            <returns>
            A string representation fo the aerobic profile item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicProfile.When">
            <summary>
            Gets or sets the date when the aerobic profile was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicProfile.MaximumHeartRate">
            <summary>
            Gets or sets the person's maximum heart rate.
            </summary>
            
            <value>
            An integer representing the rate.
            </value>
            
            <remarks>
            If the maximum heart rate is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicProfile.RestingHeartRate">
            <summary>
            Gets or sets the person's resting heart rate.
            </summary>
            
            <value>
            An integer representing the rate.
            </value>
            
            <remarks>
            If the resting heart rate is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicProfile.AnaerobicThreshold">
            <summary>
            Gets or sets the person's anaerobic threshold in beats per minute
            (BPM).
            </summary>
            
            <value>
            An integer representing the threshold.
            </value>
            
            <remarks>
            If the anaerobic threshold is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicProfile.RelativeVO2Max">
            <summary>
            Gets or sets the relative VO2 max for the person in mL/kg/min.
            </summary>
            
            <value>
            A number representing the relative VO2 max.
            </value>
            
            <remarks>
            If the relative VO2 max is not known, the value can be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicProfile.AbsoluteVO2Max">
            <summary>
            Gets or sets the absolute V02 max for the person in mL/min.
            </summary>
            
            <value>
            A number representing the absolute VO2 max.
            </value>
            
            <remarks>
            If the absolute V02 max is not known, the value can be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicProfile.TargetHeartRateZoneGroups">
            <summary>
            Gets the target heart rate zone groups.
            </summary>
            
            <value>
            A collection of zone groups.
            </value>
            
            <remarks>
            Target heart rate zones are grouped to allow different sets of
            target zones based on activity, exercise theories, and so on.
            To add a group of heart rate zones, call the Add method on the
            returned collection.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.AerobicWeeklyGoal">
            <summary>
            Represents a health record item type that encapsulates a goal to have 
            a certain number of aerobic sessions per week.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AerobicWeeklyGoal"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.#ctor(Microsoft.Health.ItemTypes.AerobicData,System.Int32)">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AerobicWeeklyGoal"/> class 
             with the specified session data.
             </summary>
             
             <param name="session">
             An aerobic session that defines the goal.
             </param>
             
             <param name="recurrence">
             The number of occurrences of the session required in a week to
             meet the goal.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="session"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="recurrence"/> parameter is negative or zero.
             </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.AerobicWeeklyGoal"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the aerobic goal data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an aerobic-session node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the aerobic weekly goal data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the aerobic weekly goal data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.AerobicSession"/> property is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.ToString">
            <summary>
            Gets a string representation of the aerobic weekly goal item.
            </summary>
            
            <returns>
            A string representation of the aerobic weekly goal item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.AerobicSession">
            <summary>
            Gets or sets the definition of the aerobic session needed to 
            meet the goal.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.AerobicData"/> value representing the session definition.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AerobicWeeklyGoal.Recurrence">
            <summary>
            Gets or sets the number of sessions per week required to meet
            the goal.
            </summary>
            
            <value>
            An integer representing the number of sessions.
            </value>
            
            <remarks>
            This number must be greater than zero. The property defaults
            to three.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Alert">
            <summary>
            Represents a weekly alert schedule.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Alert.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Alert"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Alert.#ctor(System.Collections.Generic.IEnumerable{System.DayOfWeek},System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.ApproximateTime})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Alert"/> class with the 
            specified days and times.
            </summary>
            
            <param name="daysOfWeek">
            The days of the week the alert should be triggered.
            </param>
            
            <param name="times">
            The times in those days that the alert should be triggered.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="daysOfWeek"/>  or <paramref name="times"/> 
            parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Alert.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the address information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Alert.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the alert into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the alert.
            </param>
            
            <param name="writer">
            The XML writer into which the alert should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Alert.DaysOfWeek"/> property has no days set, or the 
            <see cref="P:Microsoft.Health.ItemTypes.Alert.Times"/> property contains no times.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Alert.ToString">
            <summary>
            Gets a string representation of the alert.
            </summary>
            
            <returns>
            A string representation of the alert.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Alert.DaysOfWeek">
            <summary>
            Gets a collection of the days of the week which the alert applies
            to.
            </summary>
            
            <value>
            A collection of days of the week.
            </value>
            
            <remarks>
            To add days to be alerted, add <see cref="T:System.DayOfWeek"/>
            values to the returned collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Alert.Times">
            <summary>
            Gets a collection of the times in each of the specified days to
            be alerted.
            </summary>
            
            <value>
            A collection of times.
            </value>
            
            <remarks>
            To add times to be alerted, add <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> 
            instances to the returned collection.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.AllergicEpisode">
            <summary>
            Represents a health record item type that encapsulates a single 
            allergic episode.
            </summary>
            
            <remarks>
            An allergic episode is an occurrence of an allergy which is defined by 
            the <see cref="T:Microsoft.Health.ItemTypes.Allergy"/> type.
            symptoms. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AllergicEpisode.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AllergicEpisode"/> class 
            with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AllergicEpisode.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AllergicEpisode"/> class 
            with the specified date and name.
            </summary>
            
            <param name="when">
            The date/time when the allergic episode occurred.
            </param>
            
            <param name="name">
            The name of the allergy.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> or <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.AllergicEpisode.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AllergicEpisode.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.AllergicEpisode"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the allergic episode data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an allergic-episode node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AllergicEpisode.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the allergic episode data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the allergic episode data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.AllergicEpisode.Name"/> has an <b>null</b> Text property.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AllergicEpisode.ToString">
            <summary>
            Gets a string representation of the allergic episode item.
            </summary>
            
            <returns>
            A string representation of the allergic episode item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AllergicEpisode.Name">
            <summary>
            Gets or sets the name of the allergy for which this episode is
            occurring.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the name.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AllergicEpisode.When">
            <summary>
            Gets or sets the date/time when the allergic episode occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AllergicEpisode.Reaction">
            <summary>
            Gets or sets the reaction the person has.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the reaction.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AllergicEpisode.Treatment">
            <summary>
            Gets or sets a possible treatment method for this allergy.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the 
            treatment method.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Allergy">
            <summary>
            Represents a health record item type that encapsulates an allergy.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Allergy.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Allergy"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Allergy.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Allergy"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="name">
            The name of the allergy.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Allergy.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Allergy.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Allergy"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the allergy data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an allergy node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Allergy.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the allergy data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the allergy data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Allergy.Name"/> has an <b>null</b> Text property.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Allergy.ToString">
            <summary>
            Gets a string representation of the allergy item.
            </summary>
            
            <returns>
            A string representation of the allergy item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Allergy.Name">
            <summary>
            Gets or sets the name of the allergy.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the name.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Allergy.Reaction">
            <summary>
            Gets or sets the reaction the person has.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the reaction.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Allergy.FirstObserved">
            <summary>
            Gets or sets the approximate date of the first occurrence of the
            allergy.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> representing the date.
            </value>
            
            <remarks>
            An approximate date must have a year and may also have the month
            and/or day.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Allergy.AllergenType">
            <summary>
            Gets or sets the type of allergen that causes an allergic 
            reaction.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing  the allergen category.
            </value>
            
            <remarks>
            Examples include medication such as penicillin and sulfonamides, 
            food such as peanuts, shellfish, and wheat, reactions to animals such 
            as bee stings, dogs, or cats, plants such as ragweed or birch, and 
            environmental things such as smoke, smog, or dust.
            <br/><br/>
            Codes for this value are in the "allergen-type" 
            vocabulary.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Allergy.AllergenCode">
            <summary>
            Gets or sets the code for the allergen that causes an allergic 
            reaction.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the allergen category.
            </value>
            
            <remarks>
            Examples include medication such as penicillin and sulfonamides, 
            food such as peanuts, shellfish, and wheat, reactions to animals such 
            as bee stings, dogs, or cats, plants such as ragweed or birch, and 
            environmental things such as smoke, smog, or dust.
            <br/><br/>
            Codes for this value are in the "allergen-type" 
            vocabulary.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Allergy.TreatmentProvider">
            <summary>
            Gets or sets information about the treatment provider for this allergy.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the provider.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Allergy.Treatment">
            <summary>
            Gets or sets a possible treatment method for this allergy.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the treatment method.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Allergy.IsNegated">
            <summary>
            Gets or sets a value indicating whether the allergic reaction is 
            negated with treatment.
            </summary>
            
            <remarks>
            <b>true</b> if the allergic reation is negated with treatment; 
            otherwise, <b>false</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.AltitudeMeasurement">
            <summary>
            Represents a altitude measurement and display.
            </summary>
            
            <remarks>
            In HealthVault, altitude measurements have values and display values. 
            All values are stored in a base unit of meters. 
            An application can take an altitude value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the altitude value must be 
            converted to meters to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Measurement`1">
            <summary>
            Represents a length value and display. This class is abstract.
            </summary>
            
            <remarks>
            HealthVault measurements are composed of the value and 
            a display value. All values are stored in a base unit for that type
            of measurement. An application can take a
            value using any scale the application chooses and can store the user- 
            entered value as the display value, but the measurement value must be 
            converted to the appropriate base unit to be stored in HealthVault.
            This abstract base class defines an interface from which all measurements 
            derive. The <see cref="P:Microsoft.Health.ItemTypes.Measurement`1.Value"/> property's type varies according 
            to the derived class definition and affects the base unit for that
            type. See the documentation for the derived class for more information
            on the base unit type for that measurement.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.#ctor">
            <summary>
            Creates a new instance of the Measurement class 
            with no value.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.#ctor(`0)">
            <summary>
            Creates a new instance of the Measurement class with 
            the specified value.
            </summary>
            
            <param name="value">
            An instance of MeasurementType representing the value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.#ctor(`0,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the Measurement class with 
            the specified value and optional display value.
            </summary>
            
            <param name="value">
            An instance of MeasurementType representing the value.
            </param>
            
            <param name="displayValue">
            The display value of the measurement. This should contain the
            exact measurement as entered by the user even if it uses a 
            unit of measure other than the base unit of measure for the 
            type. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the measurement from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the measurement.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Parses the measurement specific value from the XML.
            </summary>
            
            <param name="navigator">
            The XML node representing the measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the measurement to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the measurement.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the measurement to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the measurement value to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the measurement value to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)">
            <summary>
            Verifies the value is in the appropriate base unit of measure and
            is a legal value for the type.
            </summary>
            
            <param name="value">
            The value to be verified.
            </param>
            
            <remarks>
            Derived class must override this method and ensure that value uses
            the correct base unit of measurement and is a legal value for the
            type. If not, an appropriate exception should be thrown.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.ToString">
            <summary>
            Retrieves a string representation of the measurement using the 
            <see cref="P:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue"/> property.
            </summary>
            
            <returns>
            The measurement as a string including units if available.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Measurement`1.GetValueString(`0)">
            <summary>
            Retrieves the string representation of the value.
            </summary>
            
            <param name="value">
            The measurement value to get the string representation of.
            </param>
            
            <returns>
            A string representing the measurement value.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Measurement`1.Value">
            <summary>
            Gets or sets the value of the measurement.
            </summary>
            
            <returns>
            An instance of MeasurementType representing the value.
            </returns>
            
            <remarks>
            The value of the measurement must be within the tolerances for the
            specific type of measurement and must be in the base unit of 
            measure. See the derived classes documentation for the
            <see cref="M:Microsoft.Health.ItemTypes.Measurement`1.AssertMeasurementValue(`0)"/> method to determine which 
            exceptions can be thrown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue">
            <summary>
            Gets or sets the display value of the HealthVault dictionary item.
            </summary>
            
            <returns>
            An instance of <see cref="P:Microsoft.Health.ItemTypes.Measurement`1.DisplayValue"/>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AltitudeMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AltitudeMeasurement"/> 
            class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AltitudeMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AltitudeMeasurement"/> 
            class with the specified value in meters.
            </summary>
            
            <param name="meters">
            The altitude in meters.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AltitudeMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AltitudeMeasurement"/> 
            class with the specified value in meters and optional display value.
            </summary>
            
            <param name="meters">
            The altitude in meters.
            </param>
            
            <param name="displayValue">
            The display value of the altitude. This should contain the
            exact altitude as entered by the user even if it uses some
            other unit of measure besides meters. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AltitudeMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies that the value is a legal altitude value.
            </summary>
            
            <param name="value">
            The altitude measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AltitudeMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the altitude from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the altitude.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AltitudeMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the altitude to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the altitude to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AltitudeMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the altitude in the base units.
            </summary>
            
            <returns>
            The altitude as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Annotation">
            <summary>
            Represents a health record item type that encapsulates a medical annotation.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Annotation.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Annotation"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Annotation.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Annotation"/> class with 
            the specified date and time.
            </summary>
            
            <param name="when">
            The date/time when the annotation was taken.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Annotation.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Annotation.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Annotation"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the annotation data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an annotation node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Annotation.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the annotation data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the annotation data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            A mandatory property is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Annotation.ToString">
            <summary>
            Gets a string representation of the annotation item.
            </summary>
            
            <returns>
            A string representation of the annotation item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Annotation.When">
            <summary>
            Gets or sets the date/time when the annotation was created.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/>. The default value is 
            the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Annotation.Content">
            <summary>
            Gets or sets the content for the annotation.
            </summary>
            
            <value>
            A string representing the content.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the content should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Annotation.Author">
            <summary>
            Gets or sets the author contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the author contact information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the author contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Annotation.Classification">
            <summary>
            Gets or sets the classification for the annotation.
            </summary>
            
            <value>
            A string representing the classification.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the classification should not be fstored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Annotation.Index">
            <summary>
            Gets or sets the index for the annotation.
            </summary>
            
            <value>
            A string representing the index.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the index should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Annotation.Version">
            <summary>
            Gets or sets the version for the annotation.
            </summary>
            
            <value>
            A string representing the version.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the version should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ApplicationDataReference">
            <summary>
            Represents a health record item that stores information that can be used by an application to
            render content from another application.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApplicationDataReference"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApplicationDataReference"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="name">
            The consumer-friendly name.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ApplicationDataReference.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.ApplicationDataReference"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the application data reference from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in the <paramref name="typeSpecificXml"/> parameter 
            is not an application-data-reference node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the application data reference data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the application data reference data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.ApplicationDataReference.Name"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationDataReference.ToString">
            <summary>
            Gets a string representation of the application data reference.
            </summary>
            
            <returns>
            A string representing the application data reference.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.Name">
            <summary>
            Gets or sets the consumer-friendly name.
            </summary>
            
            <value>
            The consumer-friendly name. 
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null or empty</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.RenderFileName">
            <summary>
            Gets or sets the fully qualified name of the Silverlight application.
            </summary>
            
            <value>
            The render file name.
            </value> 
            
            <remarks>
            In current implementations, the xap files themselves must be hosted by Microsoft.
            This name will be used to look-up the source location of the widget for the purpose of display.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null or empty</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.PublicUrl">
            <summary>
            Gets or sets the URL that renders the application.
            </summary>
            
            <value>
            The public URL.
            </value> 
            
            <remarks>
            The rendering is suitable for IFrame embedding.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.ConfigurationUrl">
            <summary>
            Gets or sets the URL to the application's configuration page.
            </summary>
            
            <value>
            The configuration URL.
            </value> 
            
            <remarks>
            This page is where the user can enable/disable the application.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.OpenQueryId">
            <summary>
            Gets or sets the Id to pass to open query to obtain the data.
            </summary>
            
            <value>
            The open query Id.
            </value> 
            
            <remarks>
            The open query is executed by using the <see cref="T:Microsoft.Health.OpenQuery"/> class.
            
            This property is used when HealthVault serves data to the application directly. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationDataReference.ApplicationDataUrl">
            <summary>
            Gets or sets the URL used to obtain data from the application.
            </summary>
            
            <value>
            The application data URL.
            </value> 
            
            <remarks>
            If there is application specific data, or data that needs to be served from the application
            rather than directly from HealthVault, then this field should contain the fully qualified HTTPS URL.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ApplicationSpecific">
            <summary>
            Represents a health record item type that encapsulates application 
            specific data.
            </summary>
            
            <remarks>
            Application specific data can only ever be read or updared by the application
            that created.
            
            This type is not all that interesting by itself but used as a base class
            it helps developers implement their own application specific type class
            to handle instances by registering the class using the
            <see cref="M:Microsoft.Health.ItemTypeManager.RegisterApplicationSpecificHandler(System.Guid,System.String,System.Type)"/>
            method.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationSpecific.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApplicationSpecific"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationSpecific.#ctor(System.Guid,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApplicationSpecific"/> class with the 
            specified application ID, subtype tag, and description.
            </summary>
            
            <param name="applicationId">
            The unique application identifier.
            </param>
            
            <param name="subtypeTag">
            A string identifying a unique schema for the application specific
            type. The string format is completely arbitrary and is used by
            the application to identify the health record item application specific
            data as a specific subtype.
            </param>
            
            <param name="description">
            A descriptive display text for this item.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="applicationId"/> is <see cref="F:System.Guid.Empty"/>,
            or if <paramref name="subtypeTag"/> or <paramref name="description"/> is
            <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationSpecific.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApplicationSpecific"/> class with the 
            specified application ID, subtype tag, and description.
            </summary>
            
            <param name="applicationId">
            The unique application identifier.
            </param>
            
            <param name="subtypeTag">
            A string identifying a unique schema for the application specific
            type. The string format is completely arbitrary and is used by
            the application to identify the health record item application specific
            data as a specific subtype.
            </param>
            
            <param name="description">
            A descriptive display text for this item.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="applicationId"/>, <paramref name="subtypeTag"/>, or 
            <paramref name="description"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ApplicationSpecific.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationSpecific.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.ApplicationSpecific"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the application specific data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an app-specific node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationSpecific.ParseApplicationSpecificXml(System.Collections.Generic.IList{System.Xml.XPath.IXPathNavigable})">
            <summary>
            Parses the parts of the application specific item type that is specific
            to each application.
            </summary>
            
            <param name="applicationSpecific">
            An <see cref="T:System.Xml.XPath.XPathNavigator"/> focused on the "app-specific" 
            element in the item XML.
            </param>
            
            <remarks>
            The base elements that all application specific items contain are parsed by
            the base class. The derived class overrides this method to parse all 
            application specific portions of the XML. The base class implementation
            places the application specific elements in the <see cref="P:Microsoft.Health.ItemTypes.ApplicationSpecific.ApplicationSpecificXml"/> 
            property and then passes that collection to this method so that derived classes
            can further process those elements.  The base class implementation does nothing
            to process these elements.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationSpecific.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the application specific data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the application specific data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.ApplicationSpecific.ApplicationId"/>,
            <see cref="P:Microsoft.Health.ItemTypes.ApplicationSpecific.SubtypeTag"/>, or <see cref="P:Microsoft.Health.ItemTypes.ApplicationSpecific.Description"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationSpecific.WriteApplicationSpecificXml(System.Xml.XmlWriter)">
            <summary>
            Writes the application specific XML to the specified writer.
            </summary>
            
            <param name="writer">
            The XML writer to write the application specific XML to.
            </param>
            
            <remarks>
            The XML for the base elements that all application specific items contain is written by  
            the base class. The derived class overrides this method to write all 
            application specific portions of the XML. The base class implementation
            writes the XML in the <see cref="P:Microsoft.Health.ItemTypes.ApplicationSpecific.ApplicationSpecificXml"/> property.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApplicationSpecific.ToString">
            <summary>
            Gets a string representation of the application specific item.
            </summary>
            
            <returns>
            A string representation of the application specific item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationSpecific.ApplicationId">
            <summary>
            Gets or sets the unique application identifier for which this application
            specific information pertains.
            </summary>
            
            <value>
            The application identifier should be in the form of a <see cref="T:System.Guid"/>.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationSpecific.SubtypeTag">
            <summary>
            Gets or sets a tag that uniquely identifies the schema for the application specific
            data.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>, empty, or contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationSpecific.When">
            <summary>
            Gets or sets the date/time when the application specific item was created.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationSpecific.Description">
            <summary>
            Gets or sets the description of the item for display purposes.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>, empty, or contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApplicationSpecific.ApplicationSpecificXml">
            <summary>
            Gets a collection of the application specific XML.
            </summary>
            
            <remarks>
            To change the application specific XML for the item, add or remove
            items in the collection.
            Derived classes can ignore this member.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Appointment">
            <summary>
            Represents a health record item type that encapsulates a medical appointment.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Appointment.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Appointment"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item isn't added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Appointment.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Appointment"/> class with 
            the specified date and time.
            </summary>
            
            <param name="when">
            The date and time for the appointment.
            </param>
             
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Appointment.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Appointment.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this appointment instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the appointment data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an appointment node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Appointment.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the appointment data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the appointment data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Appointment.ToString">
            <summary>
            Gets a string representation of the appointment item.
            </summary>
            
            <returns>
            A string representation of the appointment item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Appointment.When">
            <summary>
            Gets or sets the date when the appointment occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Appointment.Duration">
            <summary>
            Gets or sets the duration of the appointment.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.DurationValue"/> instance representing  the duration.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the duration should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Appointment.Service">
            <summary>
            Gets or sets the service for the appointment.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the service.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the service should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Appointment.Clinic">
            <summary>
            Gets or sets the clinic information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the clinic information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the clinic information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Appointment.Specialty">
            <summary>
            Gets or sets the specialty for the appointment.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the specialty.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the specialty should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Appointment.Status">
            <summary>
            Gets or sets the status for the appointment.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the status.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the status should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Appointment.CareClass">
            <summary>
            Gets or sets the care class for the appointment.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the care class.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the care class should not be 
            stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ApproximateDate">
            <summary> 
            Represents an approximation of a date.
            </summary>
            
            <remarks>
            An approximation of a date must have a year. The month, day, or both 
            are optional.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> class 
            using default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> class 
            with the specified year.
            </summary>
            
            <param name="year">
            A year between 1000 and 9999.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="year"/> parameter is less than 1000 or greater 
            than 9999.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> class 
            with the specified year and month.
            </summary>
            
            <param name="year">
            A year between 1000 and 9999.
            </param>
            
            <param name="month">
            A month between 1 and 12.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="year"/> parameter is less than 1000 or greater 
            than 9999, or the <paramref name="month"/> parameter is less than 
            1 or greater than 12.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> class 
            with the specified year, month, and day.
            </summary>
            
            <param name="year">
            A year between 1000 and 9999.
            </param>
            
            <param name="month">
            A month between 1 and 12.
            </param>
            
            <param name="day">
            A day between 1 and 31.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="year"/> parameter is less than 1000 or greater than
            9999, or the <paramref name="month"/> parameter is less than 1 or 
            greater than 12, or the <paramref name="day"/> parameter is less 
            than 1 or greater than 31.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the approximate date from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the approximate date.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the approximate date to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the approximate date.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the approximate date to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.Object)">
            <summary>
            Compares the specified object to this ApproximateDate object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="obj"/>. If the result is zero, 
            the instance is equal to <paramref name="obj"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="obj"/>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/>
            or <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(Microsoft.Health.ItemTypes.ApproximateDate)">
            <summary>
            Compares the specified object to this <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> object.
            </summary>
            
            <param name="other">
            The date to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero, 
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.CompareTo(System.DateTime)">
            <summary>
            Compares the specified object to this <see cref="T:System.DateTime"/> object.
            </summary>
            
            <param name="other">
            The date to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero, 
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.Equals(System.Object)">
            <summary>
            Gets a value indicating whether the specified object is equal to this object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the <paramref name="obj"/> is an 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> object and the year, month, and
            day exactly match the year, month, and day of this object; otherwise,
            <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> or
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.GetHashCode">
            <summary>
            See the base class documentation.
            </summary>
            
            <returns>
            See the base class documentation.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.op_Equality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)">
            <summary>
            Gets a value indicating whether the specified object is equal to the 
            specified date.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            exactly match the year, month, and day of <paramref name="secondInstance"/>; otherwise,
            <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> or 
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.op_Inequality(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)">
            <summary>
            Gets a value indicating whether the specified object is not equal to the specified
            date.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>false</b> if the year, month, and day of the <paramref name="date"/> 
            exactly match the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>true</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> or
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)">
            <summary>
            Gets a value indicating whether the specified date is greater than 
            the specified object.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            is greater than the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> or
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.op_LessThan(Microsoft.Health.ItemTypes.ApproximateDate,System.Object)">
            <summary>
            Gets a value indicating whether the specified date is less than the s
            pecified
            object.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            is less than the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> or 
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDate.ToString">
            <summary>
            Gets a string representation of the approximate date.
            </summary>
            
            <returns>
            A string representation of the approximate date.
            </returns>
            
            <remarks>
            Note, this is not culture sensitive.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateDate.Year">
            <summary>
            Gets or sets the year of the date approximation.
            </summary>
            
            <returns>
            An integer representing the year.
            </returns>
            
            <remarks>
            This value defaults to the current year.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1000 or greater than 9999.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateDate.Month">
            <summary>
            Gets or sets the month of the date approximation.
            </summary>
            
            <returns>
            An integer representing the month.
            </returns>
            
            <remarks>
            If the month is unknown, it can be set to <b>null</b>. This value 
            defaults to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1 or greater than 12.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateDate.Day">
            <summary>
            Gets or sets the day of the date approximation.
            </summary>
            
            <returns>
            An integer representing the day.
            </returns>
            
            <remarks>
            If the day is unknown, it can be set to <b>null</b>. This value 
            defaults to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1 or greater than 31.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ApproximateDateTime">
            <summary> 
            An approximation of a date and time.
            </summary>
            
            <remarks>
            To use this class, you must specify either an approximate date or a 
            descriptive date such as "as a baby."
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/>
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.#ctor(Microsoft.Health.ItemTypes.ApproximateDate)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/>
            class with the specified date.
            </summary>
            
            <param name="approximateDate">
            The approximation of the date.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="approximateDate"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.#ctor(Microsoft.Health.ItemTypes.ApproximateDate,Microsoft.Health.ItemTypes.ApproximateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/>
            class with the specified date and time.
            </summary>
            
            <param name="approximateDate">
            The approximation of the date.
            </param>
            
            <param name="approximateTime">
            The approximation of the time.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="approximateDate"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.#ctor(Microsoft.Health.ItemTypes.ApproximateDate,Microsoft.Health.ItemTypes.ApproximateTime,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/>
            class with the specified date, time, and time zone.
            </summary>
            
            <param name="approximateDate">
            The approximation of the date.
            </param>
            
            <param name="approximateTime">
            The approximation of the time.
            </param>
            
            <param name="timeZone">
            The time zone of the approximate time.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="approximateDate"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/>
            class with the specified description.
            </summary>
            
            <param name="description">
            The description of the approximate date.
            </param>
            
            <remarks>
            The description and approximate date/time are mutually exclusive. A description
            is the approximation of a date without using year, month, day.  For instance,
            "when I was a toddler" can be used as an approximate date.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="description"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.#ctor(System.DateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/>
            class from a DateTime instance.
            </summary>
            
            <param name="dateTime">
            The DateTime instance
            </param>
            
            <remarks>
            The time zone is not set by this constructor.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the approximate date and time from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the approximate date and time.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the approximate date and time to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the approximate date and time.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the approximate date and time to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.ApproximateDateTime.ApproximateDate"/> is <b>null</b> and 
            <see cref="P:Microsoft.Health.ItemTypes.ApproximateDateTime.Description"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.CompareTo(System.Object)">
            <summary>
            Compares the specified object to this <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> 
            object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="obj"/>. If the result is zero, 
            the instance is equal to <paramref name="obj"/>. If the result is
            greater than zero, the instance is greater than <paramref name="obj"/>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/>
            or <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.CompareTo(Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Compares the specified object to this <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> 
            object.
            </summary>
            
            <param name="other">
            The date to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.CompareTo(System.DateTime)">
            <summary>
            Compares the specified object to this <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> 
            object.
            </summary>
            
            <param name="other">
            The date to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero,
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.Equals(System.Object)">
            <summary>
            Gets a value indicating whether the specified object is equal to this object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the <paramref name="obj"/> is an 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> object and the year, month, and
            day exactly match the year, month, and day of this object; otherwise, 
            <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/>
            or <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.GetHashCode">
            <summary>
            See the base class documentation.
            </summary>
            
            <returns>
            See the base class documentation.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.op_Equality(Microsoft.Health.ItemTypes.ApproximateDateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified object is equal to 
            the specified date.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            exactly match the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/>
            is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> or
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.op_Inequality(Microsoft.Health.ItemTypes.ApproximateDateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified object is not equal 
            to the specified
            date.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>false</b> if the year, month, and day of the <paramref name="date"/> 
            exactly match the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>true</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter 
            is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> or
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateDateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified date is greater than 
            the specified object.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            is greater than the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter
            is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> or
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.op_LessThan(Microsoft.Health.ItemTypes.ApproximateDateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified date is less than the specified
            object.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            is less than the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter 
            is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> or
            <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateDateTime.ToString">
            <summary>
            Gets a string representation of the approximate date/time.
            </summary>
            
            <returns>
            A string representation of the approximate date/time.
            </returns>
            
            <remarks>
            This method is not culture aware.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateDateTime.ApproximateDate">
            <summary>
            Gets or sets the approximate date.
            </summary>
            
            <remarks>
            The <paramref name="value"/> parameter is <b>null</b> when set, and 
            <see cref="P:Microsoft.Health.ItemTypes.ApproximateDateTime.Description"/> must be set to a non-<b>null</b> value before
            calling <see cref="M:Microsoft.Health.ItemTypes.ApproximateDateTime.WriteXml(System.String,System.Xml.XmlWriter)"/>.
            <br/><br/>
            The property value defaults to the current year.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateDateTime.ApproximateTime">
            <summary>
            Gets or sets the approximate time.
            </summary>
            
            <remarks>
            This value is only used if <see cref="P:Microsoft.Health.ItemTypes.ApproximateDateTime.ApproximateDate"/> is set
            to a non-<b>null</b> value.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateDateTime.TimeZone">
            <summary>
            Gets or sets the time zone.
            </summary>
            
            <remarks>
            This value is only used if <see cref="P:Microsoft.Health.ItemTypes.ApproximateDateTime.ApproximateDate"/> is set
            to a non-<b>null</b> value.
            HealthVault does not interpret this value or adjust dates accordingly.
            It is up to the application to decide how this value is used.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateDateTime.Description">
            <summary>
            Gets or sets the descriptive form of the approximate date.
            </summary>
            
            <remarks>
            The descriptive form of the approximate date is a value such as 
            "As a baby...".
            <br/><br/>
            If <paramref name="value"/> is <b>null</b> when set, 
            <see cref="P:Microsoft.Health.ItemTypes.ApproximateDateTime.ApproximateDate"/> must be set to a non-<b>null</b> value 
            before calling <see cref="M:Microsoft.Health.ItemTypes.ApproximateDateTime.WriteXml(System.String,System.Xml.XmlWriter)"/>.
            If <paramref name="value"/> is not <b>null</b> when set, 
            <see cref="P:Microsoft.Health.ItemTypes.ApproximateDateTime.ApproximateDate"/> is set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ApproximateTime">
            <summary> 
            An approximation of a time.
            </summary>
            
            <remarks>
            An approximation of a time must have an hour and minute and can 
            also optionally have seconds specified.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> class 
            with the specified hour and minute.
            </summary>
            
            <param name="hour">
            The hour between 0 and 23.
            </param>
            
            <param name="minute">
            The minute between 0 and 59.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="hour"/> parameter is less than 0 or greater
            than 23, or the <paramref name="minute"/> parameter is less than 0 or
            greater than 59.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> class 
            with the specified hour, minute, and second.
            </summary>
            
            <param name="hour">
            The hour between 0 and 23.
            </param>
            
            <param name="minute">
            The minute between 0 and 59.
            </param>
            
            <param name="second">
            The second between 0 and 59.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="hour"/> parameter is less than 0 or greater
            than 23, or the <paramref name="minute"/> or <paramref name="second"/> 
            parameter is less than 0 or
            greater than 59.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> class 
             with the specified hour, minute, second, and millisecond.
             </summary>
             
             <param name="hour">
             The hour between 0 and 23.
             </param>
             
             <param name="minute">
             The minute between 0 and 59.
             </param>
             
             <param name="second">
             The second between 0 and 59.
             </param>
            
             <param name="millisecond">
             The millisecond between 0 and 999.
             </param>
             
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="hour"/> parameter is less than 0 or greater
             than 23, or the <paramref name="minute"/>, or <paramref name="second"/> 
             parameter is less than 0 or
             greater than 59, or <paramref name="millisecond"/> parameter is less than 0
             or greater than 999.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the approximate time from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the approximate time.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the approximate time to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the approximate time.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the approximate time to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(System.Object)">
            <summary>
            Compares the specified object to this ApproximateTime object.
            </summary>
            
            <returns>
            An integer representing the object order.
            </returns> 
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. 
            </returns>
            
            <remarks>
            If the result is less than zero, the 
            instance is less than <paramref name="obj"/>. If the result is zero
            the instance is equal to <paramref name="obj"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="obj"/>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/>
            object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.CompareTo(Microsoft.Health.ItemTypes.ApproximateTime)">
            <summary>
            Compares the specified object to this ApproximateDate object.
            </summary>
            
            <param name="other">
            The time to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. 
            </returns>
            
            <remarks>
            If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.Equals(System.Object)">
            <summary>
            Gets a value indicating whether the specified object is equal to this object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the <paramref name="obj"/> is a 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> object and the hour, minute, 
            second, and millisecond exactly match; otherwise, <b>false</b>. 
            </returns>
            
            <remarks>
            If an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> is less specific than the other 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/>, the less specific one is considered less than 
            the more specific one, assuming that the current data is equal.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/>
            object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.GetHashCode">
            <summary>
            See the base class documentation.
            </summary>
            
            <returns>
            See the base class documentation.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.op_Equality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified object is equal to 
            the specified time.
            </summary>
            
            <param name="time">
            The time object to be compared.
            </param>
            
            <param name="obj">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if <paramref name="time"/> has the hour, minute, 
            second, and millisecond exactly match; otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.op_Inequality(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified object is not equal 
            to the specified
            time.
            </summary>
            
            <param name="time">
            The time object to be compared.
            </param>
            
            <param name="obj">
            The second object to be compared.
            </param>
            
            <returns>
            <b>false</b> if <paramref name="time"/> has the hour, minute, 
            second, and millisecond exactly match.        
            </returns>
            
            <remarks>
            If an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> is less specific than the other 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/>, the less specific one is considered less than 
            the more specific one, assuming that the current data is equal.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.op_GreaterThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified time is greater than the specified
            object.
            </summary>
            
            <param name="time">
            The time object to be compared.
            </param>
            
            <param name="obj">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if <paramref name="time"/> has the hour, minute, 
            second, and millisecond greater than that of 
            <paramref name="obj"/>.
            </returns>
            
            <remarks>
            If an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> is less specific than the other 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/>, the less specific one is considered less than 
            the more specific one, assuming that the current data is equal.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.op_LessThan(Microsoft.Health.ItemTypes.ApproximateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified time is less than the specified
            object.
            </summary>
            
            <param name="time">
            The time object to be compared.
            </param>
            
            <param name="obj">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if <paramref name="time"/> has the hour, minute, 
            second, and millisecond less than that of 
            <paramref name="obj"/>.       
            </returns>
            
            <remarks>
            If an <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> is less specific than the other 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/>, the less specific one is considered less than 
            the more specific one, assuming that the current data is equal.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not an 
            <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ApproximateTime.ToString">
            <summary>
            Gets a string representation of the time.
            </summary>
            
            <returns>
            A string representation of the time.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateTime.Now">
            <summary>
            Gets the current time including the hour, minute, and second.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateTime.Hour">
            <summary>
            Gets or sets the hour of the time approximation.
            </summary>
            
            <returns>
            An integer representing the hour.
            </returns>
            
            <remarks>
            This value defaults to the current hour.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 0 or greater than 23
            when setting.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateTime.Minute">
            <summary>
            Gets or sets the minute of the time approximation.
            </summary>
            
            <returns>
            An integer representing the minute.
            </returns> 
            
            <remarks>
            This value defaults to the current minute.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 0 or greater than 59
            when setting.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateTime.Second">
            <summary>
            Gets or sets the seconds of the time approximation.
            </summary>
            
            <returns>
            An integer representing the second.
            </returns> 
            
            <remarks>
            If the number of seconds is unknown, the value can be set to 
            <b>null</b>. This value defaults to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 0 or greater than 59
            when setting.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateTime.Millisecond">
            <summary>
            Gets or sets the milliseconds of the time approximation.
            </summary>
            
            <returns>
            An integer representing the milliseconds.
            </returns>
            
            <remarks>
            If the number of milliseconds is unknown, the value can be set to <b>null</b>. 
            This value defaults to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 0 or greater than 999
            when setting.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ApproximateTime.HasValue">
            <summary>
            Gets a boolean indicating whether this ApproximateTime has a value in it.
            </summary>
            
            <returns>
            True if there is a value.
            </returns>
            
            <remarks>
            ApproximateTime instances are initialized into state without a value, but the Hour and Minute
            properties must still return numbers in that case. This property is used to tell the 
            difference between an ApproximateTime that has no value and one where the hour and minute
            have been set to zero (ie 12:00 AM).
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Assessment">
            <summary>
            Defines a result from a health assessment containing the name and value of the assessed area.
            </summary>
            
            <remarks>
            See <see cref="T:Microsoft.Health.ItemTypes.HealthAssessment"/> for more information.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Assessment"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Assessment"/> class 
            with name and value.
            </summary>
            
            <param name="name">
            The name of the assessed area. See <see cref="P:Microsoft.Health.ItemTypes.Assessment.Name"/> for more information.
            </param>
            
            <param name="value">
            The calculated value of the assessed area. See <see cref="P:Microsoft.Health.ItemTypes.Assessment.Value"/> for more information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> or <paramref name="value"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.Assessment"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the assessment data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the assessment data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the assessment item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the assessment data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Assessment.Name"/> or <see cref="P:Microsoft.Health.ItemTypes.Assessment.Value"/> is <b>null</b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Assessment.ToString">
            <summary>
            Gets a string of the name or description of the assessment.
            </summary> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Assessment.Name">
            <summary>
            Gets or sets the name of the assessed area.  
            </summary>
            
            <remarks>
            Examples: Heart attack risk, high blood pressure.
            The preferred vocabulary for route is "health-assessment-name".
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Name"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Assessment.Value">
            <summary>
            Gets or sets the calculated value of the assessed area.
            </summary>
            
            <remarks>
            The value may be coded using a specific set of values. 
            Example: Low/Medium/High risk.
            A list of vocabularies may be found in the preferred vocabulary 
            "health-assessment-value-sets". 
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Assessment.Group">
            <summary>
            Gets or sets the additional information that can be used to help organize the
            results.
            </summary>
            
            <remarks>
            The group is used to specify which group a specific result is in. 
            For example, the supporting assessments that follow a main assessment are coded
            to indicate that they are supporting by specifying the "supporting" code.
            The preferred vocabulary for route is "health-assessment-groups".
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.AsthmaInhaler">
            <summary>
            Represents a health record item that encapsulates an asthma inhaler.
            </summary>
            
            <remarks>
            This class can represent any inhaler unit used to treat asthma. The 
            inhaler may or may not have a device component to it. Each new canister 
            should be represented by a new <see cref="T:Microsoft.Health.ItemTypes.AsthmaInhaler"/> instance, even 
            if there is a containing device that is reusable. Changes in regimen 
            (minimum/maximum doses per day) should also cause a new health record 
            item to be created.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhaler.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AsthmaInhaler"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhaler.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AsthmaInhaler"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="startDate">
            The approximate date and time when the inhaler use began.
            </param>
            
            <param name="drug">
            The name of the drug being used in the inhaler.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="startDate"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="drug"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.AsthmaInhaler.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhaler.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.AsthmaInhaler"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the asthma inhaler data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in the <paramref name="typeSpecificXml"/> 
            parameter is not an asthma-inhaler node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhaler.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the asthma inhaler data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the asthma inhaler data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.AsthmaInhaler.StartDate"/> is <b>null</b>, or
            <see cref="P:Microsoft.Health.ItemTypes.AsthmaInhaler.Drug"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhaler.ToString">
            <summary>
            Gets a string representation of the asthma inhaler item.
            </summary>
            
            <returns>
            A string representation of the asthma inhaler item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.StartDate">
            <summary>
            Gets or sets the date and time when the inhaler use began.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </returns>
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.Drug">
            <summary>
            Gets or sets the drug being used in the inhaler.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the drug.
            </returns> 
            
            <remarks>
            The name of the drug in the canister.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.Strength">
            <summary>
            Gets or sets the textual description of the drug strength
            (e.g., '44 mcg / puff').
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the description.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the strength should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.Purpose">
            <summary>
            Gets or sets the count of doses for each inhaler use.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.InhalerPurpose"/> instance representing the count.
            </returns> 
            
            <remarks>
            Set the value to <see cref="F:Microsoft.Health.ItemTypes.InhalerPurpose.None"/> if the purpose should
            not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.StopDate">
            <summary>
            Gets or sets the date and time when the inhaler was retired.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </returns> 
            
            <remarks>
            The value defaults to the current year, month, and day.
            <br/><br/>
            Set the value to <b>null</b> if the stop date should not be stored or
            is still in use.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.ExpirationDate">
            <summary>
            Gets or sets the date and time when the canister has clinically
            expired.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </returns> 
            
            <remarks>
            The value defaults to the current year, month, and day.
            <br/><br/>
            Set the value to <b>null</b> if the expiration date should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.DeviceId">
            <summary>
            Gets or sets the identifier for the device.
            </summary>
            
            <returns>
            A string representing the identifier.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the device identifier should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.InitialDoses">
            <summary>
            Gets or sets the number of doses in the unit at the time of
            item creation.
            </summary>
            
            <returns>
            An integer representing the number of doses.
            </returns> 
            
            <remarks>
            The number of doses in the unit may not correspond to the number
            of doses the canister started with, since the expectation is that
            a change in regimen will cause a new item to be created as well.
            <br/><br/>
            Set the value to <b>null</b> if the initial doses should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.MinimumDailyDoses">
            <summary>
            Gets or sets the minimum number of doses that should be taken
            each day.
            </summary>
            
            <returns>
            An integer representing the minimum number of doses.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the minimum doses should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.MaximumDailyDoses">
            <summary>
            Gets or sets the maximum number of doses that should be taken
            each day.
            </summary>
            
            <returns>
            An integer representing the maximum number of doses.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the maximum doses should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.CanAlert">
            <summary>
            Gets or sets a value indicating whether the inhaler can show alerts.
            </summary>
            
            <returns>
            <b>true</b> if the inhaler can show alerts; otherwise, <b>false</b>. 
            If <b>null</b>, it is unknown whether the inhaler
            can show alerts.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhaler.Alerts">
            <summary>
            Gets a collection of alerts for the inhaler.
            </summary>
            
            <returns>
            A collection of alerts.
            </returns>
            
            <remarks>
            To add an alert, pass the Add method of the returned collection
            an instance of the <see cref="T:Microsoft.Health.ItemTypes.Alert"/> class.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.AsthmaInhalerUse">
            <summary>
            Represents a health record item type that encapsulates a single use of 
            an asthma inhaler.
            </summary>
            
            <remarks>
            A single use can consist of multiple doses if the prescription
            calls for it.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AsthmaInhalerUse"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.AsthmaInhalerUse"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date/time when the inhaler was used.
            </param>
            
            <param name="drug">
            The name of the drug being used in the inhaler.
            </param>
            
            <param name="doseCount">
            The count of doses for each inhaler use.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="drug"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.AsthmaInhalerUse.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.AsthmaInhalerUse"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the asthma inhaler use data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an asthma-inhaler-use node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the asthma inhaler use data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the asthma inhaler use data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.When"/>, <see cref="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount"/>, or
            <see cref="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug"/> property is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.AsthmaInhalerUse.ToString">
            <summary>
            Gets a string representation of the asthma inhaler use item.
            </summary>
            
            <returns>
            A string representation of the asthma inhaler use item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.When">
            <summary>
            Gets or sets the date when the inhaler use occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.Drug">
            <summary>
            Gets or sets the drug being used in the inhaler.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the 
            drug.
            </value>
            
            <remarks>
            The name of the drug in the canister.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.Strength">
            <summary>
            Gets or sets the strength of the dosage for each inhaler use.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the 
            dosage strength.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the strength should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DoseCount">
            <summary>
            Gets or sets the count of doses for each inhaler use.
            </summary>
            
            <value>
            An integer representing the count.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DeviceId">
            <summary>
            Gets or sets the identifier for the device used.
            </summary>
            
            <value>
            A string representing the device identifier.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the device identifier should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.AsthmaInhalerUse.DosePurpose">
            <summary>
            Gets or sets the target of the inhaler usage.
            </summary>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the 
            dosage purpose. 
            <remarks>
            Examples include relief (the dose purpose is
            intended to relieve immediate asthma symptoms), 
            prevention (the dose purpose is intended to 
            prevent asthma symptoms), control (the dose 
            purpose is intended to control the impact of 
            current asthma symptoms), other (the dose 
            purpose is known, but other than to relieve, 
            prevent or control asthma symptoms), and 
            undefined (there is not enough information 
            about the inhaler usage to discern purpose).
            <br/><br/>
            Codes for this value are in the "dose-purpose" 
            vocabulary.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Baby">
            <summary>
            Represents a baby associated with a pregnancy or delivery.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Baby.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Baby"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Baby.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the baby information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Baby.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the baby information into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the baby information.
            </param>
            
            <param name="writer">
            The XML writer into which the baby information should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Baby.ToString">
            <summary>
            Gets a string representation of the baby information.
            </summary>
            
            <returns>
            A string representation of the baby information.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Name">
            <summary>
            Gets or sets the name of the baby.
            </summary>
            
            <remarks>
            If the name is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Gender">
            <summary>
            Gets or sets the gender of the baby.
            </summary>
            
            <remarks>
            If the gender is not known the value should be set to <b>null</b>.
            The preferred vocabulary for this value is "gender-types". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Weight">
            <summary>
            Gets or sets the birth weight of the baby.
            </summary>
            
            <remarks>
            If the weight is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Length">
            <summary>
            Gets or sets the birth length of the baby.
            </summary>
            
            <remarks>
            If the length is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.HeadCircumference">
            <summary>
            Gets or sets the circumference of the baby's head.
            </summary>
            
            <remarks>
            If the head circumference is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Baby.Note">
            <summary>
            Gets or sets additional information about the baby.
            </summary>
            
            <remarks>
            If there are no additional notes the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Basic">
            <summary>
            Represents information about a health record that is not considered personally
            identifiable.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Basic.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Basic"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Basic.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Basic.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Basic"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the basic data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a basic node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Basic.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the basic data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the basic data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Basic.ToString">
            <summary>
            Gets a string representation of the basic item.
            </summary>
            
            <returns>
            A string representation of the basic item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Basic.Gender">
            <summary>
            Gets or sets the gender of the person.
            </summary>
            
            <value>
            The person's gender.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the gender should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Basic.BirthYear">
            <summary>
            Gets or sets the birth year of the person.
            </summary>
            
            <value>
            An integer representing the year.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the birth year should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1000 or greater than
            3000 when setting the value.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Basic.Country">
            <summary>
            Gets or sets the country of residence.
            </summary>
            
            <value>
            A string representing the two-letter ISO3166-2 code for the 
            country/region.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Basic.PostalCode">
            <summary>
            Gets or sets the postal code of the country of residence.
            </summary>
            
            <value>
            A string representing the postal code.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Basic.City">
            <summary>
            Gets or sets the city of residence.
            </summary>
            
            <value>
            A string representing the city.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Basic.StateOrProvince">
            <summary>
            Gets or sets the state or province of residence.
            </summary>
            
            <value>
            A string representing the state or province.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the state
            should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Basic.FirstDayOfWeek">
            <summary>
            Gets or sets the preferred first day of the week.
            </summary>
            
            <value>
            A <see cref="T:System.DayOfWeek"/> instance representing the day.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the first day of the week 
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Basic.Languages">
            <summary>
            Gets the language(s) the person speaks.
            </summary>
            
            <value>
            A list of the languages.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BasicV2">
            <summary>
            Represents information about a health record that is not considered personally
            identifiable.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BasicV2.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BasicV2"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BasicV2.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BasicV2.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BasicV2"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the basic data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a basic node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BasicV2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the basic data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the basic data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BasicV2.ToString">
            <summary>
            Gets a string representation of the basic item.
            </summary>
            
            <returns>
            A string representation of the basic item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.Gender">
            <summary>
            Gets or sets the gender of the person.
            </summary>
            
            <value>
            The person's gender.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the gender should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.BirthYear">
            <summary>
            Gets or sets the birth year of the person.
            </summary>
            
            <value>
            An integer representing the year.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the birth year should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1000 or greater than
            3000 when setting the value.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.Country">
            <summary>
            Gets or sets the country of residence.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if the country should not be stored.
            </remarks>
            
            <value>
            A codable value representing the country. 
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.PostalCode">
            <summary>
            Gets or sets the postal code of the country of residence.
            </summary>
            
            <value>
            A string representing the postal code.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.City">
            <summary>
            Gets or sets the city of residence.
            </summary>
            
            <value>
            A string representing the city.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.StateOrProvince">
            <summary>
            Gets or sets the state or province of residence.
            </summary>
            
            <value>
            A string representing the state or province.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the state
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.FirstDayOfWeek">
            <summary>
            Gets or sets the preferred first day of the week.
            </summary>
            
            <value>
            A <see cref="T:System.DayOfWeek"/> instance representing the day.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the first day of the week 
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BasicV2.Languages">
            <summary>
            Gets the language(s) the person speaks.
            </summary>
            
            <value>
            A list of the languages.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BloodGlucose">
            <summary>
            Health record item type that represents a blood glucose measurement.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucose.#ctor">
            <summary>
            Constructs a new BloodGlucose health record item instance with 
            default values.
            </summary>
            
            <remarks>
            The item isn't added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucose.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Constructs the new blood glucose health record item instance
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date/time when the blood glucose reading was take.
            </param>
            
            <param name="value">
            The blood glucose value of the reading.
            </param>
            
            <param name="glucoseMeasurementType">
            How the glucose was measured; whole blood, plasma, etc. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BloodGlucose.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucose.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this BloodGlucose instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the blood glucose data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a blood-glucose node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucose.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the blood glucose data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the blood glucose data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.BloodGlucose.Value"/> or <see cref="P:Microsoft.Health.ItemTypes.BloodGlucose.GlucoseMeasurementType"/> 
            parameter has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucose.ToString">
            <summary>
            Gets a string representation of the blood glucose item.
            </summary>
            
            <returns>
            A string representation of the blood glucose item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodGlucose.When">
            <summary>
            Gets or sets the date/time when the blood glucose measurement
            was taken.
            </summary>
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodGlucose.Value">
            <summary>
            Gets or set the blood glucose value.
            </summary>
            
            <remarks>
            The blood glucose value is normally measured in mmol/L.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodGlucose.GlucoseMeasurementType">
            <summary>
            Gets or set the glucose measurement type.
            </summary>
            
            <remarks>
            The measurement type is how the reading was taken; whole blood,
            plasma, etc. The common value for the measurement types are defined
            in the glucose-measurement-type vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodGlucose.OutsideOperatingTemperature">
            <summary>
            Gets or sets whether the reading was taken outside the operating
            temperature for the device.
            </summary>
            
            <remarks>
            If the device does not support this function, the value is 
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodGlucose.IsControlTest">
            <summary>
            Gets or sets a value indicating whether the reading was taken as a 
            control test.
            </summary>
            
            <value>
            <b>true</b> if the reading was taken as a control test; otherwise, 
            <b>false</b>.
            </value>
            
            <remarks>
            If the device does not support this function, the value is 
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodGlucose.ReadingNormalcy">
            <summary>
            Gets or sets a value indicating whether the reading was within the 
            normal range of values.
            </summary>
            
            <value>
            <b>true</b> if the reading was within normal range; otherwise, 
            <b>false</b>. 
            </value>
            
            <remarks>
            If the device does not support this function, the value is 
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodGlucose.MeasurementContext">
            <summary>
            Gets or sets the contextual information about the reading.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the information.
            </value>
            
            <remarks>
            Common values for the measurement context can be found in the
            "glucose-measurement-context" vocabulary.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement">
            <summary>
            Represents a blood glucose measurement.
            </summary>
            
            <remarks>
            In HealthVault, blood glucose readings have values and display values. 
            All values are stored in a base unit of mmol/L. An application can 
            take a blood glucose value using any scale the application chooses and 
            can store the user-entered value as the display value, but the blood
            glucose value must be converted to mmol/L to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement"/> 
            class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement"/> 
            class with the specified value in millimoles per liter (mmol/L).
            </summary>
            
            <param name="millimolesPerLiter">
            The blood glucose measurement in millimoles per liter.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement"/> 
            class with the specified value in millimoles per liter (mmol/L) 
            and display value.
            </summary>
            
            <param name="millimolesPerLiter">
            The blood glucose measurement in millimoles per liter (mmol/L).
            </param>
            
            <param name="displayValue">
            The display value of the blood glucose measurement. This should 
            contain the exact measurement as entered by the user, even if it 
            uses some other unit of measure besides mmol/L. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies the value is a legal blood glucose measurement in 
            millimoles per liter (mmol/L).
            </summary>
            
            <param name="value">
            The blood glucose measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the blood glucose from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the blood glucose.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the blood glucose to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the blood glucose to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the blood glucose in the base units.
            </summary>
            <returns>
            The blood glucose as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BloodPressure">
            <summary>
            Represents a health record item type that encapsulates a blood 
            pressure measurement.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodPressure.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BloodPressure"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodPressure.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BloodPressure"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date/time when the blood pressure reading was take.
            </param>
            
            <param name="systolic">
            The systolic pressure of the reading.
            </param>
            
            <param name="diastolic">
            The diastolic pressure of the reading.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="systolic"/> or <paramref name="diastolic"/> 
            parameter is negative.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BloodPressure.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value
            >A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodPressure.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BloodPressure"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the blood pressure data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a bp node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodPressure.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the blood pressure data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the blood pressure data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.BloodPressure.Systolic"/> or <see cref="P:Microsoft.Health.ItemTypes.BloodPressure.Diastolic"/> property 
            has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodPressure.ToString">
            <summary>
            Gets a string representation of the blood pressure item.
            </summary>
            
            <returns>
            A string representation of the blood pressure item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodPressure.When">
            <summary>
            Gets or sets the date/time when the blood pressure measurement
            was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodPressure.Systolic">
            <summary>
            Gets or sets the systolic pressure of the reading.
            </summary>
            
            <value>
            An integer representing the pressure.
            </value>
            
            <remarks>
            This property must be set before the item is created or updated.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodPressure.Diastolic">
            <summary>
            Gets or sets the diastolic pressure of the reading.
            </summary>
            
            <value>
            An integer representing the pressure.
            </value>
            
            <remarks>
            This property must be set before the item is created or updated.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodPressure.Pulse">
            <summary>
            Gets or sets the pulse during the reading.
            </summary>
            
            <value>
            An integer representing the pulse.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the pulse should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than zero.
            </exception>
                    
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodPressure.IrregularHeartbeatDetected">
            <summary>
            Gets or sets a value indicating whether an irregular heartbeat was 
            detected.
            </summary>
            
            <value>
            <b>true</b> if an irregular heartbeat was detected; otherwise, <b>false</b>.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the reading does not support detecting an
            irregular heartbeat.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BloodOxygenSaturation">
            <summary>
            Percentage of oxygen saturation in the blood.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.BloodOxygenSaturation"/> with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Double)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.BloodOxygenSaturation"/> with specified parameters. 
            </summary>
            
            <param name="when">The date and time the measurement was taken.</param>
            
            <param name="value">The percentage of oxygen saturation in the blood.</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> is <b>null</b>. 
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/> is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BloodOxygenSaturation.TypeId">
            <summary>
            Retrieves the unique identifier for the blood oxygen saturation item type.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BloodOxygenSaturation"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the blood oxygen saturation data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "blood-oxygen-saturation" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the blood oxygen saturation data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the blood oxygen saturation data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.When"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BloodOxygenSaturation.ToString">
            <summary>
            Gets the description of a blood oxygen instance. 
            </summary>
            
            <returns>
            A string representation of the blood oxygen item. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.When">
            <summary>
            Gets or sets the date and time of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.Value">
            <summary>
            Gets or sets the measured blood oxygen saturation percentage. 
            </summary>
            
            <value>
            The measured blood oxygen saturation percentage.
            </value> 
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the <paramref name="value"/> parameter is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.MeasurementMethod">
            <summary>
            Gets or sets the technique used to obtain the measurement. 
            </summary>
            
            <value>
            The technique used to obtain the measurement.
            </value>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>. The preferred vocabulary 
            for this value is "blood-oxygen-saturation-measurement-method". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BloodOxygenSaturation.MeasurementFlags">
            <summary>
            Gets or sets the additional information about the measurement. 
            </summary>
            
            <value>
            The additional information about the measurement
            </value>
            
            <remarks>
            Examples: Incomplete measurement, irregular heartbeat. If the value is not known, 
            it will be set to <b>null</b>. The preferred vocabulary for this value is 
            "blood-oxygen-saturation-measurement-method".
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BodyCompositionValue">
            <summary>
            A single measurement of boyd composition.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyCompositionValue.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.BodyCompositionValue"/> class 
            with default values.
            </summary>
            
            <remarks>
            The mass-value element is used to store mass values, and the percentage-value is 
            used to store precentages. An application should set one or the other. When both 
            values are available, they should be stored in separate instance. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyCompositionValue.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.BodyCompositionValue"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the body composition value data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyCompositionValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the body composition value data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the body composition value item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the body composition value data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyCompositionValue.ToString">
            <summary>
            Gets a string representation of BodyCompositionValue. 
            </summary> 
            
            <returns>
            A string representation of the BodyCompositionValue.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyCompositionValue.MassValue">
            <summary>
            Gets or sets a body composition measurement stored as a mass.
            </summary>
            
            <remarks>
            Examples: 45 Kg, 15 lbs. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyCompositionValue.PercentValue">
            <summary>
            Gets or sets a body composition measurement stored as a percentage.  
            </summary>
            
            <remarks>
            Examples: 0.37 (37%), 0.075 (7.5%). 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BodyComposition">
            <summary>
            Information about the body composition of the record owner. 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.#ctor">
            <summary>
            Creates an instance of information about the body composition of the record owner
            with default values.
            </summary>
            
            <remarks>
            Examples: % body fat, lean muscle mass.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.BodyCompositionValue)">
            <summary>
            Creates an instance of information about the body composition of the record owner
            with specified time, measurement name, and value.
            </summary>
            
            <remarks>
            Examples: % body fat, lean muscle mass.
            </remarks>
            
            <param name="when"> 
            The date and time of the measurement. 
            </param>
            
            <param name="measurementName">
            The name of the measurement.
            </param>
            
            <param name="compositionValue"> 
            The value of the measurement. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/>, <paramref name="measurementName"/> or 
            <paramref name="compositionValue"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BodyComposition.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BodyComposition"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the body composition data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "body-composition" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the body composition data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the body composition data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.BodyComposition.When"/>, <see cref="P:Microsoft.Health.ItemTypes.BodyComposition.MeasurementName"/> or <see cref="P:Microsoft.Health.ItemTypes.BodyComposition.Value"/>
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyComposition.ToString">
            <summary>
            Gets the representation of a body composition instance.
            </summary>
            
            <returns>
            A string representation of the body composition item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.When">
            <summary>
            Gets or sets the date and time of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.MeasurementName">
            <summary>
            Gets or sets the name of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the name
            of this measurement.
            </value>
            
            <remarks>
            Examples: Body fat, lean muscle. The preferred vocabulary is 
            "body-composition-measurement-names".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.Value">
            <summary>
            Gets or sets the value of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.BodyCompositionValue"/> instance representing the value of 
            this measurement.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.MeasurementMethod">
            <summary>
            Gets or sets the technique used to obtain the measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the technique used 
            to obtain the measurement. 
            </value>
            
            <remarks>
            Examples: Bioelectrical impedance, DXA, Skinfold (calipers). If the measurement method 
            is missing, the value should be set to <b>null</b>. The preferred vocabulary is
            "body-composition-measurement-methods".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyComposition.Site">
            <summary>
            Gets or sets the body part that is the subject of the measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the site 
            </value>
            
            <remarks>
            Examples: Left arm, head, torso. If the site is absent, the measurement is for 
            the whole body. The preferred vocabulary is "body-composition-sites".
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.BodyDimension">
             <summary>
             Stores a body dimension.
             </summary>
            
             <remarks>
             Exmaples: Waist size, head circumference, length (pediatric). 
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.#ctor">
            <summary>
            Stores a body dimension.
            </summary>
            
            <remarks>
            Examples: Waist size, head circumference, length (pediatric). 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.Length)">
             <summary>
             Stores a body dimension.
             </summary>
             
             <remarks>
             Examples: Waist size, head circumference, length (pediatric). 
             </remarks>
            
             <param name="when">
             The date and time of the body dimension measurement.
             </param>
             
             <param name="measurementName">
             The name of the body dimension measurement.
             </param>
             
             <param name="value">
             The value of the body dimension measurement. 
             </param>
             
             <exception cref="T:System.ArgumentNullException"> 
             If <paramref name="when"/>, <paramref name="measurementName"/> or 
             <paramref name="value"/> is <b>null</b>.
             </exception>
             
        </member>
        <member name="F:Microsoft.Health.ItemTypes.BodyDimension.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.BodyDimension"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the body dimension data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "body-dimension" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the body dimension data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the body dimension data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.BodyDimension.When"/>, <see cref="P:Microsoft.Health.ItemTypes.BodyDimension.MeasurementName"/> or <see cref="P:Microsoft.Health.ItemTypes.BodyDimension.Value"/>
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.BodyDimension.ToString">
            <summary>
            Gets the representation of a body dimension instance. 
            </summary>
            
            <returns>
            A string representation of the body dimension instance. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyDimension.When">
            <summary>
            Gets or sets the date and time of the body dimension measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyDimension.MeasurementName">
            <summary>
            Gets or sets the name of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the name
            of this measurement.
            </value>
            
            <remarks>
            Choose the appropriate preferred vocabulary based on your scenario. 
            The preferred vocabularies are "body-dimension-measurement-names" 
            and "body-dimension-measurement-names-pediatrics".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.BodyDimension.Value">
            <summary>
            Gets or sets the value of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length"/> instance representing the value of 
            this measurement.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CalorieGuideline">
            <summary>
            Stores suggested calorie intak guidelines. 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.#ctor">
            <summary>
            Constructs an instance of suggested calorie intake guidelines with default values.
            </summary>
            
            <remarks>
            Examples: Daily calories suggested for weight loss, calories needed for weight 
            maintenance, BMR. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.GeneralMeasurement)">
            <summary>
            Constructs an instance of suggested calorie intake guideline with specified values. 
            </summary>
            
            <remarks>
            Examples: Daily calories suggested for weight loss, calories needed for weight 
            maintenance, BMR. 
            </remarks>
            
            <param name="when"> 
            The date and time the guidelines were created.
            </param>
            
            <param name="name"> 
            The name definies the guideline. 
            </param>
            
            <param name="calories"> 
            The number of calories to support the guideline. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/>, <paramref name="name"/> or <paramref name="calories"/> 
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.CalorieGuideline.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.CalorieGuideline"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the calorie guideline data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "carolie-guideline" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the calorie guideline data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the calorie guideline data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.CalorieGuideline.When"/>, <see cref="P:Microsoft.Health.ItemTypes.CalorieGuideline.Name"/> or <see cref="P:Microsoft.Health.ItemTypes.CalorieGuideline.Calories"/>
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CalorieGuideline.ToString">
            <summary>
            Gets the representation of a CalorieGuideline instance.
            </summary>
            
            <returns>
            A string representation of the CalorieGuideline instance.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CalorieGuideline.When">
            <summary>
            Gets or sets the date and time the guidelines were created.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CalorieGuideline.Name">
            <summary>
            Gets or sets the name of the guideline.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the guideline definition. 
            </value>
            
            <remarks>
            Examples: Maintain weight, Lose weight slowly, Gain weight slowly, Basal metabolic 
            rate (BMR). The preferred vocabulary is "calorie-guideline-names". 
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CalorieGuideline.Calories">
            <summary>
            Gets or sets the number of calories to support the guideline.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the number of 
            calories to support the guideline.
            </value>
            
            <remarks>
            This value expresses the number of calories for a specific time period. 
            For example, 2716 calories per day could be coded as follows:
            Display = "2716 calories/day"
            Structured Value = "2716"
            Structured Units = "calories-per-day"
            using the calorie-guideline-units vocabulary. 
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CardiacProfile">
            <summary>
            Represents a health record item type that encapsulates a person's 
            cardiac profile at a single point in time.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CardiacProfile.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CardiacProfile"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CardiacProfile.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CardiacProfile"/> class 
            with the specified date and time.
            </summary>
            
            <param name="when">
            The date/time when the cardiac profile was take.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.CardiacProfile.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CardiacProfile.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.CardiacProfile"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the cardiac profile data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a cardiac-profile node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CardiacProfile.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the cardiac profile data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the cardiac profile data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CardiacProfile.ToString">
            <summary>
            Gets a string representation of the cardiac profile item.
            </summary>
            
            <returns>
            A string representation of the cardiac profile item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.When">
            <summary>
            Gets or sets the date/time when the cardiac profile was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.IsOnHypertensionDiet">
            <summary>
            Gets or sets whether the person is on a hypertension specific
            diet.
            </summary>
            
            <value>
            True if the person is on a hypertension diet, false if not, or null
            if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.IsOnHypertensionMedication">
            <summary>
            Gets or sets whether the person is on a hypertension specific
            medication.
            </summary>
            
            <value>
            True if the person is on hypertension medication, false if not, or null
            if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.HasRenalFailureBeenDiagnosed">
            <summary>
            Gets or sets whether renal failure has been diagnosed for the person.
            </summary>
            
            <value>
            True if renal failure has been diagnosed for the person, false if not, 
            or null if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.HasDiabetesBeenDiagnosed">
            <summary>
            Gets or sets whether diabetes has been diagnosed for the person.
            </summary>
            
            <value>
            True if diabetes has been diagnosed for the person, false if not, 
            or null if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.HasFamilyHeartDiseaseHistory">
            <summary>
            Gets or sets whether heart disease has been diagnosed for anyone
            in the person's family.
            </summary>
            
            <value>
            True if heart disease has been diagnosed for anyone in the person's
            family, false if not, or null if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.HasFamilyStrokeHistory">
            <summary>
            Gets or sets whether stroke has been diagnosed for anyone
            in the person's family.
            </summary>
            
            <value>
            True if stroke has been diagnosed for anyone in the person's
            family, false if not, or null if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.HasPersonalHeartDiseaseHistory">
            <summary>
            Gets or sets whether the person has been diagnosed with heart disease.
            </summary>
            
            <value>
            True if the person has been diagnosed with heart disease, 
            false if not, or null if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CardiacProfile.HasPersonalStrokeHistory">
            <summary>
            Gets or sets whether the person has been diagnosed with a stroke.
            </summary>
            
            <value>
            True if the person has been diagnosed with a stroke, false if not, 
            or null if unknown.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CCD">
            <summary>
            Stores a Continuity of Care Document (CCD). 
            </summary>
            
            <remarks>
            The CCD XML can be accessed through the TypeSpecificXml property.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CCD.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.CCD"/> class, 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CCD.#ctor(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.CCD"/> class, 
            with specific data.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.CCD.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CCR">
            <summary>
            Stores a Continuity of Care Record (CCR). 
            </summary>
            
            <remarks>
            The CCR XML can be accessed through the TypeSpecificXml property.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CCR.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.CCR"/> class, 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CCR.#ctor(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.CCR"/> class, 
            with specific data.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.CCR.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CDA">
            <summary>
            Stores a Clinical Document Architecture (CDA) document. 
            </summary>
            
            <remarks>
            The CDA XML can be accessed through the TypeSpecificXml property.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CDA.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.CDA"/> class, 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CDA.#ctor(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.CDA"/> class, 
            with specific data.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.CDA.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CholesterolProfile">
            <summary>
            Represents a health record item type that encapsulates a person's 
            cholesterol profile (Lipid profile) at a single point in time.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CholesterolProfile.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CholesterolProfile"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CholesterolProfile.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CholesterolProfile"/> class 
            with the specified date.
            </summary>
            
            <param name="when">
            The date when the cholesterol profile was take.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.CholesterolProfile.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CholesterolProfile.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.CholesterolProfile"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the cholesterol profile data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a cholesterol-profile node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CholesterolProfile.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the cholesterol profile data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the cholesterol profile data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CholesterolProfile.ToString">
            <summary>
            Gets a string representation of the cholesterol profile.
            </summary>
            
            <returns>
            A string representing the cholesterol profile.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CholesterolProfile.When">
            <summary>
            Gets or sets the date when the cholesterol profile was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CholesterolProfile.LDL">
            <summary>
            Gets or sets the person's low density lipoprotein in mg/dL.
            </summary>
            
            <value>
            The value of the person's LDL measurement or <b>null</b> if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CholesterolProfile.HDL">
            <summary>
            Gets or sets the person's high density lipoprotein in mg/dL.
            </summary>
            
            <value>
            The value of the person's HDL measurement or <b>null</b> if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CholesterolProfile.TotalCholesterol">
            <summary>
            Gets or sets the person's total cholesterol in mg/dL.
            </summary>
            
            <value>
            The value of the person's total cholesterol measurement or <b>null</b> if unknown.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CholesterolProfile.Triglyceride">
            <summary>
            Gets or sets the person's triglyceride in mg/dL.
            </summary>
            
            <value>
            The value of the person's triglyceride measurement or <b>null</b> if unknown.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ClaimAmounts">
            <summary>
            The financial information related to a claim on an explanation of benefits.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ClaimAmounts.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ClaimAmounts"/> class with default values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called
             </remarks>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ClaimAmounts.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ClaimAmounts"/> class specifying mandatory values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called
             </remarks>
            
             <param name="chargedAmount">
             The amount charged.
             </param>
             <param name="negotiatedAmount">
             The amount negotiated between the provider and the payer.
             </param>
             <param name="coPayment">
             The copayment amount.
             </param>
             <param name="deductible">
             The deductible amount.
             </param>
             <param name="amountNotCovered">
             Amount for services not covered by the plan.
             </param>
             <param name="eligibleForBenefits">
             The amount that is eligible for benefits.
             </param>
             <param name="coinsurance">
             The amount paid by the person.
             </param>
             <param name="miscellaneousAdjustments">
             Adjustments that may affect the amount paid on the claim.
             </param>
             <param name="benefitsPaid">
             The amount paid by the payer.
             </param>
             <param name="patientResponsibility">
             The total amount paid by the patient.
             </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ClaimAmounts.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.ClaimAmounts"/> instance from the data in the specified XML.
             </summary>
            
             <param name="navigator">
             The XML to get the ClaimAmounts data from.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ClaimAmounts.WriteXml(System.String,System.Xml.XmlWriter)">
             <summary>
             Writes the XML representation of the ClaimAmounts into
             the specified XML writer.
             </summary>
            
             <param name="nodeName">
             The name of the outer node for the ClaimAmounts.
             </param>
            
             <param name="writer">
             The XML writer into which the ClaimAmounts should be
             written.
             </param>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName"/> parameter is <b>null</b> or empty.
             </exception>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ClaimAmounts.ToString">
             <summary>
             Gets a string representation of the ClaimAmounts.
             </summary>
            
             <returns>
             A string representation of the ClaimAmounts.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.ChargedAmount">
             <summary>
             Gets or sets the amount charged.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.NegotiatedAmount">
             <summary>
             Gets or sets the amount negotiated between the provider and the payer.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.CoPayment">
             <summary>
             Gets or sets the copayment amount.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.Deductible">
             <summary>
             Gets or sets the deductible amount.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.AmountNotCovered">
             <summary>
             Gets or sets the amount for services not covered by the plan.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.EligibleForBenefits">
             <summary>
             Gets or sets the amount that is eligible for benefits.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.PercentageCovered">
             <summary>
             Gets or sets the percentage of the eligable amount that is covered by the payer.
             </summary>
             
             <remarks>
             The value will be set to null if unknown.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.Coinsurance">
             <summary>
             Gets or sets the amount paid by the person.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.MiscellaneousAdjustments">
             <summary>
             Gets or sets the adjustments that may affect the amount paid on the claim.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.BenefitsPaid">
             <summary>
             Gets or sets the amount paid by the payer.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ClaimAmounts.PatientResponsibility">
             <summary>
             Gets or sets the total amount paid by the patient.
             </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CodableValue">
            <summary>
            Represents the value and code of an entry in the HealthVault vocabulary
            store.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.#ctor">
            <summary>
            Constructs a CodableValue with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String)">
            <summary>
            Constructs a CodableValue with an initial value for the Text.
            </summary>
            
            <param name="text">
            The text value of the codable value.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="text"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String,Microsoft.Health.ItemTypes.CodedValue)">
            <summary>
            Constructs a CodableValue with an initial value for the Text
            and the specified code.
            </summary>
            
            <param name="text">
            The text value of the codable value.
            </param>
            
            <param name="code">
            The code representation of the text value.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="text"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String,Microsoft.Health.VocabularyItem)">
            <summary>
            Constructs a CodableValue based on display value and
            a <see cref="T:Microsoft.Health.VocabularyItem"/>. 
            </summary>
            
            <param name="text">
            The text value of the codable value.
            </param>
            
            <param name="item">
            The <see cref="T:Microsoft.Health.VocabularyItem"/>. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="text"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> class 
            with the specified text, code value, vocabulary name, family, and version.
            </summary>
            
            <param name="text">
            The text value of the codable value.
            </param>
            
            <param name="code">
            The code representation of the text value.
            </param>
            
            <param name="vocabularyName">
            The name of the vocabulary the code belongs to.
            </param>
            
            <param name="family">
            The family of vocabulary terms that the code belongs to.
            </param>
            
            <param name="version">
            The version of the vocabulary the code belongs to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="text"/> or <paramref name="code"/> or 
            <paramref name="vocabularyName"/> parameter is <b>null</b> or empty.
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.#ctor(System.String,System.String,Microsoft.Health.VocabularyKey)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> class 
            with the specified text, code value, and vocabulary key.
            </summary>
            
            <param name="text">
            The text value of the codable value.
            </param>
            
            <param name="code">
            The code representation of the text value.
            </param>
            
            <param name="key">
            key for identifying a Vocabulary in the HealthLexicon.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="text"/> or <paramref name="code"/> or <paramref name="key"/>
            parameter is <b>null</b>.
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.IndexOf(Microsoft.Health.ItemTypes.CodedValue)">
            <summary>
            Determines the index of a specific item
            </summary>
            
            <param name="item">
            The <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/> to find the index of.
            </param>
            
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.Insert(System.Int32,Microsoft.Health.ItemTypes.CodedValue)">
            <summary>
            Inserts an code item at the specified index.
            </summary>
            
            <param name="index">
            The zero-based index at which item should be inserted.
            </param>
            
            <param name="item">
            The object to insert.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is out of range.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.RemoveAt(System.Int32)">
            <summary>
            Removes a code item at the specified index.
            </summary>
            
            <param name="index">
            The zero-based index of the item to remove.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is out of range.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.Add(Microsoft.Health.ItemTypes.CodedValue)">
            <summary>
            Adds an item to the code list. 
            </summary>
            
            <param name="item">
            The code item to add.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.Add(Microsoft.Health.VocabularyItem)">
            <summary>
            Encodes a <see cref="T:Microsoft.Health.VocabularyItem"/> as a CodedValue and
            adds it to the list of coded values.
            </summary>
            
            <param name="item">
            The <see cref="T:Microsoft.Health.VocabularyItem"/> to use. 
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.Clear">
            <summary>
            Removes all items from the code item list
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.Contains(Microsoft.Health.ItemTypes.CodedValue)">
            <summary>
            Gets a value indicating whether the code item list contains a 
            specific code.
            </summary>
            
            <param name="item">
            The code item to search for in the list.
            </param>
            
            <returns>
            <b>true</b> if the item is in the collection; otherwise, <b>false</b>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.CopyTo(Microsoft.Health.ItemTypes.CodedValue[],System.Int32)">
            <summary>
            Copies the elements of the code item list to an array, starting at 
            a particular array index.
            </summary>
            
            <param name="array">
            The array to copy the elements to.
            </param>
            
            <param name="arrayIndex">
            The array location at which to begin copying.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="arrayIndex"/> parameter is less than 0.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="array"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="array"/> parameter is multidimensional, 
            or the <paramref name="arrayIndex"/> value is equal to or greater 
            than the length of the array, or the number of elements in the 
            source collection is greater than the available space from <paramref name="arrayIndex"/> 
            to the end of the destination array, or a type cannot be cast 
            automatically to the type of the destination array.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.Remove(Microsoft.Health.ItemTypes.CodedValue)">
            <summary>
            Removes the first occurrence of this code item from the code item
            list.
            </summary>
            
            <param name="item">
            The <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/> object to remove.
            </param>
            
            <returns>
            <b>true</b> if removal succeeded; otherwise, <b>false</b>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the code list.
            </summary>
            
            <returns>
            An enumerator.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            
            <returns>
            An enumerator.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the vocabulary entry from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the vocabulary entry.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the vocabulary entry to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the vocabulary entry.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the vocabulary entry to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.CodableValue.Text"/>, <see cref="P:Microsoft.Health.ItemTypes.CodedValue.Value"/>, or
            <see cref="P:Microsoft.Health.ItemTypes.CodedValue.Family"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodableValue.ToString">
            <summary>
            Gets the string representation of a codable value.
            </summary>
            
            <returns>
            A string representing the value.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodableValue.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            
            <param name="index">
            The zero-based index of the element to get or set
            </param>
            
            <returns>
            The code item at the specified index.
            </returns>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="index"/> parameter is out of range.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodableValue.Count">
            <summary>
            Gets the number of code items
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodableValue.IsReadOnly">
            <summary>
            Gets a value indicating whether the code item list is read-only.
            </summary>
            
            <value>
            <b>true</b> if the list is read-only; otherwise, <b>false</b>.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodableValue.Text">
            <summary>
            Gets or sets the value of the codable value.
            </summary>
            
            <value>
            A string representing the value.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
            whitespace when setting.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodableValue.Codes">
            <summary>
            Gets coded versions of the value found in the HealthVault 
            Vocabulary store.
            </summary>
            
            <value>
            An IList instance representing the value versions.
            </value>
            
            <remarks>
            To have a coded representation of the <see cref="P:Microsoft.Health.ItemTypes.CodableValue.Text"/> property,
            add <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/> instances to the returned collection.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.CodedValue">
            <summary>
            Represents the code description for a <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/>.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodedValue.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodedValue.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/> class with 
            the specified code value and vocabulary.
            </summary>
            
            <param name="value">
            The identifying value for the code.
            </param>
            
            <param name="vocabularyName">
            The name of the vocabulary the code belongs to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter or <paramref name="vocabularyName"/>
            is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodedValue.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/> class 
            with the specified code value, vocabulary, family, and version.
            </summary>
            
            <param name="value">
            The identifying value for the code.
            </param>
            
            <param name="vocabularyName">
            The name of the vocabulary the code belongs to.
            </param>
            
            <param name="family">
            The family of vocabulary terms that the code belongs to.
            </param>
            
            <param name="version">
            The version of the vocabulary the code belongs to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> or <paramref name="vocabularyName"/> parameter 
            is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodedValue.#ctor(System.String,Microsoft.Health.VocabularyKey)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/> class 
            with the specified code value, vocabulary, family, and version.
            </summary>
            <param name="value">
            The identifying value for the code.
            </param>
            <param name="key">
            key for identifying a Vocabulary in the HealthLexicon.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> or <paramref name="key"/> parameter 
            is <b>null</b> or empty.
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodedValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the description of the code from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the coded value.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodedValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the code description to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the code value.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the code description to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.CodedValue.Value"/> or <see cref="P:Microsoft.Health.ItemTypes.CodedValue.VocabularyName"/> property 
            is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.CodedValue.ToString">
            <summary>
            Gets a string representation of the vocabulary item reference.
            </summary>
            
            <returns>
            A string representation of the vocabulary item reference.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodedValue.Value">
            <summary>
            Gets or sets the code value.
            </summary>
            
            <value>
            A string representing the code value.
            </value>
            
            <remarks>
            The code value is the identifier for the code in the specified
            vocabulary and family.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
            whitespace during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodedValue.Family">
            <summary>
            Gets or sets the code family.
            </summary>
            
            <value>
            A string representing the code family.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the property should not be stored.
            <br/><br/>
            The family represents the NCPDP value for a code.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodedValue.VocabularyName">
            <summary>
            Gets or sets the vocabulary name.
            </summary>
            
            <value>
            A string representing the vocabulary name.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> set is <b>null</b>, empty, or contains only
            whitespace during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.CodedValue.Version">
            <summary>
            Gets or sets the code version.
            </summary>
            
            <value>
            A string representing the code version.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the property should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Condition">
            <summary>
            Represents a health record item type that encapsulates a single 
            condition, issue, or problem.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Condition.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Condition"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Condition.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Condition"/> class with the 
            specified name.
            </summary>
            
            <param name="name">
            The name of the condition.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Condition.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Condition.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Condition"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the condition data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a condition node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Condition.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the condition data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the condition data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Condition.Name"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Condition.ToString">
            <summary>
            Gets a string representation of the condition item.
            </summary>
            
            <returns>
            A string representation of the condition item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Condition.Name">
            <summary>
            Gets or sets the name of the condition.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Condition.OnsetDate">
            <summary>
            Gets or sets the approximate date of the first occurrence of the
            condition.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> representing the 
            date of the first occurrence.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the onset date should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Condition.Status">
            <summary>
            Gets or sets the status of the condition.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the status.
            </value>
            
            <remarks>
            Examples of the status include values such as acute or chronic.
            <br/><br/>
            Set the value to <b>null</b> if the status should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Condition.StopDate">
            <summary>
            Gets or sets the approximate date the condition resolved.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> representing the date.
            </value>
            
            <remarks>
            For multiple acute episodes, this is the last date the condition
            resolved.
            <br/><br/>
            Set the value to <b>null</b> if the stop date should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Condition.StopReason">
            <summary>
            Gets or sets how the condition was resolved.
            </summary>
            
            <value>
            A string representing the condition resolution.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the reason should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Concern">
            <summary>
            A concern that a person has about a condition or life issue. 
            </summary>
            
            <remarks>
            A concern that a person has about a condition or life issue. 
            Concerns are more general than conditions, and are about the 
            person's feelings. Examples include "concerned about managing 
            a chronic condition", "family issues", "emotional issues", etc. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Concern"/> class, 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Concern"/> class,
            with a specified description. 
            </summary>
            
            <param name="description">
            The description of a concern.
            </param>
            
            <exception cref="T:System.ArgumentNullException"> 
            If <paramref name="description"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Concern"/> class,
            with the specified description. 
            </summary>
            
            <param name="description">
            The description of a concern.
            </param>
            
            <exception cref="T:System.ArgumentException"> 
            If <paramref name="description"/> is <b> null</b> or empty. 
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Concern.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Concern"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the concern data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a concern node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the concern data to the specified XmlWriter.
             </summary>
             
             <param name="writer">
             The XmlWriter to write the concern data to.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> is <b>null</b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.Concern.Description"/> is <b>null</b> or empty.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Concern.ToString">
            <summary>
            Gets the description of a concern instance.
            </summary>
            
            <returns>
            A string representation of the concern item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Concern.Description">
            <summary>
            Gets or sets the description of a concern.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Concern.Status">
            <summary>
            Gets or sets the status of the concern.
            </summary>
            
            <remarks>
            Examples of status include active or inactive. If the 
            status is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ConditionEntry">
            <summary>
            Defines a single health or medical issue/problem.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ConditionEntry"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ConditionEntry"/> class 
            with name.
            </summary>
            
            <param name="name">
            The name or description of a condition.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.Condition"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the condition data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the condition data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the condition item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the condition data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.ConditionEntry.Name"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ConditionEntry.ToString">
            <summary>
            Gets a string of the name or description of the condition item.
            </summary> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.Name">
            <summary>
            Gets or sets the name or description of a medical condition entry.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Name"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.OnsetDate">
            <summary>
            Gets or sets the date of onset or the first diagnosis.  
            </summary>
            
            <remarks>
            The onset date should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.ResolutionDate">
            <summary>
            Gets or sets the date the condition resolved (or for multiple acute
            episodes, the last date the condition resolved).
            </summary>
            
            <remarks>
            The resolution date should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.Resolution">
            <summary>
            Gets or sets the resolution which is a statement of how the condition 
            was resolved.  
            </summary>
            
            <remarks>
            The resolution of a condition should be set to <b>null</b> if it is unknown.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.Occurrence">
            <summary>
            Gets or sets the description of how often the condition occurs.
            </summary>
            
            <remarks>
            Examples of occurrence include acute, chronic. The occurrence of condition
            should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ConditionEntry.Severity">
             <summary>
             Gets or sets the severity of a condition.  
             </summary>
             
             <remarks>
             The severity should be set to <b>null</b> if it is unknown.
             </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Contact">
            <summary>
            Represents a health record item type that encapsulates a contact.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contact.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Contact"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contact.#ctor(Microsoft.Health.ItemTypes.ContactInfo)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Contact"/> class with the 
            specified contact information.
            </summary>
            
            <param name="contactInfo">
            The information about the contact.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="contactInfo"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Contact.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contact.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Contact"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the contact data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a contact node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contact.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the contact data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the contact data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Contact.ContactInformation"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contact.ToString">
            <summary>
            Gets a string representation of the contact item.
            </summary>
            
            <returns>
            A string representation of the contact item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contact.ContactInformation">
            <summary>
            Gets or sets the contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ContactInfo"/> containing the information.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ContactInfo">
            <summary>
            Represents information about a contact person.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ContactInfo.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ContactInfo"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ContactInfo.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the contact information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ContactInfo.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the contact information into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the contact information.
            </param>
            
            <param name="writer">
            The XML writer into which the contact information should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            A mandatory property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ContactInfo.ToString">
            <summary>
            Gets a string representation of the contact information.
            </summary>
            
            <returns>
            A string representation of the contact information.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ContactInfo.PrimaryAddress">
            <summary>
            Gets the first address that is marked as IsPrimary".
            </summary>
            
            <value>
            The first <see cref="P:Microsoft.Health.ItemTypes.ContactInfo.Address"/> value that is marked as IsPrimary, 
            or <b>null</b> if no primary addresses were found.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ContactInfo.PrimaryPhone">
            <summary>
            Gets the first telephone number that is marked as IsPrimary.
            </summary>
            
            <value>
            The first value of <see cref="P:Microsoft.Health.ItemTypes.ContactInfo.Phone"/> that is marked as 
            IsPrimary, or <b>null</b> if no primary telephone numbers 
            were found.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ContactInfo.PrimaryEmail">
            <summary>
            Gets the first email that is marked as IsPrimary.
            </summary>
            
            <value>
            The first value of <see cref="P:Microsoft.Health.ItemTypes.ContactInfo.Email"/> that is marked as IsPrimary, 
            or <b>null</b> if no primary email addresses were found.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ContactInfo.Address">
            <summary>
            Gets the addresses for the contact.
            </summary>
            
            <value>
            A collection of addresses.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ContactInfo.Phone">
            <summary>
            Gets the telephone numbers for the contact.
            </summary>
            
            <value>
            A collection of phone numbers.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ContactInfo.Email">
            <summary>
            Gets the email addresses for the contact.
            </summary>
            
            <value>
            A collection of email addresses.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Contraindication">
            <summary>
            Represents a health record item type that encapsulates a contraindication.
            </summary>
            
            <remarks>
            A contraindication consists of the substances (such as foods or drugs) that interacts badly
            with a specific condition or drugs a patient is already taking.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Contraindication"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Contraindication"/> class with the 
            specified substance and status.
            </summary>
            
            <param name="substance">
            The substance that is contraindicated.
            </param>
            
            <param name="status">
            The status of the contraindication. Usually 'Active' or 'inactive'.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="substance"/> or <paramref name="status"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Contraindication.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            <value>A GUID.</value>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this contraindication instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the contraindication data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a contraindication node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the contraindication data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the contraindication data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Contraindication.Substance"/> or <see cref="P:Microsoft.Health.ItemTypes.Contraindication.Status"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Contraindication.ToString">
            <summary>
            Gets a string representation of the contraindication item.
            </summary>
            
            <returns>
            A string representation of the contraindication item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.Substance">
            <summary>
            Gets or sets the substance of the contraindication.
            </summary>
            
            <value>
            A codable value indicating the substance that is contraindicated.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.Status">
            <summary>
            Gets or sets the status of the contraindication.
            </summary>
            
            <value>
            The status of the contraindication is usually 'active' or 'inactive'.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.Source">
            <summary>
            Gets or sets the source of the contraindication.
            </summary>
            
            <value>
            For example, a contraindication against leafy green
            vegetables might have as a source the blood thinner Warfarin, which would be coded here
            using an appropriate medication vocabulary.
            </value>
            
            <remarks>
            If the source is unknown the value will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.Documenter">
            <summary>
            Gets or sets the documenter of the contraindication.
            </summary>
            
            <value>
            For example, a contraindication against leafy green
            vegetables might have as a source the blood thinner Warfarin, which would be coded here
            using an appropriate medication vocabulary.
            </value>
            
            <remarks>
            This is the person that documented the issue (physician, pharmacist, etc.)
            If the documenter is unknown the value will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Contraindication.DocumentedDate">
            <summary>
            Gets or sets the date the contraindication was documented.
            </summary>
            
            <remarks>
            If the documented date is unknown the value will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DailyMedicationUsage">
            <summary>
            Represents a health record item type that encapsulates a person's 
            medication and supplement usage for a day.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DailyMedicationUsage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DailyMedicationUsage"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DailyMedicationUsage.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.CodableValue,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DailyMedicationUsage"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date when the medication/supplement was consumed.
            </param>
            
            <param name="drugName">
            The name of the drug.
            </param>
            
            <param name="dosesConsumed">
            The number of doses consumed by the person.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> or <paramref name="drugName"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.DailyMedicationUsage.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DailyMedicationUsage.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.DailyMedicationUsage"/> instance from the 
            data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medication usage data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a <see cref="T:Microsoft.Health.ItemTypes.DailyMedicationUsage"/> node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DailyMedicationUsage.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the daily medication usage data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the daily medication usage data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.DrugName"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DailyMedicationUsage.ToString">
            <summary>
            Gets a string representation of the daily medication usage.
            </summary>
            
            <returns>
            A string representation of the daily medication usage item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.When">
            <summary>
            Gets or sets the date of the medication usage.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> representing the date.
            </value>
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.DrugName">
            <summary>
            Gets or sets the name of the drug.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the drug name.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.DosesConsumed">
            <summary>
            Gets or sets the number of doses of the drug consumed in the day.
            </summary>
            
            <value>
            An integer representing the number of doses consumed by the person
            in the specified day.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.PurposeOfUse">
            <summary>
            Gets or sets the purpose of the medication or supplement.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the purpose of
            the medication or supplement.
            </value>
                    
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.IntendedDoses">
            <summary>
            Gets or sets the intended number of doses the person should take in a day.
            </summary>
            
            <value>
            An integer representing the intended number of doses the person
            should take in a day. If this value is unknown, it can be set to <b>null</b>.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.UsageSchedule">
            <summary>
            Gets or sets the usage schedule.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the schedule of usage.
            </value>
                    
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.DrugForm">
            <summary>
            Gets or sets the form by which the drug/supplement is taken.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the form by which 
            the drug/supplement is taken.
            </value>
                    
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.PrescriptionType">
            <summary>
            Gets or sets the means by which the drug was determined to be needed.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the means by which
            the drug was determined to be needed.
            </value>
                    
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DailyMedicationUsage.SingleDoseDescription">
            <summary>
            Gets or sets a description of a single dose.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing a description
            of a single dose.
            </value>
                    
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Delivery">
            <summary>
            Represents the details of the delivery of a baby.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Delivery.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Delivery"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Delivery.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the delivery.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Delivery.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the delivery into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the delivery.
            </param>
            
            <param name="writer">
            The XML writer into which the delivery should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Delivery.ToString">
            <summary>
            Gets a string representation of the delivery.
            </summary>
            
            <returns>
            A string representation of the delivery.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Location">
            <summary>
            Gets or sets the place where the delivery occurred.
            </summary>
            
            <remarks>
            If there is no information about the location of the delivery the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.TimeOfDelivery">
            <summary>
            Gets or sets the date/time of the delivery.
            </summary>
            
            <remarks>
            If there is no information about the time of the delivery the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.LaborDuration">
            <summary>
            Gets or sets the duration of labor in minutes.
            </summary>
            
            <remarks>
            If there is no information about the labor duration the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/>is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Complications">
            <summary>
            Gets a collection containing any complications that occurred during labor and delivery.
            </summary>
            
            <remarks>
            If there is no information about the complications the collection should be empty.
            The preferred vocabulary for this value is "delivery-complications". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Anesthesia">
            <summary>
            Gets a collection containing any anesthesia used during labor and delivery.
            </summary>
            
            <remarks>
            If there is no information about the anesthesia the collection should be empty.
            The preferred vocabulary for this value is "anesthesia-methods". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.DeliveryMethod">
            <summary>
            Gets or sets the method of delivery.
            </summary>
            
            <remarks>
            If there is no information about the delivery method the value should be set to <b>null</b>.
            The preferred vocabulary for this value is "delivery-methods". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Outcome">
            <summary>
            Gets or sets the outcome for a fetus.
            </summary>
            
            <remarks>
            If there is no information about the outcome the value should be set to <b>null</b>.
            The preferred vocabulary for this value is "pregnancy-outcomes". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Baby">
            <summary>
            Gets or sets details about a baby.
            </summary>
            
            <remarks>
            If there is no information about the baby the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Delivery.Note">
            <summary>
            Gets or sets additional information about the delivery.
            </summary>
            
            <remarks>
            If there are no additional notes the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Device">
            <summary>
            Represents a health record item type that encapsulates a medical device.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Device.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Device"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Device.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Device"/> class with the 
            specified date and time.
            </summary>
            
            <param name="when">
            The date and  time relevant for the medical device.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Device.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Device.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this medical device instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medical device data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a medical device node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Device.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the medical device data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the medical device data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Device.When"/> has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Device.ToString">
            <summary>
            Gets a string representation of the device item.
            </summary>
            
            <returns>
            A string representation of the device item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Device.When">
            <summary>
            Gets or sets the date/time relevant for the medical device.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Device.DeviceName">
            <summary>
            Gets or sets the device name of the medical device.
            </summary>
            
            <value>
            A string representing the device name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the device name should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Device.Vendor">
            <summary>
            Gets or sets the vendor contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the vendor contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Device.Model">
            <summary>
            Gets or sets the model of the medical device.
            </summary>
            
            <value>
            A string representing the device model.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the model should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Device.SerialNumber">
            <summary>
            Gets or sets the serial number of the medical device.
            </summary>
            
            <value>
            A string representing the device serial number.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the serial number should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Device.AnatomicSite">
             <summary>
             Gets or sets the position on the body from which the device 
             takes readings.
             </summary>
             
            <value>
             A string representing the position.
             </value>
             
             <remarks>
             Set the value to <b>null</b> if the anatomic site should not be 
             stored.
             </remarks>
             
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Device.Description">
            <summary>
            Gets or sets the description of the medical device.
            </summary>
            
            <value>
            A string representing the device description.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the description should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DiabeticProfile">
            <summary>
            Represents a health record item type that encapsulates a person's 
            diabetic profile at a single point in time.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DiabeticProfile.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DiabeticProfile"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DiabeticProfile.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DiabeticProfile"/> class 
            with the specified date and time.
            </summary>
            
            <param name="when">
            The date/time when the diabetic profile was take.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.DiabeticProfile.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DiabeticProfile.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.DiabeticProfile"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the diabetic profile data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a diabetic-profile node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DiabeticProfile.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the diabetic profile data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the diabetic profile data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DiabeticProfile.ToString">
            <summary>
            Gets a string representation of the diabetic profile item.
            </summary>
            
            <returns>
            A string representation of the diabetic profile item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DiabeticProfile.When">
            <summary>
            Gets or sets the date/time when the diabetic profile was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DiabeticProfile.MaximumHbA1C">
            <summary>
            Gets or sets the person's maximum HbA1C.
            </summary>
            
            <value>
            A number representing the maximum HbA1C.
            </value>
            
            <remarks>
            If the maximum HbA1C is unknown, the value can be set to
            <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DiabeticProfile.TargetGlucoseZoneGroups">
            <summary>
            Gets the target glucose zone groups.
            </summary>
            
            <value>
            A collection of zone groups.
            </value>
            
            <remarks>
            Target glucose zones are grouped to allow different sets of
            target zones based on a person's needs.
            To add a group of target glucose zones, call the Add method on the
            returned collection.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DietaryDailyIntake">
            <summary>
            Represents a health record item type that encapsulates a person's 
            dietary intake for a day.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DietaryDailyIntake.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DietaryDailyIntake"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DietaryDailyIntake.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DietaryDailyIntake"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date when the food was consumed.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.DietaryDailyIntake.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DietaryDailyIntake.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.DietaryDailyIntake"/> instance from the 
            data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the dietary intake data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a <see cref="T:Microsoft.Health.ItemTypes.DietaryDailyIntake"/> node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DietaryDailyIntake.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the dietary daily intake data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the dietary daily intake data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DietaryDailyIntake.ToString">
            <summary>
            Gets a string representation of the dietary daily intake item.
            </summary>
            
            <returns>
            A string representation of the dietary daily intake item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.When">
            <summary>
            Gets or sets the date of the dietary intake.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> representing the date.
            </value>
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.Calories">
            <summary>
            Gets or sets the caloric intake for the day.
            </summary>
            
            <value>
            An integer representing the intake.
            </value> 
            
            <remarks>
            If the caloric intake is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.TotalFat">
            <summary>
            Gets or sets the total intake of fat for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the fat intake.
            </value> 
            
            <remarks>
            If the total fat is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.SaturatedFat">
            <summary>
            Gets or sets the intake of saturated fat for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the fat intake.
            </value> 
            
            <remarks>
            If the saturated fat is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.TransFat">
            <summary>
            Gets or sets the intake of trans fat for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the fat intake.
            </value> 
            
            <remarks>
            If the trans fat is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.Protein">
            <summary>
            Gets or sets the intake of protein for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the protein intake.
            </value> 
            
            <remarks>
            If the protein intake is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.TotalCarbohydrates">
            <summary>
            Gets or sets the total intake of carbohydrates for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the 
            carbohydrate intake.
            </value> 
            
            <remarks>
            If the total carbohydrates intake is not known, the value can be 
            set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.DietaryFiber">
            <summary>
            Gets or sets the intake of dietary fiber for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the fiber intake.
            </value> 
            
            <remarks>
            If the dietary fiber intake is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.Sugars">
            <summary>
            Gets or sets the intake of sugars for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the sugar intake.
            </value> 
            
            <remarks>
            If the sugar intake is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.Sodium">
            <summary>
            Gets or sets the intake of sodium for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the sodium intake.
            </value> 
            
            <remarks>
            If the sodium intake is not known the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DietaryDailyIntake.Cholesterol">
            <summary>
            Gets or sets the intake of cholesterol for the day.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the cholesterol intake.
            </value> 
            
            <remarks>
            If the cholesterol intake is not known, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Directive">
             <summary>
             Represents a health record item type that encapsulates an advance directive.
             </summary>
            
             <remarks>
             An advance directive is a legal document that provides directions for future
             health care decisions in case the patient becomes incapacitated.
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Directive.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Directive"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Directive.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Directive"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="startDate">
            The date the directive takes effect.
            </param>
            
            <param name="stopDate">
            The date the directive stops being effective.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="startDate"/> parameter or <paramref name="stopDate"/>
            is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Directive.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Directive.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Directive"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the directive data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node of the <paramref name="typeSpecificXml"/> 
            parameter is not a directive node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Directive.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the directive data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the directive data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Directive.StartDate"/> or <see cref="P:Microsoft.Health.ItemTypes.Directive.StopDate"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Directive.ToString">
            <summary>
            Gets a string representation of the directive item.
            </summary>
            
            <returns>
            A string representation of the directive item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.Description">
            <summary>
            Gets or sets the description of the directive.
            </summary>
            
            <returns>
            A string representing the directive description.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
            whitespace when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.StartDate">
            <summary>
            Gets or sets the approximate date of the directive is effective.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the 
            effective date of the directive.
            </returns> 
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.StopDate">
            <summary>
            Gets or sets the approximate date the directive is no longer to
            be considered.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the 
            stop date of the directive. 
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.FullResuscitation">
            <summary>
            Gets or sets a value indicating the resuscitation status.
            </summary>
            
            <returns>
            <b>true</b> for full resuscitation; otherwise, <b>false</b>.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.ProhibitedInterventions">
            <summary>
            Gets or sets the list of prohibited interventions in this directive.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the list.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.AdditionalInstructions">
            <summary>
            Gets or sets additional directive instructions.
            </summary>
            
            <returns>
            A string representing the instructions.
            </returns>
            
            <remarks>
            Set the value to <b>null</b> if the manufacturer should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.AttendingPhysician">
            <summary>
            Gets or sets the attending physician endorsement details.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.AttendingPhysicianEndorsement">
            <summary>
            Gets or sets the date and time for the attending physician 
            endorsement details.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date and time.
            </returns> 
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.AttendingNurse">
            <summary>
            Gets or sets the attending nurse endorsement details.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the nurse 
            endorsement details.
            </returns>   
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.AttendingNurseEndorsement">
            <summary>
            Gets or sets the date and time for the attending nurse endorsement details.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date and time.
            </returns> 
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.ExpirationDate">
            <summary>
            Gets or sets the date and time when the patient expired.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date and time.
            </returns> 
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.DiscontinuationDate">
            <summary>
            Gets or sets the date/time when clinical support was discontinued.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date and time.
            </returns> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.DiscontinuationPhysician">
            <summary>
            Gets or sets the attending physician discontinuation details.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the details.
            </returns> 
            
            <remarks>
            This type provides discontinuation details including name, identity, 
            and signature date and time of the attending physician.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.DiscontinuationPhysicianEndorsement">
            <summary>
            Gets or sets the date and time for the attending physician 
            discontinuation endorsement.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the 
            date and time.
            </returns> 
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.DiscontinuationNurse">
            <summary>
            Gets or sets the attending nurse discontinuation details.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the details.
            </returns> 
            
            <remarks>
            This type provides discontinuation details including name, identity, 
            and signature date and time of the attending nurse.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Directive.DiscontinuationNurseEndorsement">
            <summary>
            Gets or sets the date and time for the attending nurse 
            discontinuation endorsement.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date and time.
            </returns> 
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DischargeSummary">
            <summary>
            Represents a health record item that encapsulates a discharge summary.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DischargeSummary.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DischargeSummary"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DischargeSummary.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DischargeSummary"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date and time of the discharge summary.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.DischargeSummary.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DischargeSummary.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this discharge summary instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the discharge summary data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node of the <paramref name="typeSpecificXml"/> parameter is not
            a discharge summary node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DischargeSummary.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the discharge summary data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the discharge summary data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DischargeSummary.ToString">
            <summary>
            Gets a string representation of the discharge summary.
            </summary>
            
            <returns>
            A string representation of the discharge summary.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.When">
            <summary>
            Gets or sets the date and time when the discharge summary occurred.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </returns>
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.Type">
            <summary>
            Gets or sets the type for the discharge summary.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the type.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the type should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.Category">
            <summary>
            Gets or sets the category for the discharge summary.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the category.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the category should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.Setting">
            <summary>
            Gets or sets the setting for the discharge summary.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the setting.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the setting should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.Specialty">
            <summary>
            Gets or sets the medical specialty for the discharge summary.
            </summary>
            
            <returns>
            A string representing the specialty.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the medical specialty should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.Text">
            <summary>
            Gets or sets the textual content for the discharge summary.
            </summary>
            
            <returns>
            A string representing the text content.
            </returns>
            
            <remarks>
            Set the value to <b>null</b> if the medical specialty should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.PrimaryProvider">
            <summary>
            Gets or sets the primary provider contact information.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the primary provider.
            </returns>
            
            <remarks>
            Set the value to <b>null</b> if the primary provider contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.PrimaryProviderEndorsement">
            <summary>
            Gets or sets the date and time for the primary provider endorsement details.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date and time.
            </returns>
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.SecondaryProvider">
            <summary>
            Gets or sets the secondary provider contact information.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the secondary provider.
            </returns>
            
            <remarks>
            Set the value to <b>null</b> if the secondary provider contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.SecondaryProviderEndorsement">
            <summary>
            Gets or sets the date and time for the secondary provider endorsement details.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date and time.
            </returns>
            
            <remarks>
            The value defaults to the current year, month, and day.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.DischargeDateTime">
            <summary>
            Gets or sets the approximate date and time discharged.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date and time.
            </returns> 
            
            <remarks>
            An approximate date must have a year and may also have the month, 
            day, or both.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.AdmittingDiagnosis">
            <summary>
            Gets or sets the admitting diagnosis for the discharge summary.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the diagnosis.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the admitting diagnosis should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.PrincipalDiagnosis">
            <summary>
            Gets or sets the principal diagnosis for the discharge summary.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the principal diagnosis.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the principal diagnosis should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.AdditionalDiagnosis">
            <summary>
            Gets or sets the additional diagnosis for the discharge summary.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the additional diagnosis.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the additional diagnosis should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.PrincipalProcedurePhysician">
            <summary>
            Gets or sets the principal procedure physician contact information.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the contact information.
            </returns>
            
            <remarks>
            Set the value to <b>null</b> if the principal procedure physician contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.PrincipalProcedure">
            <summary>
            Gets or sets the principal procedure for the discharge summary.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the principal procedure.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the principal procedure should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DischargeSummary.AdditionalProcedure">
            <summary>
            Gets or sets the additional procedure for the discharge summary.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the additional 
            procedure.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the additional procedure should not be 
            stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DisplayValue">
            <summary>
            Represents the display value for a length, weight, or other type
            of measurement.
            </summary>
            
            <remarks>
            A display value differs from a value in that it is the value as entered
            by the user rather than the value converted to a base unit. The unit
            used can also reference the unit through the HealthVault dictionary code.
            
            Single-valued display values ("15 pounds") should be expressed using the
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Value"/> and <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> properties. 
            
            Multi-valued display values ("12 pounds 3 ounces") can be expressed using the 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Text"/> property, but should also be expressed using value and 
            units ("12.25 pounds").
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DisplayValue.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DisplayValue"/> class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DisplayValue.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DisplayValue"/> class 
            with the specified value.
            </summary>
            
            <param name="value">
            The value as it was entered.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DisplayValue.#ctor(System.Double,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DisplayValue"/> class 
            with the specified value and units.
            </summary>
            
            <param name="value">
            The value as it was entered.
            </param>
            
            <param name="units">
            The units of the <paramref name="value"/> as it was
            entered.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="units"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DisplayValue.#ctor(System.Double,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DisplayValue"/> class with 
            the specified value, units, and units code.
            </summary>
            
            <param name="value">
            The value as it was entered.
            </param>
            
            <param name="units">
            The units of the <paramref name="value"/> as it was
            entered.
            </param>
            
            <param name="unitsCode">
            The Health Lexicon vocabulary code for the unit of measure.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="units"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DisplayValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the display value from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the display value.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DisplayValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the display value to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the display value.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the display value to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DisplayValue.ToString">
            <summary>
            Retrieves a string representation of the display value.
            </summary>
            
            <returns>
            The value with the optional units.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode">
            <summary>
            Gets or sets the code used in the HealthVault Dictionary to represent
            the units.
            </summary>
            
            <value>
            A string representing the code.
            </value>
            
            <remarks>
            The code is used to abstract the units from the application so
            that the application can retrieve the appropriate value for the
            culture desired.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DisplayValue.Units">
            <summary>
            Gets or sets the units of measure as defined by the user.
            </summary>
            
            <value>
            A string representing the units.
            </value>
            
            <remarks>
            When the units are different from the base units for the particular
            type of measurement, the units should be set and if possible the
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> should also be set.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> set is <b>null</b>, empty.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DisplayValue.Value">
            <summary>
            Gets or sets the display value.
            </summary>
            
            <value>
            A number representing the display value.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DisplayValue.Text">
            <summary>
            Gets or sets the display text.
            </summary>
            
            <value>
            A string representing the display value.
            </value>
            
            <remarks>
            If the display value cannot be properly expressed as "number units", the
            Text property can be used to express the display value. An
            example of this would be expressing a height as "5 feet 8 inches".
            
            Applications that use the Text property should still express the value
            in the "number units" format for applications that predate the introduction
            of this property.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> set is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DoseValue">
            <summary>
            Represents a medicinal dose value.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoseValue.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DoseValue"/> class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoseValue.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DoseValue"/> class with 
            the specified exact dosage.
            </summary>
            
            <param name="exactDosage">
            The exact dosage.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="exactDosage"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoseValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the dose value from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the dose value.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is null.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoseValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the dose to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the dose.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the dose to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is null or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is null.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoseValue.ToString">
            <summary>
            Gets a string representation of the dose value.
            </summary>
            
            <returns>
            A string representing the dose value.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DoseValue.Description">
            <summary>
            Gets or sets a description of the dosage.
            </summary>
            
            <remarks>
            If there is no description then the value may be set to null.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DoseValue.ExactDose">
            <summary>
            Gets or sets an exact value for the dosage.
            </summary>
            
            <value>
            A number representing the exact dosage value.
            </value>
            
            <remarks>
            If there is no exact value, then the value can be set to null.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DoseValue.MinDose">
            <summary>
            Gets or sets a minimum value for the dosage.
            </summary>
            
            <value>
            A number representing the minimum dosage value.
            </value>
            
            <remarks>
            If there is no minimum value, then the value can be set to null.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DoseValue.MaxDose">
            <summary>
            Gets or sets a maximum value for the dosage.
            </summary>
            
            <value>
            A number representing the maximum dosage value.
            </value>
            
            <remarks>
            If there is no maximum value, then the value can be set to null.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DoubleMeasurement">
            <summary>
            Represents a measurement of type double and display.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DoubleMeasurement"/> class using 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DoubleMeasurement"/> class 
            with the specified value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DoubleMeasurement"/> class 
            with the specified value and optional display value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
            <param name="displayValue">
            The display value of the measurement. This should contain the
            exact measurement as entered by the user even if it uses some
            other unit of measure. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies that the value is a legal value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the measurement from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the measurement to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the measurement to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleMeasurement.GetValueString(System.Double)">
            <summary>
            Retrieves a string representation of the measurement in the base units.
            </summary>
            
            <returns>
            The measurement as a string in the base units.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DoubleMeasurement.ValueElementName">
            <summary>
            Gets or sets the name of the element that defines the value for 
            the measurement.
            </summary>
            
            <returns>
            A string representing the element name.
            </returns>
            
            <remarks>
            The default value for the element name is "value" but should be
            overridden in derived classes to provide a specific element name
            where appropriate.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DoubleRange">
            <summary>
            Represents a data range based on the <see cref="T:System.Double"/> type.
            </summary>
            
            <remarks>
            A range consists of a minimum range value and a maximum range value of type
            <see cref="T:System.Double"/>
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Range`1">
            <summary>
            Represents a data range based on a generic type.
            </summary>
            
            <remarks>
            A range consists of a minimum range value and a maximum range value of the specific
            generic type.
            </remarks>
            
            <typeparam name="RangeType">
            The type of the minimum and maximum values for the range.
            </typeparam>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Range`1.#ctor">
            <summary>
            Creates a new instance of the Range class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Range`1.#ctor(`0,`0)">
            <summary>
            Constructs a new instance of the Range class with the 
            specified min and max range values.
            </summary>
            
            <param name="minRange">
            The minimum value for the range.
            </param>
            
            <param name="maxRange">
            The maximum value for the range.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="minRange"/> or <paramref name="maxRange"/> would cause the value to
            be "unset".
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Range`1.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the range from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the range.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Range`1.ReadRangeValue(System.Xml.XPath.XPathNavigator)">
            <summary>
            Reads the value from the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> as a 
            <typeparamref name="RangeType"/>.
            </summary>
            
            <param name="navigator">
            The <see cref="T:System.Xml.XPath.XPathNavigator"/> to read the value from.
            </param>
            
            <returns>
            The value as a <typeparamref name="RangeType"/>.
            </returns>
            
            <remarks>
            Derived classes must override and read the value from the XML and convert it to the
            type for the range.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Range`1.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the range data to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the range data.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the range data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Range`1.WriteRangeValue(System.String,`0,System.Xml.XmlWriter)">
            <summary>
            Writes the specified range value to the specified writer with the specified node name.
            </summary>
            
            <param name="nodeName">
            The name of the node to use when writing the value.
            </param>
            
            <param name="value">
            The value to be written.
            </param>
            
            <param name="writer">
            The writer to write the value element to.
            </param>
            
            <remarks>
            Derived classes must override to provide the implementation of writing the value to
            the XML.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Range`1.VerifyRangeValue(`0)">
            <summary>
            Verifies that the specified range value is an appropriate value for the range.
            </summary>
            
            <param name="value">
            The value to verify.
            </param>
            
            <remarks>
            Since both the maximum and minimum values for the range must be set, this method is used
            to verify that the value is not "unset". For example, the value is not <b>null</b> for
            a reference type. Derived classes should override and throw an 
            <see cref="T:System.ArgumentException"/> or appropriate derived exception if the 
            <paramref name="value"/> would cause the range value to be "unset".
            The default implementation does nothing.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> would cause the value to be "unset".
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Range`1.DefaultMinValue">
            <summary>
            Initializes the minimum range value to its default value.
            </summary>
            
            <returns>
            The default value for the minimum range value.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Range`1.DefaultMaxValue">
            <summary>
            Gets the maximum range value to its default value.
            </summary>
            
            <returns>
            The default value for the maximum range value.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Range`1.MinRange">
            <summary>
            Gets or sets the minimum value of the range.
            </summary>
            
            <value>
            A value of <typeparamref name="RangeType"/> that represents the minimum value of the range.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> would cause the value to be "unset".
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Range`1.MaxRange">
            <summary>
            Gets or sets the maximum value of the range.
            </summary>
            
            <value>
            A value of <typeparamref name="RangeType"/> that represents the maximum value of the range.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> would cause the value to be "unset".
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleRange.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DoubleRange"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleRange.#ctor(System.Double,System.Double)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DoubleRange"/> class with the specified
            minimum and maximum range values.
            </summary>
            
            <param name="minRange">
            The minimum value for the range.
            </param>
            
            <param name="maxRange">
            The maximum value for the range.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleRange.ReadRangeValue(System.Xml.XPath.XPathNavigator)">
            <summary>
            Reads the value from the specified <see cref="T:System.Xml.XPath.XPathNavigator"/> as a 
            <see cref="T:System.Double"/>.
            </summary>
            
            <param name="navigator">
            The <see cref="T:System.Xml.XPath.XPathNavigator"/> to read the value from.
            </param>
            
            <returns>
            The value as a <see cref="T:System.Double"/>.
            </returns>
            
            <remarks>
            Derived classes must override and read the value from the XML and convert it to the
            type for the range.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleRange.WriteRangeValue(System.String,System.Double,System.Xml.XmlWriter)">
            <summary>
            Writes the specified range value to the specified writer with the specified node name.
            </summary>
            
            <param name="nodeName">
            The name of the node to use when writing the value.
            </param>
            
            <param name="value">
            The value to be written.
            </param>
            
            <param name="writer">
            The writer to write the value element to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DoubleRange.ToString">
            <summary>
            Returns the range as a string.
            </summary>
            
            <returns>
            A string representation of the range.
            </returns>
            
            <remarks>
            This method is not locale aware.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DoubleRange.DefaultMinValue">
            <summary>
            Initializes the minimum range value to its default value.
            </summary>
            
            <returns>
            <see cref="F:System.Double.MinValue"/>
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DoubleRange.DefaultMaxValue">
            <summary>
            Gets the maximum range value to it's default value.
            </summary>
            
            <returns>
            <see cref="F:System.Double.MaxValue"/>
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.DurationValue">
            <summary>
            Represents a health record item type that encapsulates a duration of 
            time with a starting and optional ending date.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DurationValue.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DurationValue"/> class with default 
            values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DurationValue.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DurationValue"/> class with 
            the specified starting date.
            </summary>
            
            <param name="startDate">
            The starting date/time of the duration value.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="startDate"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DurationValue.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.DurationValue"/> class with 
            the specified starting and ending date.
            </summary>
            
            <param name="startDate">
            The start date/time of the duration value.
            </param>
            
            <param name="endDate">
            The end date/time of the duration value.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="startDate"/> or <paramref name="endDate"/> 
            parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DurationValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this Person instance from the data in the XML.
            </summary>
            
            <param name="navigator">
            The XML containing the duration information.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="navigator"/> is not
            a person node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DurationValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the duration value to the specified XmlWriter.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the duration value.
            </param>
            
            <param name="writer">
            The XmlWriter to write the duration value to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.DurationValue.StartDate"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.DurationValue.ToString">
            <summary>
            Gets a string representation of the duration value.
            </summary>
            
            <returns>
            A string representation of the duration value.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DurationValue.StartDate">
            <summary>
            Gets or sets the approximate date of the start of the duration.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> representing the start of the duration.
            </value>
            
            <remarks>
            An approximate date must have a year and can also have the month, 
            day, or both.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.DurationValue.EndDate">
            <summary>
            Gets or sets the approximate date of the end of the duration.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> representing the end of the duration.
            </value>
            
            <remarks>
            An approximate date must have a year and can also have the month, 
            day, or both.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Email">
            <summary>
            Represents an email address.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Email.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Email"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Email.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Email"/> class with the 
            specified email address.
            </summary>
            
            <param name="address">
            The email address.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="address"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Email.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Email"/> class with the 
            specified email address, description, and primary designation.
            </summary>
            
            <param name="address">
            The email address.
            </param>
            
            <param name="description">
            The description for the email address, such as personal or work.
            </param>
            
            <param name="isPrimary">
            <b>true</b> if this email address is the primary email address at which 
            to contact the person; otherwise, <b>false</b>.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="address"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Email.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the email information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Email.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the email address into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the email address.
            </param>
            
            <param name="writer">
            The XML writer into which the email address should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Email.Address"/> property has not been set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Email.Description">
            <summary>
            Gets or sets the description for the email address.
            </summary>
            
            <value>
            A string representing the description.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the description should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Email.IsPrimary">
            <summary>
            Gets or sets a value indicating whether the email address is the 
            primary address for the person.
            </summary>
            
            <value>
            <b>true</b> if this email address is primary; otherwise, <b>false</b>.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if this property should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Email.Address">
            <summary>
            Gets or sets the email address.
            </summary>
            
            <value>
            A string representing the email address.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only 
            whitespace during set.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Emotion">
            <summary>
            Represents a health record item type that encapsulates an emotion.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Emotion.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Emotion"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Emotion.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Emotion"/> class with the 
            specified date/time.
            </summary>
            
            <param name="when">
            The date/time when the emotion occurred.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Emotion.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Emotion.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Emotion"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the emotion data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a emotion node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Emotion.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the emotion data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the emotion data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Emotion.ToString">
            <summary>
            Gets a string representation of the emotion item.
            </summary>
            
            <returns>
            A string representation of the emotion item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Emotion.When">
            <summary>
            Gets or sets the date/time when the emotion occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Emotion.Mood">
            <summary>
            Gets or sets the mood of the person.
            </summary>
            
            <value>
            A value representing the mood.
            </value>
            
            <remarks>
            Set the value to <see cref="F:Microsoft.Health.ItemTypes.Mood.None"/> if 
            the mood should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Emotion.Stress">
            <summary>
            Gets or sets the stress level of the person.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.RelativeRating"/> value representing the stress level.
            </value>
            
            <remarks>
            Set the value to <see cref="F:Microsoft.Health.ItemTypes.RelativeRating.None"/> if the stress 
            level should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Emotion.Wellbeing">
            <summary>
            Gets or sets the wellbeing of the person.
            </summary>
            
            <value>
            A <see cref="P:Microsoft.Health.ItemTypes.Emotion.Wellbeing"/> value.
            </value>
            
            <remarks>
            Set the value to <see cref="F:Microsoft.Health.ItemTypes.Wellbeing.None"/> 
            if the wellbeing should not be stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Encounter">
            <summary>
            Encounter class contains information related to a medical encounter.
            </summary>
            
            <remarks>
            It describes the medical encounter a person has. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Encounter.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Encounter"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Encounter.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Encounter.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Information related to a medical encounter.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medical encounter data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a encounter node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Encounter.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the medical encounter data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the medical encounter data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Encounter.ToString">
            <summary>
            Gets a string representation of the encounter item.
            </summary>
            
            <returns>
            A string representation of the encounter item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.When">
            <summary>
            Gets or sets the date/time when the medical encounter occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.Reason">
            <summary>
            Gets or sets the reason of the medical encounter. The description
            of the encounter.
            </summary>
            
            <value>
            It is a string. 
            </value>
            
            <remarks>
            Examples include heart failure, broken legs, or annual physical
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.Type">
            <summary>
            Gets or sets the type of medical encounter.
            </summary>
            
            <value>
            A CodableValue representing the encounter type.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.Duration">
            <summary>
            Gets or sets the encounter duration.
            </summary>
            
            <remarks>
            The duration of the medical encounter. Set the value to <b>null</b> if the duration should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.ConsentGranted">
            <summary>
            Gets and sets a value indicating whether consent 
            has been granted by the person.
            </summary>
            
            <value>
            <b>true</b>if consent has been granted for this medical encounter; 
            otherwise, <b>false</b>. If <b>null</b>, it is unknown whether consent has been granted.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Encounter.Facility">
            <summary>
            The facility where the encounter occurred.  
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Exercise">
            <summary>
            Represents a health record item type that encapsulates an aerobic session.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Exercise"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Exercise"/> class with 
            the specified date/time and activity.
            </summary>
            
            <param name="when">
            The date/time when the exercise occurred.
            </param>
            <param name="activity">
            The type of activity.
            </param>
             
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="activity"/> parameter is <b>null</b>.
            </exception>
             
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Exercise.TypeId">
            <summary>
            The unique identifier for the Exercise item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Exercise"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the exercise data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            an "exercise" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the exercise data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the exericse data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Exercise.When"/> is <b>null</b>.
            If <see cref="P:Microsoft.Health.ItemTypes.Exercise.Activity"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Exercise.ToString">
             <summary>
             Gets a string representation of the Exercise item.
             </summary> 
            
             <returns>
             A string representation of the Exercise item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.When">
            <summary>
            Gets or sets the date/time when the exercise occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance. 
            The value defaults to the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Activity">
            <summary>
            Gets or sets the type of activity.
            </summary>
            
            <remarks>
            Stores the overall activity for the exercise period.
            
            Examples: Running, hiking, walking, golfing, dancing.
            The preferred vocabulary for route is "exercise-activities".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Activity"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Title">
            <summary>
            Gets or sets a descriptive title for this activity.
            </summary>
            
            <value>
            String. 
            </value>
            
            <remarks>
            Examples: Hiking up Mt. Baker, 3-day walk, Memorial day triathlon.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Distance">
            <summary>
            Gets or sets the distance covered in the exercise.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length"/> value representing the distance.
            </value>
            
            <remarks>
            Distances are stored in meters. The application 
            must convert the distance entered by the user
            into meters and should also store the distance
            and units entered by the user in the display-value
            so that it can be displayed to the user in their
            preferred unit of measure when viewing the data.
            
            Set the value to <b>null</b> if there is no distance.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Duration">
            <summary>
            Gets or sets the duration of the exercise in minutes.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no duration.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Details">
            <summary>
            Gets additional information about the exercise.
            </summary>
            
            <remarks>
            Details is a dictionary of the items, where the key is the 
            string name of the item.
            </remarks>
            
            <value>
            A dictionary of <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> items.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Exercise.Segments">
            <summary>
            Gets information pertaining to a portion of the overall exercise.
            </summary>
            
            <value>
            A collection of <see cref="T:Microsoft.Health.ItemTypes.ExerciseSegment"/> items.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseDetail">
            <summary>
            Represents additional information about the exercise.
            </summary>
            
            <remarks>
            The detail information typically stores information that is specific to the type of exercise activity
            and any device used to measure it.
            
            Examples: Average heart rate, average temperature, intensity.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.Intensity">
            <summary>
            Detail name for Intensity.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumHeartrate_BPM">
            <summary>
            Detail name for MinimumHeartrate_BPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageHeartrate_BPM">
            <summary>
            Detail name for AverageHeartrate_BPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.PeakHeartrate_BPM">
            <summary>
            Detail name for PeakHeartrate_BPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.Work_kJ">
            <summary>
            Detail name for Work_kJ.
            </summary>
            <remarks>
            The work_kJ detail pertains to the actual amount of work done during the exercise.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.CaloriesBurned_calories">
            <summary>
            Detail name for CaloriesBurned_calories.
            </summary>
            <remarks>
            The CaloriesBurned_calories detail expresses the number of food calories required to 
            balance out the energy expended in the exercise.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.FatCaloriesBurned_calories">
            <summary>
            Detail name for FatCaloriesBurned_calories.
            </summary>
            <remarks>
            The FatCaloriesBurned_calories detail expresses the number of fat calories required to 
            balance out the energy expended in the exercise.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.EnergyOld_kJ">
            <summary>
            Detail name for EnergyOld_kJ.
            </summary>
            <remarks>
            This value corresponds to Energy_kJ value in the AerobicSession type.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.EnergyFromFatOld_kJ">
            <summary>
            Detail name for EnergyFromFatOld_kJ.
            </summary>
            <remarks>
            This value corresponds to EnergyFromFat_kJ value in the AerobicSession type.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumSpeed_m_per_s">
            <summary>
            Detail name for MinimumSpeed_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageSpeed_m_per_s">
            <summary>
            Detail name for AverageSpeed_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumSpeed_m_per_s">
            <summary>
            Detail name for MaximumSpeed_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumPace_s_per_100m">
            <summary>
            Detail name for MinimumPace_s-per-100m.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AveragePace_s_per_100m">
            <summary>
            Detail name for AveragePace_s-per-100m.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumPace_s_per_100m">
            <summary>
            Detail name for MaximumPace_s-per-100m.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumPower_watts">
            <summary>
            Detail name for MinimumPower_watts.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AveragePower_watts">
            <summary>
            Detail name for AveragePower_watts.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumPower_watts">
            <summary>
            Detail name for MaximumPower_watts.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumTorque_Nm">
            <summary>
            Detail name for MinimumTorque_Nm.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageTorque_Nm">
            <summary>
            Detail name for AverageTorque_Nm.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumTorque_Nm">
            <summary>
            Detail name for MaximumTorque_Nm.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.LeftRightBalance_percent">
            <summary>
            Detail name for LeftRightBalance_percent.
            </summary>
            <remarks>
            This detail stores the balance between the left and right leg when cycling, 
            and is a number from 0 to 1. The detail stores the percentage of work the left leg is performing, 
            and the right leg percentage is 1 minus the left leg value.
            For example, if the this value is 0.45, the left leg is doing 45% of the work and the right leg is
            doing 55% of the work.
            </remarks>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumCadence_RPM">
            <summary>
            Detail name for MinimumCadence_RPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageCadence_RPM">
            <summary>
            Detail name for AverageCadence_RPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumCadence_RPM">
            <summary>
            Detail name for MaximumCadence_RPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumTemp_celsius">
            <summary>
            Detail name for MinimumTemp_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageTemp_celsius">
            <summary>
            Detail name for AverageTemp_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumTemp_celsius">
            <summary>
            Detail name for MaximumTemp_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MinimumAltitude_meters">
            <summary>
            Detail name for MaximumTemp_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageAltitude_meters">
            <summary>
            Detail name for AverageAltitude_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumAltitude_meters">
            <summary>
            Detail name for MaximumAltitude_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.ElevationGain_meters">
            <summary>
            Detail name for ElevationGain_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.ElevationLoss_meters">
            <summary>
            Detail name for ElevationLoss_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.Steps_count">
            <summary>
            Detail name for Steps_count.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AerobicSteps_count">
            <summary>
            Detail name for AerobicSteps_count.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AerobicStepDuration_minutes">
            <summary>
            Detail name for AerobicStepDuration_minutes.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.Odometer_meters">
            <summary>
            Detail name for Odometer_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumVerticalSpeedAscending_m_per_s">
            <summary>
            Detail name for MaximumVerticalSpeedAscending_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.MaximumVerticalSpeedDescending_m_per_s">
            <summary>
            Detail name for MaximumVerticalSpeedDescending_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageVerticalSpeedAscending_m_per_s">
            <summary>
            Detail name for AverageVerticalSpeedAscending_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseDetail.AverageVerticalSpeedDescending_m_per_s">
            <summary>
            Detail name for AverageVerticalSpeedDescending_m-per-s.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.#ctor(Microsoft.Health.ItemTypes.CodedValue,Microsoft.Health.ItemTypes.StructuredMeasurement)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> class 
            with specified values
            </summary>
            <param name="name">The name of the information stored in this exercise detail. </param>
            <param name="value">The value of the exercise detail</param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> or <paramref name="value"/> is <b>null</b>.
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the exercise detail from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the exercise detail.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the exercise detail to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the exercise detail.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the exercise detail data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <paramref name="name"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <paramref name="value"/> is <b>null</b>.
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseDetail.ToString">
             <summary>
             Gets a string representation of the ExerciseDetail item.
             </summary> 
            
             <returns>
             A string representation of the ExerciseDetail item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseDetail.Name">
            <summary>
            Gets or sets the name of the information stored in this exercise detail.
            </summary>
            
            <remarks>
            Names should be values contained in the exercise-detail-names vocabularies, and that
            vocabulary should be specified when adding new details.
            Constants that are equal to these names can be found as static members of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> class.
            </remarks>
            
            <value>
            A CodedValue representing the detail name. 
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The name is being set to null.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseDetail.Value">
            <summary>
            Gets or sets the value of the exercise detail.
            </summary>
            
            <remarks>
            For example, to store an average heartrate of 125, place 125 in the value element and
            set the unit to "BPM".
            Units should be coded using the exercise-units vocabulary.
            </remarks>
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.StructuredMeasurement"/> representing the detail value.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The value is being set to null.
            </exception>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSampleOneValue">
            <summary>
            A exercise sample that contains one data value.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.#ctor(System.Double,System.Double)">
            <summary>
            Create an instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSampleOneValue"/> type with the specified values.
            </summary>
            <param name="offsetInSeconds">The offset of this sample from the beginning of the sample set.</param>
            <param name="value">The data value of this sample.</param>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.ToString">
            <summary>
            Gets a string representation of the sample.
            </summary>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.OffsetInSeconds">
            <summary>
            Gets or sets the offset in seconds of this data sample from the beginning of the sample set. 
            </summary>
            
            <value>
            The offset in seconds.
            </value>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="OffsetInSeconds"/> value is less than zero.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleOneValue.Value">
            <summary>
            Gets or sets the data value stored in the sample.
            </summary>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue">
            <summary>
            A exercise sample that contains two data values.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Create an instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue"/> type with the specified values.
            </summary>
            <param name="offsetInSeconds">The offset of this sample from the beginning of the sample set.</param>
            <param name="value1">The first data value of this sample.</param>
            <param name="value2">The second data value of this sample.</param>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.ToString">
            <summary>
            Gets a string representation of the sample.
            </summary>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.OffsetInSeconds">
            <summary>
            Gets or sets the offset in seconds of this data sample from the beginning of the sample set. 
            </summary>
            
            <value>
            The offset in seconds.
            </value>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="OffsetInSeconds"/> value is less than zero.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.Value1">
            <summary>
            Gets or sets the first data value stored in the sample.
            </summary>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSampleTwoValue.Value2">
            <summary>
            Gets or sets the second data value stored in the sample.
            </summary>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSamples">
            <summary>
            Stores a set of samples related to an exercise.
            </summary>
            <remarks>
            Examples: Heart rate samples, speed samples, position samples.
            
            Exercise samples are related to exercises through related items. 
            
            The samples are stored in the other-data section of the object, and must
            be fetched by specifying HealthItemRecordSections.BlobPayload.
            
            The format of the other-data section is the HealthVault comma-separated format. It should be accessed
            using the ExerciseSamplesData property. 
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Heartrate_BPM">
            <summary>
            Sample name for Heartrate_BPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Distance_meters">
            <summary>
            Sample name for Distance_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Position_LatLong">
            <summary>
            Sample name for Position_LatLong.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Speed_m_per_s">
            <summary>
            Sample name for Speed_m-per-s.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Pace_s_per_100m">
            <summary>
            Sample name for Pace_s-per-100m.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Power_watts">
            <summary>
            Sample name for Power_watts.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Torque_Nm">
            <summary>
            Sample name for Torque_Nm.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Cadence_RPM">
            <summary>
            Sample name for Cadence_RPM.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Temperature_celsius">
            <summary>
            Sample name for Temperature_celsius.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Altitude_meters">
            <summary>
            Sample name for Altitude_meters.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.AirPressure_kPa">
            <summary>
            Sample name for AirPressure_kPa.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.Steps_count">
            <summary>
            Sample name for Steps_count.
            </summary>
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.AerobicSteps_count">
            <summary>
            Sample name for AerobicSteps_count.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamples"/> with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.CodableValue,System.Double)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamples"/> with specified parameters. 
            </summary>
            
            <param name="when">The date and time the samples were recorded.</param>
            <param name="name">The kind of information that is stored in this set of samples.</param>
            <param name="unit">The unit of measure for the samples.</param>
            <param name="samplingInterval">The time interval between samples in seconds.</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExerciseSamples.TypeId">
            <summary>
            Retrieves the unique identifier for the exercise samples item type.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamples"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the exercise samples data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            an "exercise-samples" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the exercise samples data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the exericse samples data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamples.When"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamples.ToString">
            <summary>
            Gets the description of a exercise samples instance. 
            </summary>
            
            <returns>
            A string representation of the exercise samples item. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.When">
            <summary>
            Gets or sets the date and time when the samples were collected.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.Name">
            <summary>
            Gets or sets the kind of information that is stored in this sample set. 
            </summary>
            
            <remarks>
            The name encodes both the type of information that is stored and the units in 
            which it is stored. 
            
            The preferred vocabulary is exercise-sample-names.
            
            Example sample types and units. See the preferred vocabulary for others.
            Heartrate_BPM
            Distance_meters
            Position_LatLong
            Speed_m-per-s
            Pace_s-per-100m
            Power_watts
            Torque_Nm
            Cadence_RPM
            Temperature_celsius
            Altitude_meters
            AirPressure_kPa
            Steps_count
            AerobicSteps_count
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.Unit">
            <summary>
            Gets or sets the unit of measure for the samples. 
            </summary>
            
            <remarks>
            The preferred vocabulary is exercise-units.
            
            The appropriate units are defined by the code used for the Name property. For example, if the 
            name property is set to the entry Power_watts, the Unit should be coded to watts. 
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.SamplingInterval">
            <summary>
            Gets or sets the initial sampling interval between samples, in seconds.  
            </summary>
            <summary>
            The samples data format supports modifying the sampling interval in the middle of a 
            set of samples. See the <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamples.ExerciseSamplesData"/> class for more information.
            </summary>
            
            <returns>
            An double representing the sampling interval in seconds.
            </returns>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the <paramref name="Sampling"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamples.ExerciseSamplesData">
            <summary>
            The sample data.
            </summary>
            <remarks>
            The sample data is exposed as a <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamples.ExerciseSamplesData"/> instance. 
            
            To get the sample data when fetching an instance of the ExerciseSamples thing type, you must specify that the other-data section
            be returned to access the ExerciseSamplesData.
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            If the sampling interval has not be set before the property is referenced.
            </exception>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSamplesData">
            <summary>
            The ExerciseSamplesData class is used to store and retrieve samples data for the 
            <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamples"/> class. It handles converting from a sample data format to the
            comma-separated format.
            </summary>
            <remarks>
            Data is represented as either an array of samples with a single value (such as heart rate), or an array
            of samples with two values (such as a GPS position). The <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SingleValuedSamples"/> or <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.TwoValuedSamples"/> properties
            should be used as appropriate based on the stored data type. 
            
            The underlying format allows the sampling interval to be changed in the middle of a sample set. This class
            will detect sampling intervals that have changed, and insert appropriate escape values into the resulting data.
            </remarks>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamplesData.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamplesData"/> class. 
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamplesData.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSamplesData"/> class 
            with the specified data, encoding, and content type.
            </summary>
            
            <param name="data">
            The data to store in the other data section of the health record
            item.
            </param>
            
            <param name="contentEncoding">
            The type of encoding that was done on the data. Usually this will
            be "base64" but other encodings are acceptable.
            </param>
            
            <param name="contentType">
            The MIME-content type of the data.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSamplesData.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the exercise samples to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the height data to.
            </param>
            <exception cref="T:System.InvalidOperationException">
            If both the <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SingleValuedSamples"/> and <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.TwoValuedSamples"/> properties have data in them
            or
            if neither the <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SingleValuedSamples"/> nor <see cref="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.TwoValuedSamples"/> properties have data in them.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SamplingInterval">
            <summary>
            Gets or sets the initial sampling interval for the set of samples. 
            </summary>
            <remarks>
            The sampling interval may change between two samples.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the sampling interval is less than or equal to zero.
            </exception>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.SingleValuedSamples">
            <summary>
            Gets the sample data as a collection of single values.
            </summary>
            <remarks>
            The majority of sample types contain only a single value per sample. This property
            is used to access samples for those sample types. 
            </remarks>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSamplesData.TwoValuedSamples">
            <summary>
            Gets the sample data as a collection of two-valued samples.
            </summary>
            <remarks>
            Some samples types (such as GPS location) consist not of a single value but of two separate values
            This property is used to access samples for those sample types. 
            </remarks>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExerciseSegment">
            <summary>
            Information pertaining to a portion of the overall exercise.
            </summary>
            
            <remarks>
            This is typically used to store information about separate laps in a race or individual events within
            a triathlon.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSegment"/> class 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExerciseSegment"/> class 
            with the specified values.
            </summary>
            <param name="activity">The type of activity for this segment.</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="activity"/> is <b>null</b>. 
            </exception>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the lap from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the lap.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the lap to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the lap.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the lap data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The Activity property is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExerciseSegment.ToString">
             <summary>
             Gets a string representation of the ExerciseSegment item.
             </summary> 
            
             <returns>
             A string representation of the ExerciseSegment item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Activity">
            <summary>
            Gets or sets the type of activity for this segment of the exercise.
            </summary>
            
            <remarks>
            Examples: Running, hiking, walking, golfing, dancing.
            The preferred vocabulary for route is "exercise-activities".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Activity"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Title">
            <summary>
            Gets or sets a descriptive title for this segment.
            </summary>
            
            <value>
            String. 
            </value>
            
            <remarks>
            Examples: Lap 1, bicycle leg, first half.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Distance">
            <summary>
            Gets or sets the distance covered in the segment.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length"/> value representing the distance.
            </value>
            
            <remarks>
            Distances are stored in meters. The application 
            must convert the distance entered by the user
            into meters and should also store the distance
            and units entered by the user in the display-value
            so that it can be displayed to the user in their
            preferred unit of measure when viewing the data.
            
            Set the value to <b>null</b> if there is no distance.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Duration">
            <summary>
            Gets or sets the duration of the segment in minutes.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no duration.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Offset">
            <summary>
            Gets or sets the offset in minutes of the segment from the start of exercise.
            </summary>
            
            <remarks>
            Set the value to <b>null</b> if there is no offset.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is negative or zero when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExerciseSegment.Details">
            <summary>
            Gets additional information about the segment.
            </summary>
            
            <remarks>
            Details is a dictionary of the items, where the key is the 
            string name of the item.
            </remarks>
            
            <value>
            A dictionary of <see cref="T:Microsoft.Health.ItemTypes.ExerciseDetail"/> items.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ExplanationOfBenefits">
             <summary>
             Describes the benefits received from an insurance plan.
             </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExplanationOfBenefits"/> class with default values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.PersonItem,Microsoft.Health.ItemTypes.Organization,System.String,Microsoft.Health.ItemTypes.CodableValue,System.String,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.Organization,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.ClaimAmounts,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.Service})">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.ExplanationOfBenefits"/> class specifying mandatory values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called.
             </remarks>
            
             <param name="dateSubmitted">
             The date when the claim was submitted.
             </param>
             <param name="patient">
             The name of the patient.
             </param>
             <param name="plan">
             The plan covering this claim.
             </param>
             <param name="memberId">
             The member id of the plan member.
             </param>
             <param name="claimType">
             The type of the claim (medical, dental, etc.)
             </param>
             <param name="claimId">
             The claim id.
             </param>
             <param name="submittedBy">
             The organization that submitted this claim.
             </param>
             <param name="provider">
             The provider that performed the services.
             </param>
             <param name="currency">
             The currency used.
             </param>
             <param name="claimTotals">
             A summary of the financial information about this claim.
             </param>
             <param name="services">
             The service included in this claim.
             </param>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="memberId"/> is empty or contains only whitespace.
             If <paramref name="claimId"/> is empty or contains only whitespace.
             If <paramref name="services"/> is <b>null</b> or doesn't contain any values.            
             </exception>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="memberId"/> is <b>null</b>.
             If <paramref name="claimId"/> is <b>null</b>.
             If <paramref name="dateSubmitted"/> is <b>null</b>.            
             If <paramref name="patient"/> is <b>null</b>.            
             If <paramref name="plan"/> is <b>null</b>.            
             If <paramref name="claimType"/> is <b>null</b>.            
             If <paramref name="submittedBy"/> is <b>null</b>.            
             If <paramref name="provider"/> is <b>null</b>.            
             If <paramref name="currency"/> is <b>null</b>.            
             If <paramref name="claimTotals"/> is <b>null</b>.            
             </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.ExplanationOfBenefits.TypeId">
             <summary>
             Retrieves the unique identifier for the item type.
             </summary>
            
             <value>
             A GUID.
             </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.ExplanationOfBenefits"/> instance from the data in the specified XML.
             </summary>
            
             <param name="typeSpecificXml">
             The XML to get the ExplanationOfBenefits data from.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="typeSpecificXml"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a ExplanationOfBenefits node.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the XML representation of the ExplanationOfBenefits into
             the specified XML writer.
             </summary>
            
             <param name="writer">
             The XML writer into which the ExplanationOfBenefits should be
             written.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services"/> collection is <b>null</b> or empty.                
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ToString">
             <summary>
             Gets a string representation of the ExplanationOfBenefits.
             </summary>
            
             <returns>
             A string representation of the ExplanationOfBenefits.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.DateSubmitted">
             <summary>
             Gets or sets the date when the claim was submitted.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Patient">
             <summary>
             Gets or sets the name of the patient.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.RelationshipToMember">
             <summary>
             Gets or sets the relationship of the patient to the primary plan member.
             </summary>
            
             <remarks>
             If there is no information about the relationshipToMember the value should be set to <b>null</b>.
             </remarks>            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Plan">
             <summary>
             Gets or sets the plan covering this claim.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.GroupId">
             <summary>
             Gets or sets the group id for the member's plan.
             </summary>
            
             <remarks>
             If there is no information about the groupId the value should be set to <b>null</b> 
             </remarks>            
             <exception cref="T:System.ArgumentException">
             The <paramref name="value"/> contains only whitespace.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.MemberId">
             <summary>
             Gets or sets the member id of the plan member.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
             <exception cref="T:System.ArgumentException">
             The <paramref name="value"/> is empty or contains only whitespace.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimType">
             <summary>
             Gets or sets the type of the claim (medical, dental, etc.)
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimId">
             <summary>
             Gets or sets the claim id.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
             <exception cref="T:System.ArgumentException">
             The <paramref name="value"/> is empty or contains only whitespace.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.SubmittedBy">
             <summary>
             Gets or sets the organization that submitted this claim.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Provider">
             <summary>
             Gets or sets the provider that performed the services.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Currency">
             <summary>
             Gets or sets the currency used.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.ClaimTotals">
             <summary>
             Gets or sets a summary of the financial information about this claim.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.ExplanationOfBenefits.Services">
             <summary>
             Gets a collection of the services included in this claim.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistory">
             <summary>
             The condition of a relative.
             </summary>
             
             <remarks>
             The family history condition item stores a condition that 
             a relative of the record owner has. Relating this item to a family
             history person item will provide a comprehensive family medical history 
             record. 
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistory"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.#ctor(Microsoft.Health.ItemTypes.ConditionEntry)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistory"/> 
            class with condition.
            </summary>
            
            <param name="condition">
            Relative condition is the condition of a relative. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="condition"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.FamilyHistory.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistory"/> instance from the data in the XML. 
             </summary>
             
             <param name="typeSpecificXml">
             The XML to get the family history data from.
             </param>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a family history node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the family history data to the specified XmlWriter.
            </summary> 
            
            <param name="writer">
            The XmlWriter to write the family history data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.FamilyHistory.Condition"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistory.ToString">
             <summary>
             Gets a string representation of the family history item.
             </summary> 
            
             <returns>
             A string representation of the family history item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistory.Condition">
            <summary>
            Gets or sets a condition.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> of relative condition is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistory.Relative">
            <summary>
            Gets or sets information about the relative with this condition.
            </summary>
            
            <remarks>
            The relative should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryCondition">
             <summary>
             The condition of a relative.
             </summary>
             
             <remarks>
             The family history condition item stores a condition that 
             a relative of the record owner has. Relating this item to a family
             history person item will provide a comprehensive family medical history 
             record. 
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryCondition"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.#ctor(Microsoft.Health.ItemTypes.ConditionEntry)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryCondition"/> 
            class with condition.
            </summary>
            
            <param name="relativeCondition">
            Relative condition is the condition of a relative. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="relativeCondition"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.FamilyHistoryCondition.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryCondition"/> instance from the data in the XML. 
             </summary>
             
             <param name="typeSpecificXml">
             The XML to get the family history condition data from.
             </param>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a family history condition node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the family history condition data to the specified XmlWriter.
            </summary> 
            
            <param name="writer">
            The XmlWriter to write the concern data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.FamilyHistoryCondition.RelativeCondition"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryCondition.ToString">
             <summary>
             Gets a string representation of the family history condition item.
             </summary> 
            
             <returns>
             A string representation of the family history condition item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryCondition.RelativeCondition">
            <summary>
            Gets or sets a condition.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> of relative condition is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryPerson">
            <summary>
            Information about a relative of the record owner.
            </summary>
            
            <remarks>
            A family history person item stores the information about a relative
            of the record owner, for example, mother, father or aunt. Relating 
            this item to family history condition items will provide a comprehensive 
            family medical history. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryPerson"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.#ctor(Microsoft.Health.ItemTypes.PersonItem)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryPerson"/> 
            class with mandatory parameters.
            </summary>
            
            <param name="name">The name of a relative. </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.FamilyHistoryPerson.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryPerson"/> instance from the 
             data in the XML. 
             </summary>
             
             <param name="typeSpecificXml">
             The XML to get the family history person data from.
             </param>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a family history person node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the family history person data to the specified XmlWriter.
             </summary> 
             
             <param name="writer">
             The XmlWriter to write the family history person data to.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.RelativeName"/> parameter is <b>null</b>.
             </exception> 
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryPerson.ToString">
             <summary>
             Gets a string representation of the family history person item.
             </summary> 
            
             <returns>
             A string representation of the family history person item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.RelativeName">
             <summary>
             Gets or sets the name and other information of a relative.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="value"/> is <b>null</b> on set.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.Relationship">
            <summary>
            Gets or sets the relationship between the relative and the record owner.
            </summary>
            
            <remarks>
            The relationship should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.DateOfBirth">
            <summary>
            Gets or sets the date of birth of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryPerson.DateOfDeath">
            <summary>
            Gets or sets the date of death of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryRelative">
            <summary>
            Information about a relative of the record owner.
            </summary>
            
            <remarks>
            A family history person item stores the information about a relative
            of the record owner, for example, mother, father or aunt. Relating 
            this item to family history condition items will provide a comprehensive 
            family medical history. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelative.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelative"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelative.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelative"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the relative's data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelative.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the family history relative data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the family history relative item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the family history relative data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="T:Microsoft.Health.ItemTypes.Name"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelative.ToString">
             <summary>
             Gets a string representation of the family history person item.
             </summary> 
            
             <returns>
             A string representation of the family history person item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelative.RelativeName">
             <summary>
             Gets or sets the name and other information of a relative.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelative.Relationship">
            <summary>
            Gets or sets the relationship between the relative and the record owner.
            </summary>
            
            <remarks>
            The relationship should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelative.DateOfBirth">
            <summary>
            Gets or sets the date of birth of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelative.DateOfDeath">
            <summary>
            Gets or sets the date of death of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3">
            <summary>
            Information about a relative of the record owner.
            </summary>
            
            <remarks>
            A family history relative item stores the information about a relative
            of the record owner, for example, mother, father or aunt. Relating 
            this item to family history condition items will provide a comprehensive 
            family medical history. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3"/> 
            class with the specified relatinship.
            </summary>
            
            <param name="relationship">
            The relationship of this person to the record owner.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="relationship"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the relative's data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the family history relative data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the outer node for the family history relative item.
            </param>
            
            <param name="writer">
            The XmlWriter to write the family history relative data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.Relationship"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.ToString">
             <summary>
             Gets a string representation of the family history relative item.
             </summary> 
            
             <returns>
             A string representation of the family history relative item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.Relationship">
            <summary>
            Gets or sets the relationship between the relative and the record owner.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.RelativeName">
             <summary>
             Gets or sets the name and other information of a relative.
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.DateOfBirth">
            <summary>
            Gets or sets the date of birth of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.DateOfDeath">
            <summary>
            Gets or sets the date of death of the relative.  
            </summary>
            
            <remarks>
            The date of death should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryRelativeV3.RegionOfOrigin">
            <summary>
            Gets or sets the region of origin the relative. 
            </summary>
            
            <remarks>
            The region of origin should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FamilyHistoryV3">
             <summary>
             The condition of a relative.
             </summary>
             
             <remarks>
             The family history condition item stores a condition 
             that a relative of the record-owner has.
             
             To create a family tree, use the relationship-types vocabulary
             to code both directions of the parent/child relationship between
             one family member and another. These codes are stored as
             related items for both parent and child data instances.
            
             The flexibity of having both condition and relative be optional
             allows applications to give the users the ability to just put in
             the details they know at the time they want to create the tree.
             If they just know the name of the relative, or a particular condition
             that's all it takes to get a new instance started.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryV3"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.FamilyHistoryV3.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.FamilyHistoryV3"/> instance from the data in the XML. 
             </summary>
             
             <param name="typeSpecificXml">
             The XML to get the family history data from.
             </param>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a family history node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the family history data to the specified XmlWriter.
            </summary> 
            
            <param name="writer">
            The XmlWriter to write the family history data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FamilyHistoryV3.ToString">
             <summary>
             Gets a string representation of the family history item.
             </summary> 
            
             <returns>
             A string representation of the family history item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryV3.Conditions">
            <summary>
            Gets a collection of a conditions.
            </summary>
            
            <remarks>
            If there is no information about the condition of the relative the collection should be empty.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.FamilyHistoryV3.Relative">
            <summary>
            Gets or sets information about the relative with this condition.
            </summary>
            
            <remarks>
            The relative should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.File">
            <summary>
            Represents information about a file.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.CreateFromFilePath(System.String,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a <see cref="T:Microsoft.Health.ItemTypes.File"/> item instance using the specified file path and content
            type.
            </summary>
            
            <param name="path">
            The path of the file to associate with this <see cref="T:Microsoft.Health.ItemTypes.File"/> instance.
            </param>
            
            <param name="contentType">
            The content type of the file. This is usually something like "image/jpg", "application/csv",
            or other mime type.
            </param>
            
            <returns>
            A new instance of the <see cref="T:Microsoft.Health.ItemTypes.File"/> health record item with data populated from the
            specified file path.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="path"/> is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="contentType"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.IO.PathTooLongException">
            The specified path, file name, or both exceed the system-defined maximum length. 
            For example, on Windows-based platforms, paths must be less than 248 characters, 
            and file names must be less than 260 characters. 
            </exception>
            
            <exception cref="T:System.IO.DirectoryNotFoundException">
            The specified path is invalid (for example, it is on an unmapped drive). 
            </exception>
            
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while opening the file. 
            </exception>
            
            <exception cref="T:System.UnauthorizedAccessException">
            <paramref name="path"/> specified a file that is read-only.
            -or- 
            This operation is not supported on the current platform.
            -or- 
            path specified a directory.
            -or- 
            The caller does not have the required permission. 
            </exception>
            
            <exception cref="T:System.IO.FileNotFoundException">
            The file specified in <paramref name="path"/> was not found. 
            </exception>
            
            <exception cref="T:System.NotSupportedException">
            <paramref name="path"/> is in an invalid format. 
            </exception>
            
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.CreateFromStream(Microsoft.Health.HealthRecordAccessor,System.IO.Stream,System.String,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a <see cref="T:Microsoft.Health.ItemTypes.File"/> item instance using the specified stream and content
            type.
            </summary>
            
            <param name="record">
            The record to stream the data to.
            </param>
            
            <param name="stream">
            The stream containing the data to associate with this <see cref="T:Microsoft.Health.ItemTypes.File"/> instance.
            </param>
            
            <param name="name">
            The name of the file instance.
            </param>
            
            <param name="contentType">
            The content type of the file. This is usually something like "image/jpg", "application/csv",
            or other mime type.
            </param>
            
            <returns>
            A new instance of the <see cref="T:Microsoft.Health.ItemTypes.File"/> health record item with data populated from the
            specified stream.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="record"/>, <paramref name="stream"/>, or 
            <paramref name="contentType"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthServiceException">
            If a failure occurs streaming the data to HealthVault.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.File"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.#ctor(System.String,System.Int64)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.File"/> class with the 
            specified name and size.
            </summary>
            
            <param name="name">
            The name of the file.
            </param>
            
            <param name="size">
            The file size in bytes.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="name"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="size"/> parameter is negative or zero.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.File.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.File"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the file data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a file node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the file data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the file data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.ToString">
            <summary>
            Gets a string representation of the file item.
            </summary>
            
            <returns>
            A string representation of the file item.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.SetContent(System.String,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Sets the content of the file instance using the specified file.
            </summary>
            
            <param name="path">
            The path of the file to associate with this <see cref="T:Microsoft.Health.ItemTypes.File"/> instance.
            </param>
            
            <param name="contentType">
            The content type of the file.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="path"/> is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="contentType"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.IO.PathTooLongException">
            The specified path, file name, or both exceed the system-defined maximum length. 
            For example, on Windows-based platforms, paths must be less than 248 characters, 
            and file names must be less than 260 characters. 
            </exception>
            
            <exception cref="T:System.IO.DirectoryNotFoundException">
            The specified path is invalid (for example, it is on an unmapped drive). 
            </exception>
            
            <exception cref="T:System.IO.IOException">
            An I/O error occurred while opening the file. 
            </exception>
            
            <exception cref="T:System.UnauthorizedAccessException">
            <paramref name="path"/> specified a file that is read-only.
            -or- 
            This operation is not supported on the current platform.
            -or- 
            path specified a directory.
            -or- 
            The caller does not have the required permission. 
            </exception>
            
            <exception cref="T:System.IO.FileNotFoundException">
            The file specified in <paramref name="path"/> was not found. 
            </exception>
            
            <exception cref="T:System.NotSupportedException">
            <paramref name="path"/> is in an invalid format. 
            </exception>
            
            <exception cref="T:System.Security.SecurityException">
            The caller does not have the required permission. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.File.SetContent(Microsoft.Health.HealthRecordAccessor,System.IO.Stream,System.String,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Sets the content of the file instance using the specified stream.
            </summary>
            
            <param name="stream">
            The stream containing the data to associate with this <see cref="T:Microsoft.Health.ItemTypes.File"/> instance.
            </param>
            
            <param name="record">
            The record to stream the data to.
            </param>
            
            <param name="name">
            The name of the file instance.
            </param>
            
            <param name="contentType">
            The content type of the file.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="record"/>, <paramref name="stream"/> or <paramref name="contentType"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthServiceException">
            If a failure occurs streaming the data to HealthVault.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.File.Name">
            <summary>
            Gets or sets the name of the file including the extension if
            available.
            </summary>
            
            <value>
            A string representing the file name.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b> or empty on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.File.Size">
            <summary>
            Gets or sets the file size.
            </summary>
            
            <value>
            An integer representing the file size.
            </value>
            
            <remarks>
            This property must be set before the item is created or updated.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.File.ContentType">
            <summary>
            Gets or sets the type of content contained in the file.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the file content type.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the content type should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.File.Content">
            <summary>
            Gets the content of the file item.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.File.ContentStream">
            <summary>
            Gets a stream to read the file contents.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.FlowMeasurement">
            <summary>
            Represents a flow of gas, liquid, etc. over time and a display value
            associated with the measurement.
            </summary>
            
            <remarks>
            In HealthVault, flow measurements have values and display values. 
            All values are stored in a base unit of liters per second (L/s). 
            An application can take a flow value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the flow value must be 
            converted to L/s to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FlowMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FlowMeasurement"/> class 
            with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FlowMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FlowMeasurement"/> class 
            with the specified value in liters per second.
            </summary>
            
            <param name="litersPerSecond">
            The flow in liters per second.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FlowMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.FlowMeasurement"/> class with 
            the specified value in liters per second and optional display value.
            </summary>
            
            <param name="litersPerSecond">
            The flow in liters per second.
            </param>
            
            <param name="displayValue">
            The display value of the flow. This should contain the
            exact flow as entered by the user even if it uses some
            other unit of measure besides liters per second. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FlowMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies the value is a legal flow value in liters/sec.
            </summary>
            
            <param name="value">
            The flow measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FlowMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the flow from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the flow.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FlowMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the flow to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the flow to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.FlowMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the flow in the base units.
            </summary>
            
            <returns>
            The flow as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Gender">
            <summary>
            Provides values representing a person's gender.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Gender.Unknown">
            <summary>
            The gender is unknown or has a value that is not understood by
            this client.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Gender.Male">
            <summary>
            The person is male.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Gender.Female">
            <summary>
            The person is female.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GeneralMeasurement">
            <summary>
            A coded measurement and a display representation.
            </summary>
            
            <remarks>
            Examples include 30 cc, 500 mg, 15 liters, 30 inches, etc.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GeneralMeasurement"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GeneralMeasurement"/> 
            class with display parameter.
            </summary>
            
            <param name="display"> It is a sentence to display for the measurement
            by the application. </param>
            
            <exception cref="T:System.ArgumentException">
            
            If <paramref name="display"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.GeneralMeasurement"/> instance from the data in the XML. 
            </summary>
            
            <param name="navigator">
            The XML to get the general measurement data from.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="navigator"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the general measurement data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the node to write XML.
            </param>
            
            <param name="writer">
            The XmlWriter to write the concern data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.GeneralMeasurement.Display"/> is <b>null</b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneralMeasurement.ToString">
             <summary>
             Gets a string representation of the general measurement item.
             </summary> 
             
             <returns>
             A string representation of the general measurement item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneralMeasurement.Display">
             <summary>
             Gets or sets a user readable string to display for the measurement 
             by the applications.
             </summary>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> parameter is <b>null</b>, empty, or contains only 
             whitespace on set.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneralMeasurement.Structured">
            <summary>
            Gets the coded values of the measurements.  
            </summary>
            
            <remarks>
            Applications typically use this for calculations, charting, or graphing. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GeneticSnpResults">
             <summary>
             Stores a set of SNP genetic test results.
             </summary>
             
             <remarks>
             Examples: 
             
             The SNP data is stored in the blob store of the object, and must
             be fetched by specifying HealthItemRecordSections.BlobPayload.
            
             The format of the other-data section is the HealthVault comma-separated format.
             
             Within the comma-separated data, each SNP is encoded as follows:
             
             [refSNP id],[strand orientation],[result],[assay id],[start position],[end position]
             
             Where:
             refSNP id: Reference SNP identifier from NCBI dbSNP database.
              strand orientation: "+" encodes top, "-" encodes bottom.
              result: the result of the test.
              assay id: platform dependent probe set id. 
              start position: start position on the chromosome. 
              end posiition: end position on the chromosome. 
             
             Example: rs1891906,-,GT, SNP_C-315533, 940106, 940107
             
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.GeneticSnpResults"/> with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime,System.String,System.String,Microsoft.Health.ItemTypes.GenomeNumberingScheme)">
             <summary>
             Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.GeneticSnpResults"/> with specified 
             parameters. 
             </summary>
             
             <param name="when">The date and time of the SNP test.</param>
             
             <param name="genomeBuild">The genome build that defines the SNPs.</param>
            
             <param name="chromosome">The chromosome on which the SNPs are located.</param>
             
             <param name="numberingScheme">The numbering scheme used for positions.</param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="when"/> is <b> null</b>. 
             </exception>
             
             <exception cref="T:System.ArgumentException">
             If <paramref name="genomeBuild"/> or <paramref name="chromosome"/> 
             is <b>null</b> or empty, or <paramref name="numberingScheme"/> is not 0 or 1. 
             </exception> 
             
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="numberingScheme"/> is neither zero based scheme nor one
             based scheme. 
             </exception>
             
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GeneticSnpResults.TypeId">
            <summary>
            Retrieves the unique identifier for the genetic snp result type.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.GeneticSnpResults"/> instance from the data
            in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the genetic snp result data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            an "genetic-snp-results" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the SNP test results to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the SNP test result data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.GeneticSnpResults.When"/> or <see cref="P:Microsoft.Health.ItemTypes.GeneticSnpResults.GenomeBuild"/> or <see cref="P:Microsoft.Health.ItemTypes.GeneticSnpResults.Chromosome"/> 
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GeneticSnpResults.ToString">
            <summary>
            Gets the description of a SNP result instance. 
            </summary>
            
            <returns>
            A string representation of the SNP result instance. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.When">
            <summary>
            Gets or sets the date and time when the samples were collected.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.GenomeBuild">
             <summary>
             Gets or sets the genome build that defines the SNPs. 
             </summary>
            
             <remarks>
             Example: NCBI Build 36.3.
             </remarks>
             
             <exception cref="T:System.ArgumentException">
             If the <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
             whitespace.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.Chromosome">
             <summary>
             Gets or sets the chromosome on which the SNPs are located.  
             </summary>
            
             <remarks>
             Examples: 1, 22, X, MT
             </remarks>
             
             <exception cref="T:System.ArgumentException">
             If the <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
             whitespace.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.NumberingScheme">
            <summary>
            The numbering scheme used for positions. 
            </summary>
            
            <remarks>
            0 = 0 based numbering scheme.
            1 = 1 based numbering scheme. 
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is neither zero based scheme nor one
            based scheme. 
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.OrderedBy">
             <summary>
             Gets or sets the person or organization that ordered the SNP test. 
             </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.TestProvider">
             <summary>
             The organization that provides the SNP test service.  
             </summary>
            
             <remarks>
             This organization typically also provides analysis of the results.  
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.LaboratoryName">
            <summary>
            The name of the laboratory that performed the test.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.AnnotationVersion">
             <summary>
             Gets or sets the annotation version.
             </summary>
            
             <value>
             A string representing the annotation version.
             </value>
            
             <remarks>
             Set the value to <b>null</b> if the annotation version should not be
             stored.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.dbSnpBuild">
             <summary>
             Gets or sets the dbSNP build version.
             </summary>
            
             <value>
             A string representing the dbSNP build version.
             </value>
            
             <remarks>
             Set the value to <b>null</b> if the dbSNP version should not be
             stored.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.Platform">
             <summary>
             Gets or sets the platform.
             </summary>
            
             <value>
             A string representing the platform.
             </value>
            
             <remarks>
             Set the value to <b>null</b> if the platform should not be
             stored.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GeneticSnpResults.SnpData">
             <summary>
             The SNP test results data.  
             </summary>
            
             <remarks>
             The SNP test result data is exposed as a <see cref="P:Microsoft.Health.ItemTypes.GeneticSnpResults.SnpData"/> instance. 
             
             To get the SNP test result data when fetching an instance of the 
             GeneticSnpResults health record item type, you must specify that
             the other-data section to be returned to access the SnpData.
             </remarks>
             
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GenomeNumberingScheme">
            <summary>
            Provides values for genome numbering scheme.
            </summary>
            
            <remarks>
            It can be either 0 based numbering scheme or 1 based numbering scheme.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GenomeNumberingScheme.ZeroBased">
            <summary>
            0 based numbering scheme.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GenomeNumberingScheme.OneBased">
            <summary>
            1 based number scheme. 
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GenomeNumberingScheme.Unknown">
            <summary>
            Unknown numbering scheme. 
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Goal">
            <summary>
            Represents a goal.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Goal.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Goal"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Goal.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Goal"/> class with the specified 
            target date.
            </summary>
            
            <param name="targetDate">
            The approximate date which is the target completion date
            for the goal.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Goal.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the goal information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Goal.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the goal into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the goal.
            </param>
            
            <param name="writer">
            The XML writer into which the goal should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Goal.TargetDate">
            <summary>
            Gets or sets the date for achieving the goal.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> representing the date.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if this property should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Goal.CompletionDate">
            <summary>
            Gets or sets the date the goal was achieved.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> representing the date.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if this property should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Goal.Status">
            <summary>
            Gets or sets the status of the goal.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.GoalStatus"/> value.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if this property should not be stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GoalStatus">
            <summary>
            Provides values representing the status of a goal.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GoalStatus.Unknown">
            <summary>
            The goal status is unknown or cannot be understood by this client.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GoalStatus.Active">
            <summary>
            The goal is being actively pursued.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GoalStatus.Achieved">
            <summary>
            The goal has been achieved.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GoalStatus.Abandoned">
            <summary>
            The goal has been abandoned and is no longer being pursued.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GroupMembership">
            <summary>
            Represents a health record item type that encapsulates
            a collection of group membership information.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembership.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembership"/> class 
            with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GroupMembership.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembership.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this group membership instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the group membership data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a group membership node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembership.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the group membership data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the group membership data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembership.ToString">
            <summary>
            Gets a string representation of the group membership.
            </summary>
            
            <returns>
            A string representing the group membership.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembership.GroupMemberships">
            <summary>
            Gets a collection of group memberships of the record owner.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembership.Expires">
            <summary>
            Gets or sets the date/time when the group membership expires.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            Set the value to <b>null</b> if there is no expiration.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GroupMembershipActivity">
            <summary>
            Represents a health record item type that an activity related to a group membership.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipActivity"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodedValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipActivity"/> class with the 
            specified date/time and activity.
            </summary>
            
            <param name="when">
            The date/time when the activity occurred.
            </param>
            
            <param name="activity">
            The activity that occurred.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> or <paramref name="activity"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.GroupMembershipActivity.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipActivity"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the group membership activity data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a group-membership-activity node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the group membership activity data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the group membership activity data to.
            </param>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.When"/> or <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.Activity"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipActivity.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            
            <returns>
            <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.Activity"/> if set; otherwise String.Empty.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.When">
            <summary>
            Gets or sets the date/time when the group membership activity
            occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> for the group membership activity. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.Activity">
            <summary>
            Gets or sets the activity that occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodedValue"/>.
            </value>
            
            <remarks>
            For example: RecordAuthorizedForApplication.
            The preferred vocabulary for the activity is "group-membership-activities".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipActivity.ActivityInfo">
            <summary>
            Gets or sets additional information about the activity.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.GroupMembershipType">
            <summary>
            Represents a group membership.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipType"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipType"/> class with the specified
            name.
            </summary>
            
            <param name="name">
            The group name.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.#ctor(Microsoft.Health.ItemTypes.CodableValue,System.String)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.GroupMembershipType"/> class with the specified
            name and value.
            </summary>
            
            <param name="name">
            The name of the group type.
            </param>
            
            <param name="value">
            The value the member has for the group type.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the group membership type from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the group membership type.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the group membership type data to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the group membership type.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the group membership type to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipType.Name"/>  or <see cref="P:Microsoft.Health.ItemTypes.GroupMembershipType.Value"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.GroupMembershipType.ToString">
            <summary>
            Gets a string representation of the group membership type.
            </summary>
            
            <returns>
            A string representing the group membership type.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipType.Name">
            <summary>
            Gets or sets the group membership name.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is empty.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.GroupMembershipType.Value">
            <summary>
            Gets or sets the group membership value.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>, empty, or contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HbA1C">
            <summary>
            Represents a health record item type that encapsulates a test that 
            measures the amount of glycosylated hemoglobin in the blood.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HbA1C.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HbA1C"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HbA1C.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HbA1C"/> class with the 
            specified date and amount.
            </summary>
            
            <param name="when">
            The date/time when the HbA1C was taken.
            </param>
            
            <param name="value">
            The amount of glycosylated hemoglobin in the blood as a percentage.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than zero or greater than one.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.HbA1C.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HbA1C.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this HbA1C instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the HbA1C data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an HbA1C node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HbA1C.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the HbA1C data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the HbA1C data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HbA1C.ToString">
            <summary>
            Gets a string representation of the HbA1C value.
            </summary>
            
            <returns>
            A string representing the HbA1C value.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HbA1C.When">
            <summary>
            Gets or sets the date/time when the aerobic profile was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The value defaults to the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HbA1C.Value">
            <summary>
            Gets or sets the amount of glycosylated hemoglobin in the blood.
            </summary>
            
            <value>
            A number representing the amount.
            </value>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HbA1C.AssayMethod">
            <summary>
            Gets or sets the assay method.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the method.
            </value>
            
            <remarks>
            The preferred vocabulary for this value is "HbA1C-assay-method".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HbA1C.DeviceId">
            <summary>
            Gets or sets the ID of the device that took the reading.
            </summary>
            
            <value>
            A string representing the ID.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HealthAssessment">
            <summary>
            A health record item containing the results of a health assessment.
            </summary>
            
            <remarks>
            Examples of health assessment include high blood pressure assessment and diabetes assessment.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthAssessment"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.String,Microsoft.Health.ItemTypes.CodableValue,System.Collections.Generic.IList{Microsoft.Health.ItemTypes.Assessment})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthAssessment"/> class with the specified 
            mandatory parameters.
            </summary>
            
            <param name="when">
            The date and time the assessment was completed.
            </param>
            
            <param name="name">
            The application's name for the assessment. See <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.Name"/> for more information.
            </param>
            
            <param name="category">
            The type of the assessment.
            </param>
            
            <param name="result">
            The results of the assessment.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> or <paramref name="category"/>, or <paramref name="result"/> 
            is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is <b>null</b> or empty or <paramref name="result"/> is empty.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.HealthAssessment.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this health assessment instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the health assessment data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a health-assessment node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the health assessment data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the health assessment data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.When"/>, <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.Name"/>, <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.Category"/>, or 
            <see cref="P:Microsoft.Health.ItemTypes.HealthAssessment.Result"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthAssessment.ToString">
            <summary>
            Gets a string representation of the health assessment.
            </summary>
            
            <returns>
            A string representation of the health assessment.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthAssessment.When">
            <summary>
            Gets or sets the date and time of the health assessment was completed.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthAssessment.Name">
            <summary>
            Gets or sets the application's name for the assessment.
            </summary>
            
            <remarks>
            Example: Fabrikam's Heart Risk Assessment.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> is <b>null</b>, empty, or contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthAssessment.Category">
            <summary>
            Gets or sets the type of assessment.
            </summary>
            
            <remarks>
            Examples: Heart assessment, diabetes assessment, colon cancer assessment.
            The preferred vocabulary for route is "health-assessment-category".
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthAssessment.Result">
            <summary>
            Gets a collection of the results of the assessment.
            </summary>
            
            <remarks>
            Example: High blood pressure, low risk.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HealthcareProxy">
            <summary>
            Represents a health record item type that encapsulates a healthcare proxy.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthcareProxy.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthcareProxy"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item isn't added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthcareProxy.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthcareProxy"/> class 
            with the specified date and time.
            </summary>
            
            <param name="when">
            The date/time for the healthcare proxy.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.HealthcareProxy.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthcareProxy.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this healthcare proxy instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the healthcare proxy data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a healthcare proxy node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthcareProxy.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the healthcare proxy data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the healthcare proxy data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.HealthcareProxy.When"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthcareProxy.ToString">
            <summary>
            Gets a string representation of the healthcare proxy item.
            </summary>
            
            <returns>
            A string representation of the healthcare proxy item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthcareProxy.When">
            <summary>
            Gets or sets the date/time for the medical equipment.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthcareProxy.Proxy">
            <summary>
            Gets or sets the proxy contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the proxy contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthcareProxy.Alternate">
            <summary>
            Gets or sets the alternate contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the alternate contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthcareProxy.PrimaryWitness">
            <summary>
            Gets or sets the primary witness contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the primary witness contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthcareProxy.SecondaryWitness">
            <summary>
            Gets or sets the secondary witness contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the secondary witness contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthcareProxy.Content">
            <summary>
            Gets or sets the content of what is being proxied.
            </summary>
            
            <value>
            A string representing the content.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the content should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HealthServiceDate">
            <summary> 
            Represents a HealthVault date.
            </summary>
            
            <remarks>
            A HealthVault date differs from a <see cref="T:System.DateTime"/> in 
            that it pertains to dates only, not times. The year, month, and day
            must be specified.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> class 
            with values defaulting to the current year, month, and day.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> class 
            with the specified year, month, and day.
            </summary>
            
            <param name="year">
            The year between 1000 and 9999.
            </param>
            
            <param name="month">
            The month between 1 and 12.
            </param>
            
            <param name="day">
            The day between 1 and 31.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="year"/> parameter is less than 1000 or greater than 9999, 
            or the <paramref name="month"/> parameter is less than 1 or greater than 12, 
            or the <paramref name="day"/> parameter is less than 1 or greater than 31.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the date from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the date.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the date to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the date.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the date to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.CompareTo(System.Object)">
            <summary>
            Compares the specified object to this HealthServiceDate object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="obj"/>. If the result is zero
            the instance is equal to <paramref name="obj"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="obj"/>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/>
            or <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDate)">
            <summary>
            Compares the specified object to this HealthServiceDate object.
            </summary>
            
            <param name="other">
            The date to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.CompareTo(System.DateTime)">
            <summary>
            Compares the specified object to this HealthServiceDate object.
            </summary>
            
            <param name="other">
            The date to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.Equals(System.Object)">
            <summary>
            Retrieves a value indicating whether the specified object is equal to this object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the <paramref name="obj"/> is a 
            <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> object and the year, month, and
            day exactly match the year, month, and day of this object; otherwise, 
            <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/>
            object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.GetHashCode">
            <summary>
            See the base class documentation.
            </summary>
            
            <returns>
            See the base class documentation.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.op_Equality(Microsoft.Health.ItemTypes.HealthServiceDate,System.Object)">
            <summary>
            Retrieves a value indicating whether the specified object is equal 
            to the specified date.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            exactly match the year, month, and day of <paramref name="secondInstance"/> ;
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not a 
            <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.op_Inequality(Microsoft.Health.ItemTypes.HealthServiceDate,System.Object)">
            <summary>
            Retrieves a value indicating whether the specified object is not 
            equal to the specified date.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>false</b> if the year, month, and day of the <paramref name="date"/> 
            exactly match the year, month, and day of <paramref name="secondInstance"/> ; 
            otherwise, <b>true</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.op_GreaterThan(Microsoft.Health.ItemTypes.HealthServiceDate,System.Object)">
            <summary>
            Retrieves a value indicating whether the specified date is greater 
            than the specified object.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            is greater than the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.op_LessThan(Microsoft.Health.ItemTypes.HealthServiceDate,System.Object)">
            <summary>
            Retrieves a value indicating whether the specified date is less than 
            the specified object.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            is less than the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDate"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDate.ToString">
            <summary>
            Gets a string representation of the date.
            </summary>
            
            <returns>
            A string representation of the date.
            </returns>
            
            <remarks>
            This method is not yet culture aware.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthServiceDate.Year">
            <summary>
            Gets or sets the year of the date.
            </summary>
            
            <returns>
            An integer representing the year.
            </returns>
            
            <remarks>
            This value defaults to the current year.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1000 or greater than 9999.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthServiceDate.Month">
            <summary>
            Gets or sets the month of the date.
            </summary>
            
            <returns>
            An integer representing the month.
            </returns> 
            
            <remarks>
            This value defaults to the current month.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1 or greater than 12.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthServiceDate.Day">
            <summary>
            Gets or sets the day of the date.
            </summary>
            
            <returns>
            An integer representing the day.
            </returns> 
            
            <remarks>
            This value defaults to the current day.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 1 or greater than 31.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HealthServiceDateTime">
            <summary> 
            Represents a date and time.
            </summary>
            
            <remarks>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> is different from a <see cref="T:System.DateTime"/>
            in that the time is optional and it can be determined if it was 
            specified. Also, the time zone is optional and is not interpreted in
            any way by HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> class 
            with the date set to the current date and the time not set.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> class 
            with the specified date.
            </summary>
            
            <param name="date">
            The date.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="date"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> 
            class with the specified date and time.
            </summary>
            
            <param name="date">
            The date.
            </param>
            
            <param name="time">
            The approximate time.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="date"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(Microsoft.Health.ItemTypes.HealthServiceDate,Microsoft.Health.ItemTypes.ApproximateTime,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> 
            class with the specified date, time, and time zone.
            </summary>
            
            <param name="date">
            The date.
            </param>
            
            <param name="time">
            The approximate time.
            </param>
            
            <param name="timeZone">
            The optional time zone for the <paramref name="time"/>.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="date"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.#ctor(System.DateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> 
            class from the specified DateTime instance.
            </summary>
            
            <param name="dateTime">
            The date and time used to construct the HealthVault date and time.
            </param>
            
            <remarks>
            The time zone is ignored.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the date and time from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the date and time.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the date and time to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the date and time.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the date and time to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Explicit(Microsoft.Health.ItemTypes.HealthServiceDateTime)~System.DateTime">
            <summary>
            Casts the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance to a System.DateTime object.
            </summary>
            
            <param name="wcDateTime">
            The <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance to cast.
            </param>
            
            <returns>
            A DateTime instance with the appropriate fields populated by the
            <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> values.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.ToDateTime">
            <summary>
            Converts the <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance to a System.DateTime object.
            </summary>
            
            <returns>
            A DateTime instance with the appropriate fields populated by the
            <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> values.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.ToString">
            <summary>
            Gets the date and time as a string.
            </summary>
            
            <returns>
            The date and time represented as a string.
            </returns>
            
            <remarks>
            This method is not yet culture aware.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.Object)">
            <summary>
            Compares the specified object to this <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> 
            object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="obj"/>. If the result is zero
            the instance is equal to <paramref name="obj"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="obj"/>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/>
            or <see cref="T:System.DateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Compares the specified object to this <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> 
            object.
            </summary>
            
            <param name="other">
            The date to be compared.
            </param>
            
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.CompareTo(System.DateTime)">
            <summary>
            Compares the specified object to this HealthServiceDateTime object.
            </summary>
            
            <param name="other">
            The date to be compared.
            </param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the 
            objects being compared. If the result is less than zero, the 
            instance is less than <paramref name="other"/>. If the result is zero
            the instance is equal to <paramref name="other"/>. If the result is
            greater than zero, the instance is greater than 
            <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.Equals(System.Object)">
            <summary>
            Gets a value indicating whether the specified object is equal to this object.
            </summary>
            
            <param name="obj">
            The object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the <paramref name="obj"/> is a 
            <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> object and the year, month, and
            day exactly match the year, month, and day of this object; otherwise,
            <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="obj"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/>
            object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.GetHashCode">
            <summary>
            See the base class documentation.
            </summary>
            
            <returns>
            See the base class documentation.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Equality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified object is equal to the specified
            date.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            exactly match the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not a 
            <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_Inequality(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified object is not equal to the specified
            date.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>false</b> if the year, month, and day of the <paramref name="date"/> 
            exactly match the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>true</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not a 
            <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_GreaterThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified date is greater than 
            the specified object.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            is greater than the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> object.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HealthServiceDateTime.op_LessThan(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Object)">
            <summary>
            Gets a value indicating whether the specified date is less than the specified
            object.
            </summary>
            
            <param name="date">
            The date object to be compared.
            </param>
            
            <param name="secondInstance">
            The second object to be compared.
            </param>
            
            <returns>
            <b>true</b> if the year, month, and day of the <paramref name="date"/> 
            is less than the year, month, and day of <paramref name="secondInstance"/>; 
            otherwise, <b>false</b>.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="secondInstance"/> parameter is not a <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> object.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthServiceDateTime.Date">
            <summary>
            Gets or sets the date.
            </summary>
            
            <remarks>
            Defaults to the current year, month, and day.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthServiceDateTime.Time">
            <summary>
            Gets or sets the time.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> instance representing the time.
            </returns>
            
            <remarks>
            If the time isn't known it can be set to <b>null</b>. This value defaults
            to an absent time. The reference is valid but the time will not be
            stored unless the hour and minute are set.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HealthServiceDateTime.TimeZone">
            <summary>
            Gets or sets the time zone.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the time zone.
            </returns>
            
            <remarks>
            If the time zone is unknown, it can be set to <b>null</b>. This value defaults
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HeartRate">
            <summary>
            A measurement of the record owner's heart rate.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.#ctor">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.HeartRate"/> with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Int32)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Health.ItemTypes.HeartRate"/> with specified parameters. 
            </summary>
            
            <param name="when">The date and time the measurement was taken.</param>
            
            <param name="value">The heart rate in beats per minute (BPM).</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> is <b>null</b>. 
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/> is less than zero.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.HeartRate.TypeId">
            <summary>
            Retrieves the unique identifier for the heart rate item type.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.HeartRate"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the heart rate data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a "heart-rate" node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the heart rate data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the heart rate data to. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.HeartRate.When"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRate.ToString">
            <summary>
            Gets the description of a heart rate instance. 
            </summary>
            
            <returns>
            A string representation of the heart rate item. 
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.When">
            <summary>
            Gets or sets the date and time of this measurement.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.Value">
            <summary>
            Gets or sets the heart rate in beats per minutes (BPM). 
            </summary>
            
            <returns>
            An integer representing the heart rate in beats per minute(BPM).
            </returns>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the <paramref name="value"/> parameter is less than zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.MeasurementMethod">
            <summary>
            Gets or sets the technique used to obtain the measurement. 
            </summary>
            
            <value>
            The technique used to obtain the measurement.
            </value>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>. The preferred vocabulary 
            for this value is "heart-rate-measurement-method".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.MeasurementConditions">
            <summary>
            Gets or sets the conditions under which the heart rate was measured.
            </summary>
            
            <value>
            The conditions under which the heart rate was measured. 
            </value>
            
            <remarks>
            Examples: Resting, Active, Morning, Evening. If the value is not known, it will be set to <b>null</b>. The preferred vocabulary 
            for this value is "heart-rate-measurement-conditions".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRate.MeasurementFlags">
            <summary>
            Gets or sets the additional information about the measurement. 
            </summary>
            
            <value>
            The additional information about the measurement
            </value>
            
            <remarks>
            Examples: Incomplete measurement, irregular heartbeat, triple scan. The preferred
            vocabulary for this value is "heart-rate-measurement-flags". If the value is not 
            known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HeartRateZone">
            <summary>
            Represents a target heart rate zone.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZone.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HeartRateZone"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZone.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HeartRateZone"/> class with 
            the specified zone name and absolute heart rate boundaries.
            </summary>
            
            <param name="name">
            The name of the zone.
            </param>
            
            <param name="lowerBoundaryHeartRate">
            The heart rate in Beats Per Minute (BPM) for the lower boundary
            of the zone.
            </param>
            
            <param name="upperBoundaryHeartRate">
            The heart rate in Beats Per Minute (BPM) for the upper boundary
            of the zone.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZone.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HeartRateZone"/> class with 
            the specified relative heart rate boundaries.
            </summary>
            
            <param name="name">
            The name of the zone.
            </param>
            
            <param name="lowerBoundaryPercentage">
            The heart rate as a percentage of max heart rate for the lower 
            boundary of the zone.
            </param>
            
            <param name="upperBoundaryPercentage">
            The heart rate as a percentage of max heart rate for the upper 
            boundary of the zone.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZone.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the heart rate zone information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZone.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the heart rate zone into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the heart rate zone.
            </param>
            
            <param name="writer">
            The XML writer into which the heart rate zone should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If the <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.RelativeLowerBoundary"/>,  
            <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteLowerBoundary"/>, 
            or <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.RelativeUpperBoundary"/>, or
            <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteUpperBoundary"/> property is not set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRateZone.Name">
            <summary>
            Gets or sets the name for the heart rate zone.
            </summary>
            
            <value>
            A string representing the name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the name should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRateZone.RelativeLowerBoundary">
            <summary>
            Gets or sets the lower boundary of the heart rate zone as a
            percentage of the person's maximum heart rate.
            </summary>
            
            <value>
            A number representing the boundary.
            </value>
            
            <remarks>
            Only <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.RelativeLowerBoundary"/> or 
            <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteLowerBoundary"/> can be stored. If both are
            set, only <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteLowerBoundary"/> is stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteLowerBoundary">
            <summary>
            Gets or sets the lower boundary of the heart rate zone as a
            specific heart rate.
            </summary>
            
            <value>
            An integer representing the boundary.
            </value>
            
            <remarks>
            Only <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.RelativeLowerBoundary"/> or 
            <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteLowerBoundary"/> can be stored. If both are
            set, only <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteLowerBoundary"/> is stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRateZone.RelativeUpperBoundary">
            <summary>
            Gets or sets the upper boundary of the heart rate zone as a
            percentage of the person's maximum heart rate.
            </summary>
            
            <value>
            A number representing the boundary.
            </value>
            
            <remarks>
            Only <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.RelativeUpperBoundary"/> or 
            <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteUpperBoundary"/> can be stored. If both are
            set, only <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteUpperBoundary"/> is stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteUpperBoundary">
            <summary>
            Gets or sets the upper boundary of the heart rate zone as a
            specific heart rate.
            </summary>
            
            <value>
            An integer representing the boundary.
            </value>
            
            <remarks>
            Only <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.RelativeUpperBoundary"/> or 
            <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteUpperBoundary"/> can be stored. If both are
            set, only <see cref="P:Microsoft.Health.ItemTypes.HeartRateZone.AbsoluteUpperBoundary"/> is stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.HeartRateZoneGroup">
            <summary>
            Represents a grouping of heart rate zones by name.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HeartRateZoneGroup"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HeartRateZoneGroup"/> class 
            with the specified name.
            </summary>
            
            <param name="name">
            The name of the heart rate zone grouping.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.HeartRateZone})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.HeartRateZoneGroup"/> class 
            with the specified name and target zones.
            </summary>
            
            <param name="name">
            The name of the heart rate zone grouping.
            </param>
            
            <param name="targetZones">
            The target heart rate zones for the grouping.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the heart rate zone group information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.HeartRateZoneGroup.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the heart rate zone group into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the heart rate zone group.
            </param>
            
            <param name="writer">
            The XML writer into which the heart rate zone group should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones"/> property contains no zones.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRateZoneGroup.Name">
            <summary>
            Gets or sets the name for the heart rate zone group.
            </summary>
            
            <value>
            A string representing the name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the name should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.HeartRateZoneGroup.TargetZones">
            <summary>
            Gets the target heart rate zones for the zone group.
            </summary>
            
            <value>
            A collection of zones.
            </value>
            
            <remarks>
            To add a zone to the group, call Add on the returned collection.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Height">
            <summary>
            Represents a health record item type that encapsulates a person's height.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Height.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Height"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Height.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Height"/> class with the
            specified height in meters.
            </summary>
            
            <param name="meters">
            The height in meters.
            </param>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Height.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.Length)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Height"/> class with the
            specified date and time of measurement and the height in meters.
            </summary>
            
            <param name="when">
            The date/time when the height measurement occurred.
            </param>
            
            <param name="height">
            The person's height.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> or <paramref name="height"/> parameter is 
            <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Height.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Height"/> class with the
            specified height in meters and display value.
            </summary>
            
            <param name="meters">
            The height in meters.
            </param>
            
            <param name="displayValue">
            The height value as entered by the user. Typically, the display value is 
            used when the user-entered height units are not in meters.
            </param>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Height.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Height.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Height"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the height data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a height node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Height.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the height data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the height data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Height.Value"/> has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Height.ToString">
            <summary>
            Gets a string representation of the height item.
            </summary>
            
            <returns>
            A string representation of the height item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Height.When">
            <summary>
            Gets or sets the date/time when the height measurement
            was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Height.Value">
            <summary>
            Gets or sets the person's height.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Length"/> value representing the person's height.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Immunization">
            <summary>
            Represents health record item type that contains information about an immunization.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Immunization"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Immunization"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="name">
            The name of the immunization.
            </param>
            
            <param name="dateAdministrated">
            The approximate date that the immunization was adminstrated.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Immunization"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="name">
            The name of the immunization.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is null.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Immunization.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Immunization"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the immunization data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an immunization node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the immunization data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the immunization data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Immunization.Name"/> has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Immunization.ToString">
            <summary>
            Gets a string representation of the immunization item.
            </summary>
            
            <returns>
            A string representation of the immunization item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Name">
            <summary>
            Gets or sets the name of the immunization.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the name.
            </value>
            
            <remarks>
            The preferred vocabulary for the immunization name is "vaccines-cvx".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is null during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.DateAdministrated">
            <summary>
            Gets or sets the date the immunization was administrated.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date.
            </value> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Administrator">
            <summary>
            Gets or sets the name of the administrator of the immunization.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> instance representing the person.
            </value> 
            
            <remarks>
            Set the value to null if the administrator should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Manufacturer">
            <summary>
            Gets or sets the manufacturer of the vaccine.
            </summary>
            
            <value>
            A string representing the manufacturer.
            </value> 
            
            <remarks>
            Set the value to null if the manufacturer should not be stored.
            The preferred vocabulary for the immunization manufacturer is "vaccine-manufacturers-mvx".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Lot">
            <summary>
            Gets or sets the lot of the vaccine.
            </summary>
            
            <value>
            A string representing the lot.
            </value> 
            
            <remarks>
            Set the value to null if the lot should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Route">
            <summary>
            Gets or sets the medical route for the immunization.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the route.
            </value> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.ExpirationDate">
            <summary>
            Gets or sets the expiration date for the vaccine.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDate"/> instance representing the date.
            </value> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Sequence">
            <summary>
            Gets or sets the sequence for the immunization.
            </summary>
            
            <value>
            A string representing the sequence.
            </value>
            
            <remarks>
            Set the value to null if the consent should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.AnatomicSurface">
            <summary>
            Gets or sets the anatomic surface for the immunization.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the surface.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.AdverseEvent">
            <summary>
            Gets or sets any adverse event description for the immunization.
            </summary>
            
            <value>
            A string representing the event description.
            </value> 
            
            <remarks>
            Set the value to null if the description should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Immunization.Consent">
            <summary>
            Gets or sets the consent description for the immunization.
            </summary>
            
            <value>
            A string representing the consent description.
            </value> 
            
            <remarks>
            Set the value to null if the consent should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.InhalerPurpose">
            <summary>
            Provides values representing the intended purpose for the inhaler.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.InhalerPurpose.None">
            <summary>
            Purpose is not known.
            </summary>
            
            <remarks>
            This value causes an exception to be thrown.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.InhalerPurpose.Control">
            <summary>
            The intended purpose is to control the condition.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.InhalerPurpose.Rescue">
            <summary>
            The intended purpose is to meet an emergency condition.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.InhalerPurpose.Combination">
            <summary>
            The intended purpose combines both control and rescue.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.InsulinInjection">
            <summary>
            Represents a health record item type that encapsulates an insulin injection.
            </summary>
            
            <remarks>
            This class represents any injection unit used to dispense insulin. 
            The injector might or might not have a device component.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjection.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.InsulinInjection"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjection.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.InsulinInjectionMeasurement)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.InsulinInjection"/> class 
            with the specified insulin type and amount.
            </summary>
            
            <param name="insulinType">
            The type of insulin being used.
            </param>
            
            <param name="amount">
            The amount of insulin.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="amount"/> or <paramref name="insulinType"/> parameter 
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.InsulinInjection.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjection.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.InsulinInjection"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the insulin injection data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an insulin-injection node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the insulin injection data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the insulin injection data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.InsulinInjection.InsulinType"/> property is <b>null</b>, or the 
            <see cref="P:Microsoft.Health.ItemTypes.InsulinInjection.Amount"/> property is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjection.ToString">
            <summary>
            Gets a string representation of the insulin injection item.
            </summary>
            
            <returns>
            A string representation of the insulin injection item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.InsulinInjection.InsulinType">
            <summary>
            Gets or sets the type of insulin being used in the injector.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the type.
            </value>
            
            <remarks>
            The preferred vocabulary is "insulin-types".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.InsulinInjection.Amount">
            <summary>
            Gets or sets the amount of insulin.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement"/> representing 
            the amount.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The value is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.InsulinInjection.DeviceId">
            <summary>
            Gets or sets the identifier for the device.
            </summary>
            
            <value>
            A string representing the identifier.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the device identifier should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement">
            <summary>
            Represents an insulin injection measurement.
            </summary>
            
            <remarks>
            In HealthVault, insulin injection readings have values and display values. 
            All values are stored in a base unit of IE. An application can 
            take an insulin injection value using any scale the application chooses and 
            can store the user-entered value as the display value, but the insulin
            injection value must be converted to IE to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement"/> 
            class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement"/> 
            class with the specified value in IE (1/100mL).
            </summary>
            
            <param name="iE">
            The insulin injection measurement in 1/100mL.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement"/> 
            class with the specified value in IE (1/100mL) and display value.
            </summary>
            
            <param name="iE">
            The insulin injection measurement in IE (1/100mL).
            </param>
            
            <param name="displayValue">
            The display value of the insulin injection measurement. This should 
            contain the exact measurement as entered by the user even if it 
            uses some other unit of measure besides IE. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies that the value is a legal insulin injection measurement in 
            IE (1/100mL).
            </summary>
            
            <param name="value">
            The insulin injection measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the insulin injection from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the insulin injection.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the insulin injection to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the insulin injection to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the insulin injection in the base 
            units.
            </summary>
            
            <returns>
            The insulin injection as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.InsulinInjectionUse">
            <summary>
            Represents a health record item type that encapsulates an insulin 
            injection use.
            </summary>
            
            <remarks>
            The use of an insulin injection unit might require more than one dose
            based on the prescription.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionUse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.InsulinInjectionUse"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionUse.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.InsulinInjectionMeasurement)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.InsulinInjectionUse"/> class 
            with the specified date/time, insulin type, and amount.
            </summary>
            
            <param name="when">
            The date/time when the injection was administrated.
            </param>
            
            <param name="insulinType">
            The type of insulin being used.
            </param>
            
            <param name="amount">
            The amount of insulin.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/>,
            <paramref name="amount"/>, or <paramref name="insulinType"/> parameter 
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.InsulinInjectionUse.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionUse.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.InsulinInjectionUse"/> instance from the 
            data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the insulin injection use data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            an insulin-injection-use node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionUse.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the insulin injection use data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the insulin injection use data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.InsulinInjectionUse.InsulinType"/> or <see cref="P:Microsoft.Health.ItemTypes.InsulinInjectionUse.When"/> property is <b>null</b>, or
            the <see cref="P:Microsoft.Health.ItemTypes.InsulinInjectionUse.Amount"/> property is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.InsulinInjectionUse.ToString">
            <summary>
            Gets a string representation of the insulin injection use item.
            </summary>
            
            <returns>
            A string representation of the insulin injection use item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.InsulinInjectionUse.When">
            <summary>
            Gets or sets the date/time when the insulin injection use occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.InsulinInjectionUse.InsulinType">
            <summary>
            Gets or sets the type of insulin being used in the injector.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the type.
            </value>
            
            <remarks>
            The preferred vocabulary is "insulin-types".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.InsulinInjectionUse.Amount">
            <summary>
            Gets or sets the amount of insulin.
            </summary>
            
            <value>
            A value of <see cref="T:Microsoft.Health.ItemTypes.InsulinInjectionMeasurement"/>.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.InsulinInjectionUse.DeviceId">
            <summary>
            Gets or sets the identifier for the device.
            </summary>
            
            <value>
            A string representing the device identifier.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the device identifier should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Int32Measurement">
            <summary>
            Represents a measurement of type int and display.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Int32Measurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Int32Measurement"/> class 
            with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Int32Measurement.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Int32Measurement"/> class 
            with the specified value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Int32Measurement.#ctor(System.Int32,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Int32Measurement"/> class 
            with the specified value and optional display value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
            <param name="displayValue">
            The display value of the measurement. This should contain the
            exact measurement as entered by the user even if it uses some
            other unit of measure. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Int32Measurement.AssertMeasurementValue(System.Int32)">
            <summary>
            Verifies that the value is a legal value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Int32Measurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the measurement from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Int32Measurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the measurement to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the measurement to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Int32Measurement.GetValueString(System.Int32)">
            <summary>
            Retrieves a string representation of the measurement in the base units.
            </summary>
            
            <returns>
            The measurement as a string in the base units.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Int32Measurement.ValueElementName">
            <summary>
            Gets or sets the name of the element that defines the value for the measurement.
            </summary>
            
            <returns>
            A string representing the element name.
            </returns>
            
            <remarks>
            The default value for the element name is "value" but should be
            overridden in derived classes to provide a specific element name
            where appropriate.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.ItemTypeRegistrar">
            <summary>
            Defines a method for registering all the health record item types with the
            <see cref="T:Microsoft.Health.ItemTypeManager"/> that are in this assembly.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.ItemTypeRegistrar.RegisterAssemblyHealthRecordItemTypes">
            <summary>
            Registers all the health record item types in this assembly with the 
            <see cref="T:Microsoft.Health.ItemTypeManager"/>.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabResultType">
            <summary>
            Represents a clinical value within lab result.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabResultType.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabResultType"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabResultType.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the lab result type from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the lab result type.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabResultType.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the lab result type data to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the lab result type.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the lab result type to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabResultType.ToString">
            <summary>
            Gets a string representation of the lab result type.
            </summary>
            
            <returns>
            A string representing the lab result type.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabResultType.Value">
            <summary>
            Gets or sets the value for the lab result.
            </summary>
            
            <value>
            A <see cref="T:System.Double"/> representing the value of the lab result, or <b>null</b> if
            no lab result is available.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabResultType.Unit">
            <summary>
            Gets or sets the unit of measure for the <see cref="P:Microsoft.Health.ItemTypes.LabResultType.Value"/>.
            </summary>
            
            <remarks>
            The unit of measure may defined by the HealthVault dictionary or the 
            <see cref="P:Microsoft.Health.ItemTypes.CodableValue.Text"/> property may be set to any unit of measure.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabResultType.ReferenceRange">
            <summary>
            Gets or sets the reference range for the lab result type.
            </summary>
            
            <value>
            The "normal" range of values for this lab result type or <b>null</b> if the reference
            range is not available.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabResultType.ToxicRange">
            <summary>
            Gets or sets the toxic range for the lab result type.
            </summary>
            
            <value>
            The toxic range of values for this lab result type or <b>null</b> if the toxic
            range is not available.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabResultType.TextValue">
            <summary>
            Gets or set the text representation of the value.
            </summary>
            
            <value>
            A string representation of the <see cref="P:Microsoft.Health.ItemTypes.LabResultType.Value"/> or <b>null</b> if the text value is
            not available.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabResultType.Flags">
            <summary>
            Gets a collection of the flags associated with the lab result type.
            </summary>
            
            <value>
            The flags for the lab result type are generally values like "normal", "critical", "high",
            "low", etc. which are defined by the "lab-result-flag" HealthVault vocabulary.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestResults">
            <summary>
            A series of lab test results.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResults"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.LabTestResultGroup})">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResults"/> 
            class with mandatory parameters.
            </summary>
            
            <param name="labGroups">Lab groups is a set of lab results.</param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="labGroups"/> parameter is <b> null </b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.LabTestResults.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResults"/> instance from the data in the XML. 
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the lab test results data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a lab test results node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the lab test results data to the specified XmlWriter.
            </summary> 
            
            <param name="writer">
            The XmlWriter to write the lab test results data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.LabTestResults.Groups"/> is <b>null</b> or empty.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResults.ToString">
             <summary>
             Gets a string representation of the lab test results item.
             </summary> 
            
             <returns>
             A string representation of the lab test results item.
             </returns>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResults.When">
            <summary>
            Gets or sets the date and time of the lab tests results.  
            </summary>
            
            <remarks>
            The date and time should be set to <b> null </b> if they are 
            unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResults.Groups">
            <summary>
            Gets a set of lab results.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResults.OrderedBy">
            <summary>
            Gets or sets the information about the organization which
            ordered the lab tests.
            </summary>
            
            <remarks>
            It should be set to <b> null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestResultGroup">
            <summary>
             A set of lab test results.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultGroup"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultGroup"/> 
            class with group name.
            </summary>
            
            <param name="groupName"> 
            The name of this set of tests.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="groupName"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResultGroup"/> instance from the data in the XML. 
            </summary>
            
            <param name="navigator">
            The XML to get the lab test results group type data from.
            </param> 
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="navigator"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.WriteXml(System.String,System.Xml.XmlWriter)">
             <summary>
             Writes the lab test results group type data to the specified XmlWriter.
             </summary> 
             
             <param name="nodeName">
             The name of the node to write XML output. 
             </param>
             
             <param name="writer">
             The XmlWriter to write the lab test results group type data to.
             </param> 
             
             <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName"/> parameter is <b> null </b> or empty.
             </exception>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b> null </b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.LabTestResultGroup.GroupName"/> parameter is <b> null</b>.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultGroup.ToString">
             <summary>
             Gets a string representation of the lab test results group type item.
             </summary> 
            
             <returns>
             A string representation of the lab test results group type item.
             </returns>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.GroupName">
            <summary>
            Gets or sets the name of this set of tests.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.LaboratoryName">
            <summary>
            Gets or sets the information about the laboratory which performed 
            this set of tests.
            </summary>
            
            <remarks>
            Laboratory name should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.Status">
            <summary>
            Gets or sets the overall status of this group and the sub group tests.  
            </summary>
            
            <remarks>
            The status can be incomplete, pending, processing, etc. It should be 
            set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.SubGroups">
            <summary>
            Gets lab test result sub groups.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultGroup.Results">
            <summary>
            Gets a set of results for this group.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestResultDetails">
            <summary>
            A single laboratory test.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultDetails.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultDetails"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultDetails.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResultDetails"/> instance from the data in the XML. 
            </summary>
            
            <param name="navigator">
            The XML to get the lab test result type data from.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If the first node in <paramref name="navigator"/> is not
            a lab test result type node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultDetails.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the lab test result type data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the node to write XML output.
            </param>
            
            <param name="writer">
            The XmlWriter to write the lab test result type data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultDetails.ToString">
             <summary>
             Gets a string representation of the lab test result type item.
             </summary> 
            
             <returns>
             A string representation of the lab test result type item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.When">
            <summary>
            Gets or sets date and the time of the laboratory test.  
            </summary>
            
            <remarks>
            They should be set to <b>null</b> if they are unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Name">
             <summary>
             Gets or sets name of the laboratory test.  
             </summary>
             
             <remarks>
             It should be set to <b>null</b> or empty if it is unknown.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Substance">
             <summary>
             Gets or sets substance that is tested.  
             </summary>
             
             <remarks>
             It should be set to <b>null</b> if it is unknown.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.CollectionMethod">
            <summary>
            Gets or sets the collection method for the laboratory test.  
            </summary>
            
            <remarks>
            It should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.ClinicalCode">
            <summary>
            Gets or sets the clinical code for the lab tests.  
            </summary>
            
            <remarks>
            It should be set to <b>null</b> if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Value">
            <summary>
            Gets or sets the clinical value within a laboratory result. 
            </summary>
            
            <remarks>
            The type of value is defined within a laboratory result, which includes 
            value, unit, reference and toxic range. It should be set to <b>null</b> 
            if it is unknown.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Status">
            <summary>
            Gets or sets the status of the laboratory results.  
            </summary>
            
            <remarks> 
            Examples of status include complete and pending. It should be 
            set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultDetails.Note">
            <summary>
            Gets or sets a note that augments the laboratory result.  
            </summary>
            
            <remarks> 
            There are two scenarios in which a note is typically added:
            A note may provide additional information about interpreting 
            the result beyond what is stored in the ranges associated with 
            the value. 
            Or, a note may be use to provide the textual result of a lab test
            that does not have a measured value.
            
            Formatting:
            Notes may come from systems that require a line-based approach to textual display. To support
            this, applications should render the spaces and newlines in the note, and use a fixed-width font. 
            The form transform for the lab test results type shows one way to do this.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestResultValue">
            <summary>
            A clinical value within a laboratory result.
            </summary>
            
            <remarks>
            This type defines a clinical value within a laboratory result,
            including value, unit, reference, and toxic ranges.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultValue"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.#ctor(Microsoft.Health.ItemTypes.GeneralMeasurement)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestResultValue"/> 
            class with the specified measurement.
            </summary>
            
            <param name="measurement">
            The value of the lab results.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="measurement"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LabTestResultValue"/> instance from the data in the XML.
            </summary>
            
            <param name="navigator">
            The XML to get the lab test result value type data from.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If the first node in <paramref name="navigator"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the lab test result value type data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the node to write the XML.</param>
            
            <param name="writer">
            The XmlWriter to write the lab test result value type data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.LabTestResultValue.Measurement"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestResultValue.ToString">
             <summary>
             Gets a string representation of the lab test result value type item.
             </summary> 
            
             <returns>
             A string representation of the lab test result value type item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultValue.Measurement">
            <summary>
            Gets or sets measurement.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultValue.Ranges">
            <summary>
            Gets the ranges that are associated with this test.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestResultValue.Flag">
            <summary>
            Gets a collection containing the flags for laboratory results.
            </summary>
            
            <value>
            Example values are normal, high, low.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LabTestType">
            <summary>
            Represents a lab test component, including the lab result value.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestType.#ctor">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestType"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestType.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Constructs a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LabTestType"/> with the specified test
            date.
            </summary>
            
            <param name="when">
            The date and time when the laboratory test was performed.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestType.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the lab test type from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the lab test type.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestType.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the lab test type data to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the lab test type.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the lab test type to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LabTestType.ToString">
            <summary>
            Gets a string representation of the lab test type.
            </summary>
            
            <returns>
            A string representing the lab test type.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.When">
            <summary>
            Gets or sets the date when the lab test was conducted.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date and time. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.Name">
            <summary>
            Gets or sets the name of the test.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.Substance">
            <summary>
            Gets or sets the substance that was tested.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.CollectionMethod">
            <summary>
            Gets or sets the method used to collect the substance.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.TestAbbreviation">
            <summary>
            Gets or sets the abbreviation for the test.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.Description">
            <summary>
            Gets or sets the description for the test.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.Code">
            <summary>
            Gets a collection of the clinical code(s) used for the test.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.Result">
            <summary>
            Gets or sets the result of the lab test.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LabTestType.Status">
            <summary>
            Gets or sets the status of the lab results.
            </summary>
            
            <value>
            A CodableValue representing the status of the lab results. For example, "completed" or
            "pending". These values can be found in the "lab-results-status" HealthVault vocabulary.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Language">
            <summary>
            Represents the language that a person speaks.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Language.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Language"/> class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Language.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Language"/> class with 
            the specified spoken language.
            </summary>
            
            <param name="spokenLanguage">
            The spoken language.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Language.#ctor(Microsoft.Health.ItemTypes.CodableValue,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Language"/> class with 
            the specified spoken language and primary designator.
            </summary>
            
            <param name="spokenLanguage">
            The spoken language.
            </param>
            
            <param name="isPrimary">
            <b>true</b> if <paramref name="spokenLanguage"/> is the primary 
            language for the person; otherwise, <b>false</b>.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Language.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the language from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the language.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Language.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the language to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the language.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the language to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Language.SpokenLanguage">
            <summary>
            Gets or sets the spoken language.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the language.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Language.IsPrimary">
            <summary>
            Gets or sets a value indicating whether the language is the 
            person's primary language.
            </summary>
            
            <value>
            <b>true</b> if the language is the person's primary language; 
            otherwise, <b>false</b>. The default is <b>true</b>.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Length">
            <summary>
            Represents a length value and display.
            </summary>
            
            <remarks>
            In HealthVault, lengths have values and display values. All values are
            stored in a base unit of meters. An application can take a length
            value using any scale the application chooses and can store the 
            user-entered value as the display value, but the length value must be 
            converted to meters to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Length.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Length"/> class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Length.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Length"/> class with the 
            specified value in meters.
            </summary>
            
            <param name="meters">
            The length in meters.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Length.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Length"/> class with the 
            specified value in meters and optional display value.
            </summary>
            
            <param name="meters">
            The length in meters.
            </param>
            
            <param name="displayValue">
            The display value of the length. This should contain the
            exact length as entered by the user even if it uses some
            other unit of measure besides meters. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Length.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies that the value is a legal length value in meters.
            </summary>
            
            <param name="value">
            The length measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Length.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the length from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the length.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Length.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the length to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the length to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Length.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the length in the base units.
            </summary>
            
            <returns>
            The length as a string in the base units.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Length.Meters">
            <summary>
            Gets or sets the value of the length in meters.
            </summary>
            
            <value>
            A number representing the length.
            </value>
            
            <remarks>
            The value must be in meters. The <see cref="T:Microsoft.Health.ItemTypes.DisplayValue"/> can
            be used to store the user-entered value in a scale other than
            metric.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.LifeGoal">
            <summary>
            Represents a health record item type that encapsulates a life goal.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LifeGoal.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LifeGoal"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LifeGoal.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.LifeGoal"/> class with the 
            specified description.
            </summary>
            
            <param name="description">
            The description that defines the life goal.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="description"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.LifeGoal.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LifeGoal.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.LifeGoal"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the life goal data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a life-goal node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LifeGoal.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the life goal data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the life goal data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.LifeGoal.Description"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.LifeGoal.ToString">
            <summary>
            Gets a string representation of the life goal.
            </summary>
            
            <returns>
            A string representing the life goal.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LifeGoal.Description">
            <summary>
            Gets or sets the description of the goal.
            </summary>
            
            <value>
            A string representing the goal description.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only 
            whitespace during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.LifeGoal.Goal">
            <summary>
            Gets or sets the goal information.
            </summary>
            
            <value>
            A <see cref="P:Microsoft.Health.ItemTypes.LifeGoal.Goal"/> value containing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the goal information should not be stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Link">
            <summary>
            Represents information about a link to a URL.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Link.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Link"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Link.#ctor(System.Uri)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Link"/> class with the 
            specified URL.
            </summary>
            
            <param name="url">
            The URL of the link.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="url"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Link.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Link.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Link"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the link data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a link node.
            </exception>
            
            <exception cref="T:System.UriFormatException">
            The url element in the XML is not properly formatted.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Link.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the file data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the link data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Link.Url"/> property is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Link.ToString">
            <summary>
            Gets a string representation of the link.
            </summary>
            
            <returns>
            A string representation of the link.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Link.Url">
            <summary>
            Gets or sets the URL of the link.
            </summary>
            
            <value>
            A <see cref="T:System.Uri"/>.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Link.Title">
            <summary>
            Gets or sets the link title.
            </summary>
            
            <value>
            A string representing the link title.
            </value>
            
            <remarks>
            The link title is a friendly name for the link.<br/>
            <br/>
            This property must be set before the item is created or updated.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Link.DisplayText">
            <summary>
            Gets the display text for the link.
            </summary>
            
            <value>
            A string representing the link display text.
            </value>
            
            <remarks>
            If the <see cref="P:Microsoft.Health.ItemTypes.Link.Title"/> property is set, its value is returned.
            If not, the <see cref="P:Microsoft.Health.ItemTypes.Link.Url"/> value is returned.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MedicalImageStudy">
            <summary>
            Represents a health record item type that encapsulates a study containing medical images.
            </summary>
            
            <remarks>
            DICOM data is stored in the named BLOB portion of the data type, and it is recommended 
            that normal DICOM conventions are used for naming.
            
            An application may store XDS-i manifest information in XML format in the xds-i element.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudy"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.MedicalImageStudySeries})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudy"/> class
            specifying mandatory values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
            <param name="series">
            Medical image study series
            </param>
            <param name="when">
            Time that the study was created.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            <exception cref="T:System.ArgumentException">
            If <paramref name="series"/> parameter is <b>null</b> or doesn't contain any series.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.MedicalImageStudy.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medical image study data from.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="typeSpecificXml"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a medical image study node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the medical image study into
            the specified XML writer.
            </summary>
            
            <param name="writer">
            The XML writer into which the medical image study series should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudy.When"/> is <b>null</b>.
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudy.Series"/> collection is <b>null</b> or empty. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudy.ToString">
            <summary>
            Gets a string representation of the medical image study.
            </summary>
            
            <returns>
            A string representation of the medical image study.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.When">
            <summary>
            Gets or sets the time that the study was created.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tags (0008, 0020) and (0008, 0030).
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.PatientName">
            <summary>
            Gets or sets the name of the patient as contained in the medical image.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0010, 0010).
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.Description">
            <summary>
            Gets or sets a description of the study.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008, 1030).
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.Series">
            <summary>
            Gets a collection of series.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.Reason">
            <summary>
            Gets or sets the reason for the study.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0032, 1030).
            
            If there is no information about the reason the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.PreviewBlobName">
            <summary>
            Gets or sets the name of the BLOB holding a smaller version of the image 
            suitable for web viewing or email.
            </summary>
            
            <remarks>
            If there is no preview BLOB name the value should be set to <b>null</b>.
            Previews should be stored using the jpeg or png format.
            It is recommended that the shorter dimension of the image be no less than 500 pixels in size.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.KeyImages">
            <summary>
            Gets the important images in the study.
            </summary>
            
            <remarks>
            If there is no information about the key images the collection should be empty.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudy.StudyInstanceUID">
            <summary>
            Gets or sets the study instance UID.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0020,000D).
            If there is no study instance UID the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception> 
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MedicalImageStudySeries">
            <summary>
            Represents the details of a specific series of images in a medical image study.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudySeries"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Collections.Generic.ICollection{Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudySeries"/> class
            specifying mandatory values.
            </summary>
            
            <param name="acquisitionDateTime">
            The date and time that the image was acquired.
            </param>
            <param name="images">
            Medical image study series images. 
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="images"/> parameter is <b>null</b> or doesn't contain any images.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the medical image study series.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the medical image study series into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the medical image study series.
            </param>
            
            <param name="writer">
            The XML writer into which the medical image study series should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.AcquisitionDateTime"/> is <b>null</b>.
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.Images"/> is <b>null</b> or doesn't contain any image. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeries.ToString">
            <summary>
            Gets a string representation of the medical image study series.
            </summary>
            
            <returns>
            A string representation of the medical image study series.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.AcquisitionDateTime">
            <summary>
            Gets or sets the date and time that the image was acquired.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tags (0008, 0022) and (0008, 0032).
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.Description">
            <summary>
            Gets or sets a description of the series.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008, 103E).
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.Images">
            <summary>
            Gets and sets medical images. 
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.InstitutionName">
            <summary>
            Gets or sets the name of the institution where the images were acquired.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008, 0080).
            
            If there is no information about the institution the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.ReferringPhysician">
            <summary>
            Gets or sets the physician who ordered the study.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008, 0090).
            
            If there is no information about the physician the value should be set 
            to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.Modality">
             <summary>
             Gets or sets the method (or modality) in which the images were acquired.
             </summary>
             
             <remarks>
             This value corresponds to DICOM tag (0008, 0060).
             
             If there is no information about the modality the value should be set to <b>null</b>.
            
             The preferred vocabulary is dicom.modality.
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.BodyPart">
            <summary>
            Gets or sets the body part that was imaged.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0018, 0015).
            
            If there is no information about the body part the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.PreviewBlobName">
            <summary>
            Gets or sets the name of the BLOB holding a smaller version of the image
            suitable for web viewing or email.
            </summary>
            
            <remarks>
            If there is no preview BLOB name the value should be set to <b>null</b>.
            Previews should be stored using the jpeg or png format.
            It is recommended that the shorter dimension of the image be no less than 500 pixels in size.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeries.SeriesInstanceUID">
            <summary>
            Gets or sets the series instance UID.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0020,000E)
            
            If there is no series instnace UID, the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage">
            <summary>
            Represents the details of a single image in a series.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage"/> class with default values.
            </summary>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage"/> class
            specifying mandatory values.
            </summary>
            
            <param name="imageBlobName">
            The name of the BLOB holding the image.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="imageBlobName"/> parameter is <b>null</b> or empty or contains only whitespace.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the medical image study series image.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the medical image study series image into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the medical image study series image.
            </param>
            Name of the BLOB holding the image.
            <param name="writer">
            The XML writer into which the medical image study series image should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName"/> is <b>null</b> or empty or contains only whitespace.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ToString">
            <summary>
            Gets a string representation of the medical image study series image.
            </summary>
            
            <returns>
            A string representation of the medical image study series image.
            </returns>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImageBlobName">
            <summary>
            Gets or sets the name of the BLOB holding the image.
            </summary>
            
            <remarks>
            This value corresponds to DICOM tag (0008,0018).
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
            whitespace during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicalImageStudySeriesImage.ImagePreviewBlobName">
            <summary>
            Gets or sets the name of the BLOB holding a smaller version of the image
            suitable for web viewing or email.
            </summary>
            
            <remarks>
            If there is no image preview BLOB name the value should be set to <b>null</b>.
            Previews should be stored using the jpeg or png format.
            It is recommended that the shorter dimension of the image be no less than 500 pixels in size.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Medication">
            <summary>
            Represents a medication health record item.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Medication"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Medication"/> class with the specified name.
            </summary>
            
            <param name="name">
            The name of the medication.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Medication.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this medication instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medication data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a medication node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the medication data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the medication data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Medication.Name"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Medication.ToString">
            <summary>
            Gets a string representation of the medication.
            </summary>
            
            <returns>
            A string representation of the medication.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Name">
            <summary>
            Gets or sets the medication name and clinical code.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.GenericName">
            <summary>
            Gets or sets the generic name of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Dose">
            <summary>
            Gets or sets the dose of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            Examples: 1 tablet, 50 ml.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Strength">
            <summary>
            Gets or sets the strength of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            Examples: 500 mg, 10 mg/ml.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Frequency">
            <summary>
            Gets or sets how often the medication is taken.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            Examples: 1 tablet per day, 2 every 6 hours, as needed.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Route">
            <summary>
            Gets or sets the route by which the medication is administered.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            The preferred vocabulary for route is "medication-routes".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Indication">
            <summary>
            Gets or sets the indication for the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.DateStarted">
            <summary>
            Gets or sets the date on which the person started taken the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.DateDiscontinued">
            <summary>
            Gets or sets the date on which the medication was discontinued.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Prescribed">
            <summary>
            Gets or sets the source of the prescription.
            </summary>
            
            <remarks>
            A medication that is prescribed by a physician should code "prescribed"
            into this element. 
            If the value is not known, it will be set to <b>null</b>.
            The preferred vocabulary for prescribed is "medication-prescribed".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Medication.Prescription">
            <summary>
            Gets or sets the prescription for the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MedicationFill">
            <summary>
            Represents a health record item about filling a medication.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicationFill"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MedicationFill"/> class with the specified name.
            </summary>
            
            <param name="name">
            The name of the medication.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.MedicationFill.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this medication fill instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the medication fill data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a medication-fill node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the medication fill data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the medication fill data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.MedicationFill.Name"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MedicationFill.ToString">
            <summary>
            Gets a string representation of the medication fill.
            </summary>
            
            <returns>
            A string representation of the medication fill.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.Name">
            <summary>
            Gets or sets the medication name and clinical code.
            </summary>
            
            <remarks>
            The name should be understandable to the person taking the medication, such as the 
            brand name.
            The preferred vocabularies for medication name are "RxNorm" or "NDC".
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.DateFilled">
            <summary>
            Gets or sets the date the prescription was filled.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.DaysSupply">
            <summary>
            Gets or sets the number of days supply of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.NextRefillDate">
            <summary>
            Gets or sets the date on which the prescription can be refilled.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.RefillsLeft">
            <summary>
            Gets or sets the number of medication refills left.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.Pharmacy">
            <summary>
            Gets or sets the pharmacy.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.PrescriptionNumber">
            <summary>
            Gets or sets the free form prescription number.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MedicationFill.LotNumber">
            <summary>
            Gets or sets the lot number for the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Message">
             <summary>
             The Message type is used to store a multipart mail message, including message text and attachments.
             </summary>
            
             <remarks>
             The message is stored in two forms. The "FullMessage" blob contains the message in the native format. 
             The text of the message is available in the blobs denoted by the 'html-blob-name" and "text-blob-name" 
             element. Any attachments to the message are described in the "attachments" element.
             
             The data stored is intended to be compatible with the SendMail Multipart MIME format. 
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Message.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Message"/> class with default values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Message.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Int64)">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Message"/> class
             specifying mandatory values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called.
             </remarks>
            
             <param name="when">
             The date and time of the message.
             </param>
             <param name="size">
             The size of the message in bytes.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="when"/> is <b>null</b>.
             </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Message.TypeId">
             <summary>
             Retrieves the unique identifier for this type.
             </summary>
            
             <value>
             A GUID.
             </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Message.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates the <see cref="T:Microsoft.Health.ItemTypes.Message"/> instance from the data in the specified XML.
             </summary>
            
             <param name="typeSpecificXml">
             The XML to get the Message data from.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="typeSpecificXml"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a Message node.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Message.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the XML representation of the Message into
             the specified XML writer.
             </summary>
            
             <param name="writer">
             The XML writer into which the Message should be
             written.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.Message.When"/> is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Message.ToString">
             <summary>
             Gets a string representation of the Message.
             </summary>
             
             <returns>
             A string representation of the Message.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.When">
            <summary>
            Gets or sets the date and time of the message.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.Headers">
             <summary>
             Gets the header information associated with this message.
             </summary>
             
             <remarks>
             The header information is stored in a dictionary of collections. For example, 
             Headers["To"] returns the collection of all the "To" headers in the message, or null
             if there were not such headers associated with the message. 
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.Size">
            <summary>
            Gets or sets the size of the message in bytes.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.Summary">
             <summary>
             Gets or sets a summary of the message.
             </summary>
             
             <remarks>
             The summary contains the first 512 characters of the message in text format. This information
             is used to display the start of the message without having to fetch the blobs that store the
             whole message. 
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             The <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.HtmlBlobName">
            <summary>
            Gets or sets the name of the blob that stores the message in HTML format.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.TextBlobName">
            <summary>
            Gets or sets the name of the blob that stores the message in text format.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.Subject">
            <summary>
            Gets or sets the subject of the message.
            </summary>
            
            <remarks>
            The Subject property is equivalent to Headers["Subject"].
            
            The value of the property is null if there is no subject in the
            header collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.From">
            <summary>
            Gets or sets the origin of the message.
            </summary>
            
            <remarks>
            The From property is equivalent to Headers["From"].
            
            The value of the property is null if there is no from in the
            header collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Message.Attachments">
             <summary>
             Gets the collection of attachments to the message.
             </summary>
             
             <remarks>
             If there are no attachments the collection will be empty.
             </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MessageAttachment">
             <summary>
             An attachment to the message.
             </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MessageAttachment.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MessageAttachment"/> class with default values.
             </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MessageAttachment.#ctor(System.String,System.String,System.Boolean)">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MessageAttachment"/> class
             specifying mandatory values.
             </summary>
            
             <param name="name">
             The name of the attachment.
             </param>
             <param name="blobName">
             The name of the blob storing the attachment
             </param>
             <param name="inlineDisplay">
             If true the attachment is intended to be displayed inline with the text.
             </param>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="name"/> is <b>null</b>, empty or contains only whitespace.
             If <paramref name="blobName"/> is <b>null</b>, empty or contains only whitespace.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MessageAttachment.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.MessageAttachment"/> instance from the data in the specified XML.
             </summary>
            
             <param name="navigator">
             The XML to get the MessageAttachment data from.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> parameter is <b>null</b>.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MessageAttachment.WriteXml(System.String,System.Xml.XmlWriter)">
             <summary>
             Writes the XML representation of the MessageAttachment into
             the specified XML writer.
             </summary>
            
             <param name="nodeName">
             The name of the outer node for the medical image study series.
             </param>
            
             <param name="writer">
             The XML writer into which the MessageAttachment should be
             written.
             </param>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName"/> parameter is <b>null</b> or empty.
             </exception>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.MessageAttachment.Name"/> is <b>null</b> or empty or contains only whitespace.
             If <see cref="P:Microsoft.Health.ItemTypes.MessageAttachment.BlobName"/> is <b>null</b> or empty or contains only whitespace.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MessageAttachment.ToString">
             <summary>
             Gets a string representation of the MessageAttachment.
             </summary>
             
             <returns>
             A string representation of the MessageAttachment.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MessageAttachment.Name">
             <summary>
             Gets or sets the name of the attachment.
             </summary>
             
             <remarks>
             If there is no information about name the value should be set to <b>null</b>.
             </remarks>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:System.ArgumentException">
             The <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MessageAttachment.BlobName">
             <summary>
             Gets or sets the name of the blob storing the attachment.
             </summary>
             
             <remarks>
             If there is no information about blobName the value should be set to <b>null</b>.
             </remarks>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:System.ArgumentException">
             The <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MessageAttachment.InlineDisplay">
            <summary>
            Gets or sets whether the attachment is intended to be displayed inline with the text.
            </summary>
            
            <remarks>
            If true, the location of the attachment in the message can be found using the 
            <see cref="P:Microsoft.Health.ItemTypes.MessageAttachment.ContentId"/>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MessageAttachment.ContentId">
             <summary>
             Gets or sets the content identifier for attachments that will be displayed inline with the text.
             </summary>
             
             <remarks>
             If this attachment is inline and the message text is available as HTML, the HTML contains 
             an img tag reference to this content id in the location where the attachment should be displayed.
             If there is no information about contentId the value should be set to <b>null</b>.
             </remarks>
            
             <exception cref="T:System.ArgumentException">
             The <paramref name="value"/> contains only whitespace.
             </exception>
             
        </member>
        <member name="T:Microsoft.Health.ItemTypes.MicrobiologyLabResults">
            <summary>
            Represents a health record item type that encapsulates microbiology laboratory results.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MicrobiologyLabResults.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MicrobiologyLabResults"/> class 
            with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MicrobiologyLabResults.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.MicrobiologyLabResults"/> class 
            with the specified date.
            </summary>
            
            <param name="when">
            The date/time for the microbiology laboratory results.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.MicrobiologyLabResults.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MicrobiologyLabResults.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this microbiology laboratory results instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the microbiology laboratory results data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a laboratory results node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MicrobiologyLabResults.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the microbiology laboratory results data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the microbiology laboratory results data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.When"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.MicrobiologyLabResults.ToString">
            <summary>
            Gets a string representation of the microbiology lab results.
            </summary>
            
            <returns>
            A string representing the microbiology lab results.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.When">
            <summary>
            Gets or sets the date/time when the microbiology laboratory results occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.LabTests">
            <summary>
            Gets a collection of laboratory tests.
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.SensitivityAgent">
            <summary>
            Gets or sets the sensitivity agent.
            </summary>
            
            <remarks>
            This property is optional and may be set to <b>null</b> if the sensitivity agent
            is not available.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.SensitivityValue">
            <summary>
            Gets or sets the sensitivity value.
            </summary>
            
            <remarks>
            This property is optional and may be set to <b>null</b> if the sensitivity value
            is not available.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.SensitivityInterpretation">
            <summary>
            Gets or sets the sensitivity interpretation.
            </summary>
            
            <remarks>
            This property is optional and may be set to <b>null</b> if the sensitivity 
            interpretation is not available.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.SpecimenType">
            <summary>
            Gets or sets the specimen type.
            </summary>
            
            <remarks>
            This property is optional and may be set to <b>null</b> if the specimen type
            is not available.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.OrganismName">
            <summary>
            Gets or sets the organism name.
            </summary>
            
            <remarks>
            This property is optional and may be set to <b>null</b> if the organism name
            is not available.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.MicrobiologyLabResults.OrganismComment">
            <summary>
            Gets or sets the organism comment.
            </summary>
            
            <remarks>
            This property is optional and may be set to <b>null</b> if the organism comment
            is not available.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Mood">
            <summary>
            Provides values describing the mood component of an emotional state.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Mood.None">
            <summary>
            The person's mood is unknown.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Mood.Depressed">
            <summary>
            The person is depressed.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Mood.Sad">
            <summary>
            The person is sad.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Mood.Neutral">
            <summary>
            The person's mood is neutral.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Mood.Happy">
            <summary>
            The person is happy.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Mood.Elated">
            <summary>
            The person is elated.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Name">
            <summary>
            Represents a person's name.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Name.#ctor">
            <summary>
            Creates a new instance of the  <see cref="T:Microsoft.Health.ItemTypes.Name"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Name.#ctor(System.String)">
            <summary>
            Creates a new instance of the  <see cref="T:Microsoft.Health.ItemTypes.Name"/> class with the specified full name.
            </summary>
            
            <param name="fullName">
            The full name.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="fullName"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Name.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the  <see cref="T:Microsoft.Health.ItemTypes.Name"/> class with the 
            specified first, middle, and last name.
            </summary>
            
            <param name="fullName">
            The full name.
            </param>
            
            <param name="first">
            The first name (given name).
            </param>
            
            <param name="middle">
            The middle name.
            </param>
            
            <param name="last">
            The last name (surname).
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="fullName"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Name.#ctor(System.String,System.String,System.String,System.String,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the  <see cref="T:Microsoft.Health.ItemTypes.Name"/> class with the 
            specified first, middle, and last name and suffix.
            </summary>
            
            <param name="fullName">
            The full name.
            </param>
            
            <param name="first">
            The first name (given name).
            </param>
            
            <param name="middle">
            The middle name.
            </param>
            
            <param name="last">
            The last name (surname).
            </param>
            
            <param name="suffix">
            The name suffix.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="fullName"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Name.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the name information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Name.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the name into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the name.
            </param>
            
            <param name="writer">
            The XML writer into which the name should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Name.Full"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Name.ToString">
            <summary>
            Gets a string representation of the name.
            </summary>
            
            <returns>
            A string representation of the name.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Name.Full">
            <summary>
            Gets or sets the full name.
            </summary>
            
            <value>
            A string representing the name.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b> or empty when setting.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Name.Title">
            <summary>
            Gets or sets the person's title.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the title.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the title should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Name.First">
            <summary>
            Gets or sets the person's first name.
            </summary>
            
            <value>
            A string representing the first name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the first name should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Name.Middle">
            <summary>
            Gets or sets the person's middle name.
            </summary>
            
            <value>
            A string representing the middle name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the middle name should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Name.Last">
            <summary>
            Gets or sets the person's last name.
            </summary>
            
            <value>
            A string representing the last name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the last name should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Name.Suffix">
            <summary>
            Gets or sets the person's suffix.
            </summary>
            
            <value>
            A string representing the suffix.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the suffix should not be stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Normalcy">
            <summary>
            Indicates how a value compares to normal values of the same type.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Normalcy.Unknown">
            <summary>
            The server returned a value that is unknown to this client.
            </summary>
            
            <remarks>
            This value can occur when an update to the server has been made
            to add a new value but the client has not been updated. All data
            will persist correctly but may not be programmatically accessible.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Normalcy.WellBelowNormal">
            <summary>
            The value is well below the norm when compared to values of 
            the same type.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Normalcy.BelowNormal">
            <summary>
            The value is below the norm when compared to values of 
            the same type.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Normalcy.Normal">
            <summary>
            The value is normal when compared to values of 
            the same type.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Normalcy.AboveNormal">
            <summary>
            The value is above the norm when compared to values of 
            the same type.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Normalcy.WellAboveNormal">
            <summary>
            The value is well above the norm when compared to values of 
            the same type.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Occurrence">
            <summary>
            Represents an occurrence of an event, such as an activity,
            period of awakening during sleep, and so on.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Occurrence.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Occurrence"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Occurrence.#ctor(Microsoft.Health.ItemTypes.ApproximateTime,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Occurrence"/> class with 
            the specified approximate time and duration.
            </summary>
            
            <param name="when">
            The approximate time for the occurrence.
            </param>
            
            <param name="minutes">
            The duration of the occurrence in minutes.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="minutes"/> parameter is negative.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Occurrence.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the occurrence information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Occurrence.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the occurrence into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the occurrence.
            </param>
            
            <param name="writer">
            The XML writer into which the occurrence should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Occurrence.When"/> property is <b>null</b>, or the <see cref="P:Microsoft.Health.ItemTypes.Occurrence.Minutes"/> 
            property is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Occurrence.When">
            <summary>
            Gets or sets the time of the occurrence.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> value representing the 
            time of the occurrence.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Occurrence.Minutes">
            <summary>
            Gets or sets the duration of the occurrence in minutes.
            </summary>
            
            <value>
            An integer representing the duration.
            </value>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Organization">
            <summary>
            An organization entity.
            </summary>
            
            <remarks>
            An entity such as a hospital, a pharmacy,  or a doctor's office. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.#ctor">
            <summary>
            It creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Organization"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.#ctor(System.String)">
            <summary>
            Create a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Organization"/>
            class with specific values.
            </summary>
             
            <param name="name">
            The name of the organization is mandatory. 
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="name"/> is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the organization information from the 
            specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the organization information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.UriFormatException">
            If <paramref name="Website"/> is empty. 
            -or-
            The scheme specified in <paramref name="Website"/> is invalid.
            -or-
            <paramref name="Website"/> contains too many slashes.
            -or-
            The host name specified in <paramref name="Website"/> is invalid.
            -or-
            The file name specified in <paramref name="Website"/> is invalid.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the organization data to the specified XmlWriter.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the organization information.
            </param>
            
            <param name="writer">
            The XML writer into which the organization information should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.Organization.Name"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Organization.ToString">
            <summary>
            Gets a string representation of the organization information. 
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Organization.Name">
            <summary>
            Gets or sets the name of the organization.
            </summary>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="Name"/> is <b>null</b>, empty, or contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Organization.Contact">
            <summary>
            Gets or sets the contact information of the organization.
            </summary>
            
            <remarks> 
            It should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Organization.Type">
            <summary>
            Gets or sets the type of the organization.
            </summary>
            
            <remarks>
            It should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Organization.Website">
            <summary>
            Gets or sets the website URL of the organization.
            </summary>
            
            <value>
            The URL for the organization website. 
            </value>
            
            <remarks>
            It should be set to <b>null</b> if it is unknown. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PaceMeasurement">
            <summary>
            Represents a pace measurement and display.
            </summary>
            
            <remarks>
            In HealthVault, pace measurements have values and display values. 
            All values are stored in a base unit of seconds per 100 meters. 
            An application can take a pace value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the pace value must be converted to seconds per 100 meters to be 
            stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PaceMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PaceMeasurement"/> 
            class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PaceMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PaceMeasurement"/> 
            class with the specified value in seconds per 100 meters.
            </summary>
            
            <param name="secondsPerHundredMeters">
            The pace in seconds per 100 meters.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PaceMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PaceMeasurement"/> 
            class with the specified value in seconds per 100 meters and 
            optional display value.
            </summary>
            
            <param name="secondsPerHundredMeters">
            The pace in seconds per 100 meters.
            </param>
            
            <param name="displayValue">
            The display value of the pace. This should contain the
            exact pace as entered by the user even if it uses some
            other unit of measure besides seconds per 100 meters. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PaceMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies that the value is a legal pace value.
            </summary>
            
            <param name="value">
            The pace measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PaceMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the pace from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the pace.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PaceMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the pace to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the pace to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PaceMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the pace in the base units.
            </summary>
            
            <returns>
            The pace as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PapSession">
             <summary>
             Encapsulates a Positive Airway Pressure (PAP) Session data.
             </summary>
            
             <remarks>
             A common use for PAP therapy is in the treatment of sleep apnea.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSession.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PapSession"/> class with default values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called.
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSession.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,System.Double,System.Double)">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PapSession"/> class specifying mandatory values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called.
             </remarks>
            
             <param name="when">
             The date and time of when the session was started.
             </param>
             <param name="durationMinutes">
             The number of minutes in the session.
             </param>
             <param name="apneaHypopneaIndex">
             The number of Apnea and Hypopnea events per hour.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="when"/> is <b>null</b>.
             If <paramref name="durationMinutes"/> is <b>null</b>.
             If <paramref name="apneaHypopneaIndex"/> is <b>null</b>.
             </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.PapSession.TypeId">
             <summary>
             Retrieves the unique identifier for the item type.
             </summary>
            
             <value>
             A GUID.
             </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSession.ParseXml(System.Xml.XPath.IXPathNavigable)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.PapSession"/> instance from the data in the specified XML.
             </summary>
            
             <param name="typeSpecificXml">
             The XML to get the PAP session data from.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="typeSpecificXml"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:System.InvalidOperationException">
             If the first node in <paramref name="typeSpecificXml"/> is not
             a PAP session node.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSession.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the XML representation of the PAP session into
             the specified XML writer.
             </summary>
            
             <param name="writer">
             The XML writer into which the PAP session should be
             written.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
             
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.PapSession.When"/> is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSession.ToString">
             <summary>
             Gets a string representation of the PAP session.
             </summary>
            
             <returns>
             A string representation of the PAP session.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.When">
             <summary>
             Gets or sets the date and time of when the session was started.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.DurationMinutes">
             <summary>
             Gets or sets the number of minutes in the session.
             </summary>
            
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="value"/> parameter is less than 0.0.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.ApneaHypopneaIndex">
             <summary>
             Gets or sets the number of Apnea and Hypopnea events per hour.
             </summary>
            
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="value"/> parameter is less than 0.0.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.ApneaIndex">
             <summary>
             Gets or sets the number of Apnea events per hour.
             </summary>
            
             <remarks>
             If there is no information about the Apnea Index the value should be set to <b>null</b>.
             </remarks>
             
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="value"/> parameter is less than 0.0.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.HypopneaIndex">
             <summary>
             Gets or sets the number of Hypopnea events per hour.
             </summary>
            
             <remarks>
             If there is no information about the Hypopnea Index the value should be set to <b>null</b>.
             </remarks>
             
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="value"/> parameter is less than 0.0.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.OxygenDesaturationIndex">
             <summary>
             Gets or sets the number of oxygen desaturation events per hour.
             </summary>
            
             <remarks>
             If there is no information about the Oxygen Desaturation Index the value should be set to <b>null</b>.
             </remarks>
             
             <exception cref="T:System.ArgumentOutOfRangeException">
             The <paramref name="value"/> parameter is less than 0.0.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.Pressure">
             <summary>
             Gets or sets the pressure measurements during the session.
             </summary>
            
             <remarks>
             If there is no information about the pressure the value should be set to <b>null</b>.
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.LeakRate">
             <summary>
             Gets or sets the leak rate measurements during the session.
             </summary>
            
             <remarks>
             If there is no information about the leak rate the value should be set to <b>null</b>.
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.TidalVolume">
             <summary>
             Gets or sets the tidal volume measurements during the session.
             </summary>
            
             <remarks>
             If there is no information about the tidal volume the value should be set to <b>null</b>. 
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.MinuteVentilation">
             <summary>
             Gets or sets the minute ventilation measurements during the session.
             </summary>
            
             <remarks>
             If there is no information about the minute ventilation the value should be set to <b>null</b>.
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSession.RespiratoryRate">
             <summary>
             Gets or sets the respiratory rate measurements during the session.
             </summary>
            
             <remarks>
             If there is no information about the respiratory rate the value should be set to <b>null</b>.
             </remarks>
             
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PapSessionMeasurements`1">
             <summary>
             Encapsulates the the details of PAP session measurements.
             </summary>
             <typeparam name="T">The type of the measurement.</typeparam>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PapSessionMeasurements`1"/> class with default values.
            </summary>
            <remarks>
            Specialized types of the <see cref="T:Microsoft.Health.ItemTypes.PapSessionMeasurements`1"/> class are used in PAP session.
            </remarks>
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.PapSessionMeasurements`1"/> instance from the data in the specified XML.
             </summary>
            
             <param name="navigator">
             The XML to get the PAP session measurements data from.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.WriteXml(System.String,System.Xml.XmlWriter)">
             <summary>
             Writes the XML representation of the PAP session measurments into
             the specified XML writer.
             </summary>
            
             <param name="nodeName">
             The name of the outer node for the PAP session measurements.
             </param>
            
             <param name="writer">
             The XML writer into which the PAP session measurements should be
             written.
             </param>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName"/> parameter is <b>null</b> or empty.
             </exception>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.ToString">
             <summary>
             Gets a string representation of the PAP session measurements.
             </summary>
            
             <returns>
             A string representation of the PAP session measurements.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.Mean">
             <summary>
             Gets or sets the mean value that occurred during the session.
             </summary>
            
             <remarks>
             If there is no information about the mean the value should be set to <b>null</b>.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.Median">
             <summary>
             Gets or sets the median value that occurred during the session.
             </summary>
            
             <remarks>
             If there is no information about the median the value should be set to <b>null</b>.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.Maximum">
             <summary>
             Gets or sets the greatest value that occured during the session.
             </summary>
            
             <remarks>
             If there is no information about the maximum the value should be set to <b>null</b>.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.Percentile95th">
             <summary>
             Gets or sets the value that was at or below this value 95% of the time.
             </summary>
            
             <remarks>
             If there is no information about the percentile95th the value should be set to <b>null</b>.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PapSessionMeasurements`1.Percentile90th">
             <summary>
             Gets or sets the value that was at or below this value 90% of the time.
             </summary>
            
             <remarks>
             If there is no information about the percentile90th the value should be set to <b>null</b>.
             </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Payer">
            <summary>
            Represents a health record item type that encapsulates information for 
            one who pays for health and/or medical expenses.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Payer.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Payer"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Payer.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Payer"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="planName">
            The name of the plan that pays for health and/or medical expenses.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="planName"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Payer.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Payer.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Payer"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the payer data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> parameter is not
            a payer node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Payer.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the payer data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the payer data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Payer.PlanName"/> parameter has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Payer.ToString">
            <summary>
            Gets a string representation of the payer item.
            </summary>
            
            <returns>
            A string representing the payer item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.PlanName">
            <summary>
            Gets or sets the plan name.
            </summary>
            
            <returns>
            A string representing the name.
            </returns>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only
            whitespace when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.CoverageType">
            <summary>
            Gets or sets the coverage type, such as medical, dental, and so on.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the type.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the coverage type should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.CarrierId">
            <summary>
            Gets or sets the carrier identifier.
            </summary>
            <returns>
            A string representing the identifier.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the carrier identifier should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.GroupNumber">
            <summary>
            Gets or sets the group number.
            </summary>
            
            <returns>
            A string representing the group number.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the group number should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.PlanCode">
            <summary>
            Gets or sets the plan code.
            </summary>
            
            <returns>
            A string representing the plan code.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the plan code should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.SubscriberId">
            <summary>
            Gets or sets the subscriber identifier.
            </summary>
            
            <returns>
            A string representing the identifier.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the subscriber identifier should 
            not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.PersonCode">
            <summary>
            Gets or sets the person code.
            </summary>
            
            <returns>
            A string representing the code.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the person code should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.SubscriberName">
            <summary>
            Gets or sets the subscriber name.
            </summary>
            
            <returns>
            A string representing the name.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the subscriber name should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.SubscriberDateOfBirth">
            <summary>
            Gets or sets the subscriber's date of birth.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the subscriber's date of birth should not 
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.IsPrimary">
            <summary>
            Gets or sets a value indicating whether this is the primary coverage for the
            person.
            </summary>
            
            <returns>
            <b>true</b> if this is primary coverage; otherwise, <b>false</b>.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the is primary should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.ExpirationDate">
            <summary>
            Gets or sets the date the coverage expires.
            </summary>
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the expiration date should not 
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Payer.Contact">
            <summary>
            Gets or sets the payer contact information.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.ContactInfo"/> instance representing the information.
            </returns>
            
            <remarks>
            Set the value to <b>null</b> if the payer contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PeakFlow">
            <summary>
            Represents a health record item that encapsulates a single peak flow reading.
            </summary>
            
            <remarks>
            Peak flow measures are typically collected on a daily basis by patients to track their
            lung function.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PeakFlow"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.#ctor(Microsoft.Health.ItemTypes.ApproximateDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PeakFlow"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date and time when the peak flow reading occurred.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.PeakFlow.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.PeakFlow"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the peack flow data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in the <paramref name="typeSpecificXml"/> parameter 
            is not a peak-flow node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the peak flow data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the peak flow data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.PeakFlow.When"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PeakFlow.ToString">
            <summary>
            Gets a string representation of the peak flow reading.
            </summary>
            
            <returns>
            A string representing the peak flow reading.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.When">
            <summary>
            Gets or sets the date and time when the peak flow reading occurred.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date 
            and time.
            </returns>
            
            <remarks>
            The value defaults to the current year only.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.Pef">
            <summary>
            Gets or sets the peak expiratory flow measured in liters per 
            second (L/s).
            </summary>
            
            <returns>
            A number representing the peak flow.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the peak expiratory flow should not
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.Fev1">
            <summary>
            Gets or sets the forced expiratory volume in one second, measured in 
            liters (L).
            </summary>
            
            <returns>
            A number representing the volume.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the forced expiratory volume should not
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.Fev6">
            <summary>
            Gets or sets the forced expiratory volume in six seconds, measured in 
            liters (L).
            </summary>
            
            <returns>
            A number representing the volume.
            </returns> 
            
            <remarks>
            Set the value to <b>null</b> if the forced expiratory volume should not
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PeakFlow.MeasurementFlags">
            <summary>
            Gets a collection of additional information about the measurement.
            </summary>
            
            <returns>
            A collection of <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the flags.
            </returns> 
            
            <remarks>
            Examples: incomplete measurement.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Person">
            <summary>
            Represents a health record item type that encapsulates non-identifying 
            information about a person.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Person.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Person"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Person.#ctor(Microsoft.Health.ItemTypes.Name)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Person"/> class with the 
            specified name.
            </summary>
            
            <param name="name">
            The name of the person.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter 
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Person.#ctor(Microsoft.Health.ItemTypes.Name,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Person"/> class with the 
            specified name and type.
            </summary>
            
            <param name="name">
            The name of the person.
            </param>
            
            <param name="personType">
            The type of the person, such as emergency contact, provider, and 
            so on.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> or <paramref name="personType"/> 
            parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Person.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Person.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Person"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the person data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a person node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Person.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the person data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the person data to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Person.ToString">
            <summary>
            Gets a string representation of the person item.
            </summary>
            
            <returns>
            A string representation of the person item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Person.Name">
            <summary>
            Gets or sets the person's name.
            </summary>
            
            <value>
            A <see cref="P:Microsoft.Health.ItemTypes.Person.Name"/> value.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Person.Organization">
            <summary>
            Gets or sets the organization the person belongs to.
            </summary>
            
            <value>
            A string representing the organization.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the organization should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Person.ProfessionalTraining">
            <summary>
            Gets or sets the professional training for the provider.
            </summary>
            
            <value>
            A string representing the training.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Person.PersonId">
            <summary>
            Gets or sets the ID number for the person in the organization.
            </summary>
            
            <value>
            A string representing the ID number.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the ID should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Person.ContactInformation">
            <summary>
            Gets or sets the contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ContactInfo"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the contact information should not be
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Person.PersonType">
            <summary>
            Gets or sets the type of person, such as provider, emergency contact, 
            and so on.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the person type.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Person.Item">
            <summary>
            Gets or sets the person information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PersonItem">
            <summary>
            Represents non-identifying information about a person.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonItem.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> class with default 
            values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonItem.#ctor(Microsoft.Health.ItemTypes.Name)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> class 
            with the specified name.
            </summary>
            
            <param name="name">
            The name of the person.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonItem.#ctor(Microsoft.Health.ItemTypes.Name,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> class 
            with the specified name and type.
            </summary>
            
            <param name="name">
            The name of the person.
            </param>
            
            <param name="personType">
            The type of the person: emergency contact, provider, etc.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="name"/> or <paramref name="personType"/>
            is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonItem.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this Person instance from the data in the XML.
            </summary>
            
            <param name="navigator">
            The XML containing the goal information.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="navigator"/> is not
            a person node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonItem.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the person data to the specified XmlWriter.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the person data.
            </param>
            
            <param name="writer">
            The XmlWriter to write the person data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.PersonItem.Name"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonItem.ToString">
            <summary>
            Gets a string representation of the person item.
            </summary>
            
            <returns>
            A string representation of the person item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PersonItem.Name">
            <summary>
            Gets or sets the person's name.
            </summary>
            
            <value>
            A <see cref="P:Microsoft.Health.ItemTypes.PersonItem.Name"/> instance.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PersonItem.Organization">
            <summary>
            Gets or sets the organization the person belongs to.
            </summary>
            
            <value>
            A string representing the organization.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the organization should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PersonItem.ProfessionalTraining">
            <summary>
            Gets or sets the professional training for the provider.
            </summary>
            
            <value>
            A string representing the training.
            </value>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PersonItem.PersonId">
            <summary>
            Gets or sets the ID number for the person in the organization.
            </summary>
            
            <value>
            A string representing the ID.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the ID should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PersonItem.ContactInformation">
            <summary>
            Gets or sets the contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ContactInfo"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the contact information should not be
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.PersonItem.PersonType">
            <summary>
            Gets or sets the type of person, such as provider, emergency 
            contact, and so on.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the type.
            </value> 
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Personal">
            <summary>
            Represents health record item type that encapsulates identifying 
            information about a person.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Personal.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Personal"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Personal.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Personal.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Personal"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the personal data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a personal node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Personal.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the personal data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the personal data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Personal.ToString">
            <summary>
            Gets a string representation of the personal item.
            </summary>
            
            <returns>
            A string representation of the personal item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.Name">
            <summary>
            Gets or sets the name of the person.
            </summary>
            
            <value>
            The name of the person.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the name should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.BirthDate">
            <summary>
            Gets or sets the birth date.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the birth date should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.BloodType">
            <summary>
            Gets or sets the ABO and Rhesus +/- blood type for the person.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the blood type.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the blood type should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.Ethnicity">
            <summary>
            Gets or sets the ethnicity of the person.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the ethnicity.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the ethnicity should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.SocialSecurityNumber">
            <summary>
            Gets or sets the deployment-specific national identifier for
            the person.
            </summary>
            
            <value>
            An instance representing the
            deployment-specific national identifier.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the deployment-specific national 
            identifier should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.MaritalStatus">
            <summary>
            Gets or sets the marital status of the person.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the marital status.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the marital status should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.EmploymentStatus">
            <summary>
            Gets or sets the employment status of the person.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the employment 
            status.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the employment status should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.IsDeceased">
            <summary>
            Gets or sets a value indicating whether the person is deceased.
            </summary>
            
            <value>
            <b>true</b> if the person is deceased; otherwise, <b>false</b>.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.DateOfDeath">
            <summary>
            Gets or sets the date of death for the person.
            </summary>
            
            <value>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing the date.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.Religion">
            <summary>
            Gets or sets the religion of the person.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the religion. 
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the religion should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.IsVeteran">
            <summary>
            Gets or sets a value indicating whether the person is a veteran.
            </summary>
            
            <value>
            <b>true</b> if the person is a veteran; otherwise, <b>false</b>.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.HighestEducationLevel">
            <summary>
            Gets or sets the highest education level of the person.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the education level. 
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the level should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.IsDisabled">
            <summary>
            Gets or sets a value indicating whether the person has a disability.
            </summary>
            
            <value>
            <b>true</b> if the person has a disability; otherwise, <b>false</b>.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Personal.OrganDonor">
            <summary>
            Gets or sets the organ donor status of the person.
            </summary>
            
            <value>
            A string representing the status.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the status should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PersonalImage">
            <summary>
            Represents a personal image associated with the health record.
            </summary>
            
            <remarks>
            There can be only one personal image for each health record.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonalImage.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PersonalImage"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.PersonalImage.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonalImage.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.PersonalImage"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the personal image data from.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonalImage.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the file data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the file data to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonalImage.WriteImage(System.IO.Stream,System.String)">
            <summary>
            Writes the image from the byte stream into the BlobStore  
            of the item.
            </summary>
            
            <param name="imageStream">
            The stream from which to retrieve the image bytes.
            </param>
            
            <param name="mimeType">
            The mime type for the image.
            </param>
            
            <remarks>
            The image is streamed in using the <see cref="T:Microsoft.Health.BlobStore"/> for this item.
            <br/>
            This method does not close the stream.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="imageStream"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="imageStream"/> parameter length is greater than
            <see cref="F:System.Int32.MaxValue"/>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PersonalImage.ReadImage">
            <summary>
            Reads the image from the <see cref="T:Microsoft.Health.Blob"/> 
            as a stream.
            </summary>
            
            <remarks>
            An application must explicitly request that the blob information is returned
            when querying for an personal image. It can do this by asking for the BlobPayload section
            in the Sections property of the <see cref="T:Microsoft.Health.HealthRecordView"/> class (filter.View).
            </remarks>
            
            <returns>
            A Stream containing the image bytes. It is the caller's 
            responsibility to close this stream.
            May return null if the blob payload is not requested or the personal
            image has no data...
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Phone">
            <summary>
            Represents a telephone number.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Phone.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Phone"/> class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Phone.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Phone"/> class with the 
            specified phone number.
            </summary>
            
            <param name="number">
            The phone number.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="number"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Phone.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Phone"/> class with the 
            specified phone number, description, primary designation.
            </summary>
            
            <param name="number">
            The phone number.
            </param>
            
            <param name="description">
            The description of the phone number.
            </param>
            
            <param name="isPrimary">
            <b>true</b> if the phone number is the primary phone number for the
            person; otherwise, <b>false</b>.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="number"/> parameter is <b>null</b> or empty.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Phone.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the phone information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Phone.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the telephone number into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the phone.
            </param>
            
            <param name="writer">
            The XML writer into which the telephone number should be 
            written.
            </param>
                    
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Phone.Number"/> property has not been set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Phone.Description">
            <summary>
            Gets or sets the description for the telephone number.
            </summary>
            
            <value>
            A string representing the description.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the description should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Phone.IsPrimary">
            <summary>
            Gets or sets a value indicating whether the telephone number is the 
            primary number for the person.
            </summary>
            
            <value>
            <b>true</b> if the this number is the primary phone 
            number for the person; otherwise, <b>false</b>.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if this property should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Phone.Number">
            <summary>
            Gets or sets the telephone number.
            </summary>
            
            <value>
            A string representing the phone number.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is <b>null</b>, empty, or contains only 
            whitespace during set.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PowerMeasurement">
            <summary>
            Represents a power measurement and display.
            </summary>
            
            <remarks>
            In HealthVault, power measurements have values and display values. 
            All values are stored in a base unit of watts. 
            An application can take a pace value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the power value must be 
            converted to watts to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PowerMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PowerMeasurement"/> 
            class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PowerMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PowerMeasurement"/> 
            class with the specified value in watts.
            </summary>
            
            <param name="watts">
            The power in watts.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PowerMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PowerMeasurement"/> 
            class with the specified value in watts and optional display value.
            </summary>
            
            <param name="watts">
            The power in watts.
            </param>
            
            <param name="displayValue">
            The display value of the power. This should contain the
            exact power as entered by the user even if it uses some
            other unit of measure besides watts. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PowerMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies that the value is a legal power value.
            </summary>
            
            <param name="value">
            The power measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PowerMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the power from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the power.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PowerMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the power to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the power to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PowerMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the power in the base units.
            </summary>
            
            <returns>
            The power as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Pregnancy">
            <summary>
            Record of a pregnancy.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Pregnancy.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Pregnancy"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Pregnancy.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Pregnancy.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Information related to a pregnancy.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the pregnancy data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a pregnancy node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Pregnancy.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the pregnancy data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the pregnancy data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Pregnancy.ToString">
            <summary>
            Gets a string representation of the pregnancy item.
            </summary>
            
            <returns>
            A string representation of the pregnancy item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.DueDate">
             <summary>
             Gets or sets the approximate due date.
             </summary>
            
             <remarks>
             If there is no due date the value should be set to <b>null</b>.
             </remarks>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.LastMenstrualPeriod">
            <summary>
            Gets or sets the first day of the last menstrual cycle.
            </summary>
            
            <remarks>
            If the last menstrual period is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.ConceptionMethod">
            <summary>
            Gets or sets the method of conception.
            </summary>
            
            <remarks>
            If the conception method is not known the value should be set to <b>null</b>.
            The preferred vocabulary for this value is "conception-methods". 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.FetusCount">
            <summary>
            Gets or sets the number of fetuses.
            </summary>
            
            <remarks>
            If the fetus count is not known the value should be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.GestationalAge">
            <summary>
            Gets or sets the number of weeks of pregnancy at the time of delivery.
            </summary>
            
            <remarks>
            If the gestational age is not known the value should be set to <b>null</b>.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="value"/> is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Pregnancy.Delivery">
            <summary>
            Gets a collection of the details of the resolution of each fetus.
            </summary>
            
            <remarks>
            If there is no delivery information the collection should be empty.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Prescription">
            <summary>
            Information related to a medication prescription.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Prescription"/> class with default 
            values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.#ctor(Microsoft.Health.ItemTypes.PersonItem)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Prescription"/> class 
            with the specified prescriber.
            </summary>
            
            <param name="prescribedBy">
            The person that prescribed the medication.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="person"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates this Prescription instance from the data in the XML.
            </summary>
            
            <param name="navigator">
            The XML containing the prescription information.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a prescription node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the prescription data to the specified XmlWriter.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the prescription data.
            </param>
            
            <param name="writer">
            The XmlWriter to write the prescription data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Prescription.PrescribedBy"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Prescription.ToString">
            <summary>
            Gets a string representation of the prescription item.
            </summary>
            
            <returns>
            A string representation of the prescription item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.PrescribedBy">
            <summary>
            Gets or sets the person that prescribed the medication.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.Person"/> instance.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.DatePrescribed">
            <summary>
            Gets or sets the date the medication was prescribed.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.AmountPrescribed">
            <summary>
            Gets or sets the amount of medication prescribed.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.Substitution">
            <summary>
            Gets or sets whether a substitution is permitted.
            </summary>
            
            <remarks>
            Example: Dispense as written, substitution allowed.
            If the value is not known, it will be set to <b>null</b>.
            The preferred vocabulary for substitution is "medication-substitution".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.Refills">
            <summary>
            Gets or sets the number of refills of the medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.DaysSupply">
            <summary>
            Gets or sets the number of days supply of medication.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.PrescriptionExpiration">
            <summary>
            Gets or sets the date the prescription expires.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Prescription.Instructions">
            <summary>
            Gets or sets the medication instructions.
            </summary>
            
            <remarks>
            If the value is not known, it will be set to <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.PressureMeasurement">
            <summary>
            Represents a pressure measurement and a display value
            associated with the measurement.
            </summary>
            
            <remarks>
            In HealthVault, pressure measurements have values and display values. 
            All values are stored in a standard SI unit of pascal (Pa). 
            An application can take a pressure value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the pressure value must be converted to pascals to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PressureMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PressureMeasurement"/> class 
            with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PressureMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PressureMeasurement"/> class 
            with the specified value in pascal.
            </summary>
            
            <param name="pascals">
            The pressure value in pascal.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PressureMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.PressureMeasurement"/> class with 
            the specified value in pascals and an optional display value.
            </summary>
            
            <param name="pascals">
            The pressure in pascal.
            </param>
            
            <param name="displayValue">
            The display value of the pressure. This should contain the
            exact pressure as entered by the user even if it uses some
            other unit of measure besides pascal. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PressureMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies the value is a legal pressure value in Pa.
            </summary>
            
            <param name="value">
            The pressure measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PressureMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the pressure from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the pressure.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PressureMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the pressure to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the pressure to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.PressureMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the pressure in the base units.
            </summary>
            
            <returns>
            The pressure as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Procedure">
            <summary>
            Represents a health record item type that encapsulates a medical procedure.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Procedure"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Procedure"/> class with the 
            specified date and time.
            </summary>
            
            <param name="name">
            The name of the procedure.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Procedure.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this procedure instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the procedure data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a procedure node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the procedure data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the procedure data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Procedure.Name"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Procedure.ToString">
            <summary>
            Gets a string representation of the procedure.
            </summary>
            
            <returns>
            A string representing the procedure.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.When">
            <summary>
            Gets or sets the date/time when the procedure occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.ApproximateDateTime"/> instance representing 
            the date. The default value is the current year.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.Name">
            <summary>
            Gets or sets the name of the procedure.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the title.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the title should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Name"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.PrimaryProvider">
            <summary>
            Gets or sets the primary provider contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the primary provider contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.AnatomicLocation">
            <summary>
            Gets or sets the anatomic location for the procedure.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> representing the location.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the location should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Procedure.SecondaryProvider">
            <summary>
            Gets or sets the secondary provider contact information.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.PersonItem"/> representing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the secondary provider contact information
            should not be stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Problem">
            <summary>
            Information related to a medical problem (please see remarks).
            </summary>
            <remarks>
            We are in the process of merging the problem and condition types, and
            recommend that applications use the condition type instead of the problem type. 
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Problem.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Problem"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Problem.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Problem"/> class with the 
            specified date and time.
            </summary>
            
            <param name="when">
            The date/time for the health problem.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Problem.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Problem.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this health problem instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the health problem data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a health problem node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Problem.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the health problem data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the health problem data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Problem.When"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Problem.ToString">
            <summary>
            Gets a string representation of the problem.
            </summary>
            
            <returns>
            A string representation of the problem.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Problem.When">
            <summary>
            Gets or sets the date/time when the health problem occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing 
            the date and time. The default value is the current year, month, 
            and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Problem.Diagnosis">
            <summary>
            Gets a collection of diagnoses for the health problem.
            </summary>
            
            <value>
            A collection of type <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> containing 
            the diagnoses.
            </value>
            
            <remarks>
            To add or remove a diagnosis, call Add or Remove on the returned
            collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Problem.Duration">
            <summary>
            Gets a collection of duration information for the health problem.
            </summary>
            
            <value>
            A collection of type <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> containing 
            the duration information.
            </value> 
            
            <remarks>
            To add or remove a duration, call Add or Remove on the returned
            collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Problem.Importance">
            <summary>
            Gets or sets the importance of the health problem.
            </summary>
            
            <value>
            An integer representing the importance value.
            </value>
            
            <remarks>
            If the importance of the problem is unknown, the value can be set to
            <b>null</b>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.QuestionAnswer">
            <summary>
            Represents a question and answer stored as a health record item.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.QuestionAnswer"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.QuestionAnswer"/> class with the specified 
            date and time and the question that was asked.
            </summary>
            
            <param name="when">
            The date and time the question was asked.
            </param>
            
            <param name="question">
            The question that was asked.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> or <paramref name="question"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.CodableValue,System.Collections.Generic.IList{Microsoft.Health.ItemTypes.CodableValue},System.Collections.Generic.IList{Microsoft.Health.ItemTypes.CodableValue})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.QuestionAnswer"/> class with the specified 
            date and time and the question that was asked.
            </summary>
            
            <param name="when">
            The date and time the question was asked.
            </param>
            
            <param name="question">
            The question that was asked.
            </param>
            
            <param name="answerChoice">
            The possible answers to the question. See <see cref="P:Microsoft.Health.ItemTypes.QuestionAnswer.AnswerChoice"/> for more information
            and the preferred vocabulary.
            </param>
            
            <param name="answer">
            The answer to the question.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="when"/> or <paramref name="question"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.QuestionAnswer.TypeId">
            <summary>
            The unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this question/answer instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the question/answer data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a question-answer node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the question/answer data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the question/answer data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.QuestionAnswer.When"/> or <see cref="P:Microsoft.Health.ItemTypes.QuestionAnswer.Question"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.QuestionAnswer.ToString">
            <summary>
            Gets a string representation of the question/answer.
            </summary>
            
            <returns>
            A string representation of the question/answer.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.QuestionAnswer.When">
            <summary>
            Gets or sets the date and time of the question was asked.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the date 
            and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            If the <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.QuestionAnswer.Question">
            <summary>
            Gets or sets the question that was asked.
            </summary>
            
            <remarks>
            A list of vocabularies may be found in the "question-sets". 
            Contact the HealthVault team to help define the preferred vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.QuestionAnswer.AnswerChoice">
            <summary>
            Gets a collection of the possible answers to the question.
            </summary>
            
            <remarks>
            Questions that are answered using free-form text will not specify answer choices.
            The answer vocabulary used is typically one related to the vocabulary used for the question.
            For example, the choice for "High blood pressure" would code for that condition. 
            Standard answers (such as yes/no) can be coded using the preferred vocabulary 
            "answer-choice-sets".
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.QuestionAnswer.Answer">
            <summary>
            Gets a collection of the recorded answer(s) to the question.
            </summary>
            
            <remarks>
            In many cases, the coding of the answer is identical to the coding of the 
            selected <see cref="P:Microsoft.Health.ItemTypes.QuestionAnswer.AnswerChoice"/>.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.RadiologyLabResults">
            <summary>
            Represents a health record item type that encapsulates radiology 
            laboratory results.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RadiologyLabResults.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.RadiologyLabResults"/> class 
            with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RadiologyLabResults.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.RadiologyLabResults"/> class 
            with the specified date.
            </summary>
            
            <param name="when">
            The date/time for the radiology laboratory results.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.RadiologyLabResults.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RadiologyLabResults.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this radiology laboratory results instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the radiology laboratory results data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a radiology laboratory results node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RadiologyLabResults.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the radiology laboratory results data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the radiology laboratory results data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.RadiologyLabResults.When"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RadiologyLabResults.ToString">
            <summary>
            Gets a string representation of the radiology lab results.
            </summary>
            
            <returns>
            A string representing the radiology lab results.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.RadiologyLabResults.When">
            <summary>
            Gets or sets the date/time when the radiology laboratory results occurred.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.RadiologyLabResults.Title">
            <summary>
            Gets or sets the title for the radiology laboratory results.
            </summary>
            
            <value>
            A string representing the title.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the title should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.RadiologyLabResults.AnatomicSite">
            <summary>
            Gets or sets the anatomic site for the radiology laboratory results.
            </summary>
            
            <value>
            A string representing the site.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the site should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.RadiologyLabResults.ResultText">
            <summary>
            Gets or sets the result text for the radiology laboratory results.
            </summary>
            
            <value>
            A string representing the text.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the result text should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.RelativeRating">
            <summary>
            Represents a relative rating for attributes such as emotion or activity.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.RelativeRating.None">
            <summary>
            The relative rating is not known.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.RelativeRating.VeryLow">
            <summary>
            The rating is very low.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.RelativeRating.Low">
            <summary>
            The rating is low.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.RelativeRating.Moderate">
            <summary>
            The rating is moderate.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.RelativeRating.High">
            <summary>
            The rating is high.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.RelativeRating.VeryHigh">
            <summary>
            The rating is very high.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.RespiratoryProfile">
            <summary>
            Represents a health record item type that encapsulates a person's 
            respiratory profile at a single point in time.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryProfile.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.RespiratoryProfile"/> class with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> 
            method is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryProfile.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.RespiratoryProfile"/> class 
            with the specified date and time.
            </summary>
            
            <param name="when">
            The date/time when the respiratory profile was take.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.RespiratoryProfile.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryProfile.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.RespiratoryProfile"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the respiratory profile data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a respiratory-profile node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryProfile.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the respiratory profile data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the respiratory profile data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryProfile.ToString">
            <summary>
            Gets a string representation of the respiratory profile.
            </summary>
            
            <returns>
            A string representing the respiratory profile.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.RespiratoryProfile.When">
            <summary>
            Gets or sets the date/time when the respiratory profile was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the date. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.RespiratoryProfile.ExpiratoryFlowRedZoneUpperBoundary">
            <summary>
            Gets or sets the upper boundary of the expiratory flow red zone.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.FlowMeasurement"/> representing the upper boundary
            of the expiratory flow in L/s.
            </value>
            
            <remarks>
            The red zone covers flow measurements from 0 to the red zone upper
            boundary. Values are measured in liters per second (L/s).
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.RespiratoryProfile.ExpiratoryFlowOrangeZoneUpperBoundary">
            <summary>
            Gets or sets the upper boundary of the expiratory flow orange zone.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.FlowMeasurement"/> representing the upper boundary
            of the expiratory flow in L/s.
            </value>
            
            <remarks>
            The orange zone covers flow measurements from the red zone upper boundary
            to the orange zone upper boundary. 
            Values are measured in liters per second (L/s).
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.RespiratoryProfile.ExpiratoryFlowYellowZoneUpperBoundary">
            <summary>
            Gets or sets the upper boundary of the expiratory flow yellow zone.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.FlowMeasurement"/> representing the upper boundary
            of the expiratory flow in L/s.
            </value>
            
            <remarks>
            The yellow zone covers flow measurements from the orange zone upper boundary
            to the yellow zone upper boundary. 
            Values are measured in liters per second (L/s).
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement">
            <summary>
            Represents a respiratory rate and a display value
            associated with the measurement.
            </summary>
            
            <remarks>
            In HealthVault, respiratory rate measurements have values and display values. 
            All values are stored in a base unit of breaths per minute. 
            An application can take a respiratory rate value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the respiratory value must be converted to breaths/min to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement"/> class 
            with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement"/> class 
            with the specified value in breaths per minute.
            </summary>
            
            <param name="breathsPerMinute">
            The respiratory rate in breaths per minute.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement"/> class with 
            the specified value in breaths per minute and optional display value.
            </summary>
            
            <param name="breathsPerMinute">
            The respiratory rate in breaths per minute.
            </param>
            
            <param name="displayValue">
            The display value of the respiratory rate. This should contain the
            exact respiratory rate as entered by the user even if it uses some
            other unit of measure besides breaths per minute. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies the value is a legal respiratory rate value in breaths/min.
            </summary>
            
            <param name="value">
            The respiratory rate measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the respiratory rate from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the respiratory rate.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the respiratory rate to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the respiratory rate to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.RespiratoryRateMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the respiratory rate in the base units.
            </summary>
            
            <returns>
            The respiratory rate as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Service">
             <summary>
             Information about a specific service provided on an explanation of benefits.
             </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Service.#ctor">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Service"/> class with default values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called
             </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Service.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.DurationValue,Microsoft.Health.ItemTypes.ClaimAmounts)">
             <summary>
             Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Service"/> class specifying mandatory values.
             </summary>
            
             <remarks>
             This item is not added to the health record until the
             <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method
             is called.
             </remarks>
            
             <param name="serviceType">
             The type of the service.
             </param>
             <param name="serviceDates">
             The dates for this service.
             </param>
             <param name="claimAmounts">
             The financial information for this service.
             </param>
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="serviceType"/> is <b> null </b>.
             If <paramref name="serviceDates"/> is <b> null </b>.
             If <paramref name="claimAmounts"/> is <b> null </b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Service.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.Service"/> instance from the data in the specified XML.
             </summary>
            
             <param name="navigator">
             The XML to get the Service data from.
             </param>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="navigator"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Service.WriteXml(System.String,System.Xml.XmlWriter)">
             <summary>
             Writes the XML representation of the Service into
             the specified XML writer.
             </summary>
            
             <param name="nodeName">
             The name of the outer node for the Service.
             </param>
            
             <param name="writer">
             The XML writer into which the Service should be
             written.
             </param>
            
             <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName"/> parameter is <b>null</b> or empty.
             </exception>
            
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> parameter is <b>null</b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.Service.ServiceType"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.Service.ServiceDates"/> is <b>null</b>.
             If <see cref="P:Microsoft.Health.ItemTypes.Service.ClaimAmounts"/> is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Service.ToString">
             <summary>
             Gets a string representation of the Service.
             </summary>
            
             <returns>
             A string representation of the Service.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Service.ServiceType">
             <summary>
             Gets or sets the type of the service.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b> null </b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Service.Diagnosis">
             <summary>
             Gets or sets the diagnosis.
             </summary>
            
             <remarks>
             If there is no information about the diagnosis the value should be set to <b>null</b>.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Service.BillingCode">
             <summary>
             Gets or sets the billing code.
             </summary>
            
             <remarks>
             If there is no information about the billing code the value should be set to <b>null</b>.
             </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Service.ServiceDates">
             <summary>
             Gets or sets the dates for this service.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Service.ClaimAmounts">
             <summary>
             Gets or sets the financial information for this service.
             </summary>
            
             <exception cref="T:System.ArgumentNullException">
             The <paramref name="value"/> parameter is <b>null</b>.
             </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Service.Notes">
             <summary>
             Gets a collection of additional information about this service.
             </summary>
            
             <remarks>
             If there is no information about the notes the collection should be empty.
             </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Sleepiness">
            <summary>
            Provides values representing how awake a person felt during the day.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Sleepiness.Unknown">
            <summary>
            The sleepiness state is unknown.
            </summary>
            
            <remarks>
            This is not a valid state and will cause an exception if used.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Sleepiness.VerySleepy">
            <summary>
            The person was very sleepy throughout the day.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Sleepiness.Tired">
            <summary>
            The person was somewhat tired throughout the day.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Sleepiness.Alert">
            <summary>
            The person was fairly alert throughout the day.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Sleepiness.WideAwake">
            <summary>
            The person was wide awake throughout the day.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.SleepJournalAM">
            <summary>
            Represents a health record item type that encapsulates a sleep journal 
            morning entry.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalAM.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SleepJournalAM"/> class with 
            default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalAM.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.ApproximateTime,Microsoft.Health.ItemTypes.ApproximateTime,System.Int32,System.Int32,Microsoft.Health.ItemTypes.WakeState)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SleepJournalAM"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date and time when the AM sleep journal entry was taken.
            </param>
            
            <param name="bedtime">
            The approximate time the person went to bed.
            </param>
            
            <param name="wakeTime">
            The approximate time the person woke up.
            </param>
            
            <param name="sleepMinutes">
            The number of minutes the person slept.
            </param>
            
            <param name="settlingMinutes">
            The number of minutes it took the person to fall asleep after
            going to bed.
            </param>
            
            <param name="wakeState">
            The state of the person when they awoke.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="sleepMinutes"/> parameter or 
            <paramref name="settlingMinutes"/> parameter is negative.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.SleepJournalAM.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalAM.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this SleepJournalAM instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the morning sleep journal data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in the <paramref name="typeSpecificXml"/> parameter 
            is not a sleep-am node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalAM.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the morning sleep journal data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the morning sleep journal data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.SleepJournalAM.When"/>, <see cref="P:Microsoft.Health.ItemTypes.SleepJournalAM.Bedtime"/>, 
            <see cref="P:Microsoft.Health.ItemTypes.SleepJournalAM.WakeTime"/>, <see cref="P:Microsoft.Health.ItemTypes.SleepJournalAM.SleepMinutes"/>,
            <see cref="P:Microsoft.Health.ItemTypes.SleepJournalAM.SettlingMinutes"/>, or <see cref="P:Microsoft.Health.ItemTypes.SleepJournalAM.WakeState"/> parameter 
            has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalAM.ToString">
            <summary>
            Gets a string representation of the sleep journal entry.
            </summary>
            
            <returns>
            A string representing the sleep journal entry.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalAM.When">
            <summary>
            Gets or sets the when the journal entry is made.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> instance representing the 
            date and time.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalAM.Bedtime">
            <summary>
            Gets or sets the when the person went to bed.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> instance representing the time.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalAM.WakeTime">
            <summary>
            Gets or sets the when the person woke up.
            </summary>
            
            <returns>
            An <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> instance representing the time.
            </returns>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> when set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalAM.SleepMinutes">
            <summary>
            Gets or sets the number of minutes slept.
            </summary>
            
            <returns>
            An integer representing the number of minutes.
            </returns>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalAM.SettlingMinutes">
            <summary>
            Gets or sets the number of minutes spent settling into sleep.
            </summary>
            
            <returns>
            An integer representing the number of minutes.
            </returns>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalAM.Awakenings">
            <summary>
            Gets the occurrences of awakenings that occurred during
            sleeping period.
            </summary>
            
            <returns>
            A collection representing the number of awakenings.
            </returns> 
            
            <remarks>
            To add awakenings, add new <see cref="T:Microsoft.Health.ItemTypes.Occurrence"/> instances to the returned
            collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalAM.Medications">
            <summary>
            Gets or sets a description of the medications taken before bed.
            </summary>
            
            <returns>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing the description.
            </returns>
            
            <remarks>
            Set the value to <b>null</b> if the medications should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalAM.WakeState">
            <summary>
            Gets or sets the state of the person when they awoke.
            </summary>
            
            <returns>
            A <see cref="P:Microsoft.Health.ItemTypes.SleepJournalAM.WakeState"/> value representing the state.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.SleepJournalPM">
            <summary>
            Represents a health record item type that encapsulates a sleep journal 
            evening entry.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalPM.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SleepJournalPM"/> class 
            with default values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalPM.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.Sleepiness)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SleepJournalPM"/> class 
            specifying the mandatory values.
            </summary>
            
            <param name="when">
            The date/time when the PM sleep journal entry was taken.
            </param>
            
            <param name="sleepiness">
            The state of sleepiness the person was in throughout the day.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="sleepiness"/> parameter is 
            <see cref="F:Microsoft.Health.ItemTypes.Sleepiness.Unknown"/>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.SleepJournalPM.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalPM.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.SleepJournalPM"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the evening sleep journal data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a sleep-pm node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalPM.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the evening sleep journal data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the evening sleep journal data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.SleepJournalPM.When"/> or <see cref="P:Microsoft.Health.ItemTypes.SleepJournalPM.Sleepiness"/> properties 
            have not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SleepJournalPM.ToString">
            <summary>
            Gets the string representation of the sleep journal entry.
            </summary>
            
            <returns>
            A string representing the sleep journal entry.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalPM.When">
            <summary>
            Gets or sets the date and time when the journal entry is made.
            </summary>
            
            <value>
            An instance of <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing 
            the date and time.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalPM.Caffeine">
            <summary>
            Gets the time(s) in which caffeine was consumed
            during the day.
            </summary>
            
            <value>
            A collection of times.
            </value>
            
            <remarks>
            To add occurrences of caffeine intake, add new <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> 
            instances to the returned collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalPM.Alcohol">
            <summary>
            Gets or sets the time(s) in which alcohol was consumed
            during the day.
            </summary>
            
            <value>
            A collection of times.
            </value> 
            
            <remarks>
            To add occurrences of alcohol intake, add new <see cref="T:Microsoft.Health.ItemTypes.ApproximateTime"/> 
            instances to the returned collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalPM.Naps">
            <summary>
            Gets the occurrences of any naps during the day.
            </summary>
            
            <value>
            A collection of occurrences.
            </value>
            
            <remarks>
            To add an occurrence of a nap, add new <see cref="T:Microsoft.Health.ItemTypes.Occurrence"/> instances 
            to the returned collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalPM.Exercise">
            <summary>
            Gets the occurrences of any exercise that occurred 
            during the day.
            </summary>
            
            <value>
            A collection of occurrences.
            </value> 
            
            <remarks>
            To add an occurrence of an exercise, add new <see cref="T:Microsoft.Health.ItemTypes.Occurrence"/> instances 
            to the returned collection.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SleepJournalPM.Sleepiness">
            <summary>
            Gets or sets the state of sleepiness the person was in throughout
            the day.
            </summary>
            
            <value>
            An instance of <see cref="P:Microsoft.Health.ItemTypes.SleepJournalPM.Sleepiness"/> representing the state.
            </value>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> parameter is 
            <see cref="F:Microsoft.Health.ItemTypes.Sleepiness.Unknown"/>.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.SnpData">
            <summary>
            The <see cref="T:Microsoft.Health.ItemTypes.SnpData"/> class is used to store and retrieve SNP result data.
            </summary>
            
            <remarks>
            SNP data are stored in a dictionary. It handles converting from a SNP result 
            format to the comma-separated format.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpData"/> class. 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpData"/> class 
            with the specified data, encoding, and content type.
            </summary>
            
            <param name="data">
            The data to store in the other data section of the health record
            item.
            </param>
            
            <param name="contentEncoding">
            The type of encoding that was done on the data. Usually this will
            be "base64" but other encodings are acceptable.
            </param>
            
            <param name="contentType">
            The MIME-content type of the data.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.#ctor(Microsoft.Health.OtherItemData)">
            <summary>
            Creates an instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpData"/> class with
            specified other item data. 
            </summary>
            
            <param name="otherItemData">The other item data.</param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.RefreshSnpItems">
            <summary>
            Reloads SNP items from other data section of the health record item.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.CreateSnpItems">
            <summary>
            Gets all the genetic snp results as strings and store them in a dictionary. 
            </summary>
            
            <exception cref="T:System.FormatException">
            If the data cannot be completely parsed into SNP item. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the SNP Items to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the SNP item data.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If <see cref="P:Microsoft.Health.ItemTypes.SnpData.SnpItems"/> has not been set. 
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpData.StoreSnpItems">
             <summary>
             Take the dictionary SNP items, and convert them into the underlying 
             format.  
             </summary> 
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpData.SnpItems">
            <summary>
            Gets the SNP data as a dictionary of SNP items.
            </summary>
            
            <remarks>
            SNP items in a dictionary can be easily accessed by the reference SNP Id. 
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.SnpItem">
             <summary>
             A SNP test result item.
             </summary>
            
             <remarks>
             Within the comma-separated data, each SNP is encoded as follows:
             
             [refSNP id],[strand orientation],[result],[assay id],[start position],[end position]
             
             Where:
             refSNP id: Reference SNP identifier from NCBI dbSNP database.
              strand orientation: "+" encodes top, "-" encodes bottom.
              result: the result of the test.
              assay id: Platform dependent probe set id.
              start position: Start position on the chromosome.
              end position: End position on the chromosome.
              
             Example: rs1891906,-,GT, SNP_C-315533, 940106, 940107
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpItem.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpItem"/> type with default values. 
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpItem.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Creates an instance of the <see cref="T:Microsoft.Health.ItemTypes.SnpItem"/> type with the specified values.
            </summary>
            
            <param name="referenceSnpId">Reference SNP Id (rs).</param>
            <param name="strandOrientation">The orientation of the strand. </param>
            <param name="result">The result of the SNP test. </param>
            <param name="assayId">The platform dependent probe set id. </param>
            <param name="startPosition">The start position on the chromosome. </param>
            <param name="endPosition">The end position on the chromosome. </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SnpItem.ToString">
            <summary>
            Gets a string representation of the snp result item. 
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.ReferenceSnpId">
            <summary>
            Gets or sets the Reference SNP ID of the result. 
            </summary>
            
            <remarks>
            For example, rs132342. 
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.StrandOrientation">
            <summary>
            Gets or sets the orientation of the strand.  
            </summary>
            
            <remarks>
            The value can be either + or -.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.Result">
            <summary>
            Gets or sets the result of the SNP test.  
            </summary>
            
            <remarks>
            For example, AA, AT. Each letter correspond to one copy of 
            the specified SNP is the customer's genome, since each of us has two 
            copies of each gene under normal circumstance.  
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.AssayId">
            <summary>
            Gets or sets the assay ID.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.StartPosition">
            <summary>
            Gets or sets the start position.  
            </summary>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.SnpItem.EndPosition">
            <summary>
            Gets or sets the end Position.  
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.SpeedMeasurement">
            <summary>
            Represents a speed measurement and display.
            </summary>
            
            <remarks>
            In HealthVault, speed measurements have values and display values. 
            All values are stored in a base unit of meters per second (m/s). 
            An application can take a speed value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the speed value must be 
            converted to m/s to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SpeedMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SpeedMeasurement"/> class 
            with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SpeedMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SpeedMeasurement"/> class 
            with the specified value in meters per second.
            </summary>
            
            <param name="metersPerSecond">
            The speed in meters per second.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SpeedMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.SpeedMeasurement"/> class with 
            the specified value in meters per second and optional display value.
            </summary>
            
            <param name="metersPerSecond">
            The speed in meters per second.
            </param>
            
            <param name="displayValue">
            The display value of the speed. This should contain the
            exact speed as entered by the user even if it uses some
            other unit of measure besides meters per second. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SpeedMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies the value is a legal speed value in meters.
            </summary>
            
            <param name="value">
            The speed measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SpeedMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the speed from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the speed.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SpeedMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the speed to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the speed to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.SpeedMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the speed in the base units.
            </summary>
            
            <returns>
            The speed as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Status">
             <summary>
             Stores status information about a specific health record item. 
             </summary>
             
             <remarks>
             Each status is related to one or more health record items which are stored as related items.
            
             For example, the HealthVault shell creates a status item to indicate that a CCR or CCD document has 
             been reconciled, and that document is linked using a related item. 
             </remarks>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.Status"/> class, 
            with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initializes an instance of the <see cref="T:Microsoft.Health.ItemTypes.Status"/> class,
            with a specified status type. 
            </summary>
            
            <param name="statusType">
            The specific type of status.
            </param>
            
            <exception cref="T:System.ArgumentNullException"> 
            If <paramref name="statusType"/> is <b>null</b>. 
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Status.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Status"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the status data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            If the first node in <paramref name="typeSpecificXml"/> is not
            a status node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.WriteXml(System.Xml.XmlWriter)">
             <summary>
             Writes the status data to the specified XmlWriter.
             </summary>
             
             <param name="writer">
             The XmlWriter to write the status data to.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> is <b>null</b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="P:Microsoft.Health.ItemTypes.Status.StatusType"/> is <b>null</b> or empty.
             </exception>
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Status.ToString">
            <summary>
            Gets a string representation of the status instance.
            </summary>
            
            <returns>
            A string representation of the status item.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Status.StatusType">
            <summary>
            Gets or sets the status type of a status.
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="value"/> is <b>null</b> on set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Status.Text">
            <summary>
            Gets or sets additional information about the status.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.StringMeasurement">
            <summary>
            Represents a measurement of type string and display.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StringMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.StringMeasurement"/> 
            class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StringMeasurement.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.StringMeasurement"/> 
            class with the specified value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StringMeasurement.#ctor(System.String,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.StringMeasurement"/> 
            class with the specified value and optional display value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
            <param name="displayValue">
            The display value of the measurement. This should contain the
            exact measurement as entered by the user even if it uses some
            other unit of measure. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StringMeasurement.AssertMeasurementValue(System.String)">
            <summary>
            Verifies that the value is a legal value.
            </summary>
            
            <param name="value">
            The value of the measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StringMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the measurement from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the measurement.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StringMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the measurement to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the measurement to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StringMeasurement.GetValueString(System.String)">
            <summary>
            Retrieves a string representation of the measurement in the base units.
            </summary>
            
            <returns>
            The measurement as a string in the base units.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.StringMeasurement.ValueElementName">
            <summary>
            Gets or sets the name of the element that defines the value for the measurement.
            </summary>
            
            <returns>
            A string representing the element name.
            </returns>
            
            <remarks>
            The default value for the element name is "value" but should be
            overridden in derived classes to provide a specific element name
            where appropriate.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.StructuredMeasurement">
            <summary>
            A measurement using specific units.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.StructuredMeasurement"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.StructuredMeasurement"/> 
            class with mandatory parameters.
            </summary>
            
            <param name="value"> 
            The value of the measurement. 
            </param>
            
            <param name="units"> 
            The units of the measurement. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="units"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.StructuredMeasurement"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the structured measurement data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             The first node in <paramref name="navigator"/> is not
             a structured measurement node.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the structured measurement data to the specified XmlWriter.
            </summary> 
            
            <param name="nodeName">
            The name of the node to write XML.
            </param>
            
            <param name="writer">
            The XmlWriter to write the concern data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="nodeName"/> is <b> null </b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b> null </b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.StructuredMeasurement.Units"/> is <b> null </b>.
            </exception> 
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.StructuredMeasurement.ToString">
             <summary>
             Gets a string representation of the structured measurement item.
             </summary> 
            
             <returns>
             A string representation of the structured measurement item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.StructuredMeasurement.Units">
             <summary>
             Gets or sets unit of measure for the value.  
             </summary>
            
             <remarks>
             A list of vocabularies that can be used to code the units may be found 
             in the measurement-unit-sets vocabulary.
             </remarks>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="value"/> is <b>null</b>.
             </exception>
             
        </member>
        <member name="P:Microsoft.Health.ItemTypes.StructuredMeasurement.Value">
             <summary>
             Gets or sets value.  
             </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.TargetGlucoseZone">
            <summary>
            Represents a target glucose zone.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TargetGlucoseZone"/> class with default 
            values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor(System.String,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement,Microsoft.Health.ItemTypes.BloodGlucoseMeasurement)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TargetGlucoseZone"/> class 
            with the specified absolute glucose value boundaries and name.
            </summary>
            
            <param name="name">
            The name of the zone.
            </param>
            
            <param name="lowerBoundaryAbsoluteGlucose">
            The glucose value in millimoles per liter (mmol/L) for the lower 
            boundary of the zone.
            </param>
            
            <param name="upperBoundaryAbsoluteGlucose">
            The glucose value in millimoles per liter (mmol/L) for the upper 
            boundary of the zone.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZone.#ctor(System.String,System.Double,System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TargetGlucoseZone"/> class 
            with the specified relative glucose value boundaries and name.
            </summary>
            
            <param name="name">
            The name of the zone.
            </param>
            
            <param name="lowerBoundaryRelativeGlucose">
            The lower glucose boundary as a percentage of the person's 
            maximum blood glucose level.
            </param>
            
            <param name="upperBoundaryRelativeGlucose">
            The upper glucose boundary as a percentage of the person's 
            maximum blood glucose level.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="lowerBoundaryRelativeGlucose"/> or 
            <paramref name="upperBoundaryRelativeGlucose"/> parameter 
            is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZone.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the glucose zone information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is null.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZone.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the glucose zone into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the heart rate zone.
            </param>
            
            <param name="writer">
            The XML writer into which the glucose zone should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is null or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is null.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary"/>, <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary"/>, 
            <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary"/>, or <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary"/> 
            parameter is not set.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.Name">
            <summary>
            Gets or sets the name for the blood glucose zone.
            </summary>
            
            <value>
            A string representing the name.
            </value>
            
            <remarks>
            Set the value to null if the name should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary">
            <summary>
            Gets or sets the lower boundary of the blood glucose zone as a
            percentage of the person's maximum blood glucose level.
            </summary>
            
            <value>
            A number representing the boundary.
            </value> 
            
            <remarks>
            Only <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary"/> or 
            <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary"/> can be stored. If both are
            set, only <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary"/> is stored.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary">
            <summary>
            Gets or sets the lower boundary of the blood glucose zone as a
            specific blood glucose level.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.BloodGlucoseMeasurement"/> instance representing the 
            boundary.
            </value>
            
            <remarks>
            Only <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeLowerBoundary"/> or 
            <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary"/> can be stored. If both are
            set, only <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteLowerBoundary"/> is stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary">
            <summary>
            Gets or sets the upper boundary of the blood glucose zone as a
            percentage of the person's maximum blood glucose level.
            </summary>
            
            <value>
            A number representing the boundary.
            </value>
            
            <remarks>
            Only <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary"/> or 
            <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary"/> may be stored. If both are
            set, only <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary"/> will be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than 0.0 or greater than 1.0.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary">
            <summary>
            Gets or sets the upper boundary of the blood glucose zone as a
            specific blood glucose level.
            </summary>
            
            <remarks>
            Only <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.RelativeUpperBoundary"/> or 
            <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary"/> can be stored. If both are
            set, only <see cref="P:Microsoft.Health.ItemTypes.TargetGlucoseZone.AbsoluteUpperBoundary"/> is stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup">
            <summary>
            Represents a grouping of target glucose zones by name.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup"/> 
            class with default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup"/> 
            class with the specified name.
            </summary>
            
            <param name="name">
            The name of the target glucose zone grouping.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Health.ItemTypes.TargetGlucoseZone})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup"/> 
            class with the specified name and target zones.
            </summary>
            
            <param name="name">
            The name of the target glucose zone grouping.
            </param>
            
            <param name="targetZones">
            The target glucose zones for the grouping.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the target glucose zone group information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the target glucose zone group into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the target glucose zone group.
            </param>
            
            <param name="writer">
            The XML writer into which the target glucose zone group should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup.Name">
            <summary>
            Gets or sets the name for the target glucose zone group.
            </summary>
            
            <value>
            A string representing the name.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the name should not be stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TargetGlucoseZoneGroup.TargetZones">
            <summary>
            Gets the target glucose zones for the zone group.
            </summary>
            
            <value>
            A collection of zones.
            </value>
            
            <remarks>
            To add a zone to the group, call Add on the returned collection.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.TemperatureMeasurement">
            <summary>
            Represents a temperature measurement and display.
            </summary>
            
            <remarks>
            In HealthVault, temperature measurements have values and display values. 
            All values are stored in a base unit of degrees Celsius (C). 
            An application can take a pace value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the temperature value must be converted to degrees Celsius to be stored in 
            HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TemperatureMeasurement"/> 
            class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TemperatureMeasurement"/> 
            class with the specified value in degrees Celsius.
            </summary>
            
            <param name="celsius">
            The temperature in degrees Celsius.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TemperatureMeasurement"/> 
            class with the specified value in degrees Celsius and optional display value.
            </summary>
            
            <param name="celsius">
            The temperature in degrees Celsius.
            </param>
            
            <param name="displayValue">
            The display value of the temperature. This should contain the
            exact temperature as entered by the user even if it uses some
            other unit of measure besides degrees Celsius. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies that the value is a legal temperature value.
            </summary>
            
            <param name="value">
            The temperature measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the temperature from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the temperature.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the temperature to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the temperature to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TemperatureMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the temperature in the base units.
            </summary>
            
            <returns>
            The temperature as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.TestResultRange">
             <summary>
             A range related to a specific test result.
             </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TestResultRange"/> 
            class with default values.
            </summary>
            
            <remarks>
            Each test result can contain multiple ranges that are useful 
            to interpret the result value. Examples include reference range 
            and therapeutic range.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.#ctor(Microsoft.Health.ItemTypes.CodableValue,Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TestResultRange"/> 
            class with mandatory parameters.
            </summary>
            
            <param name="type"> 
            Type is the type of a test result.
            </param>
            
            <param name="text"> 
            Text is the range expressed as text. 
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="text"/> or <paramref name="type"/> is <b> null </b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.ParseXml(System.Xml.XPath.XPathNavigator)">
             <summary>
             Populates this <see cref="T:Microsoft.Health.ItemTypes.TestResultRange"/> instance from the data in the XML. 
             </summary>
             
             <param name="navigator">
             The XML to get the test result range data from.
             </param>
             
             <exception cref="T:System.ArgumentNullException">
             The first node in <paramref name="navigator"/> is <b>null</b>.
             </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.WriteXml(System.String,System.Xml.XmlWriter)">
             <summary>
             Writes the test result range data to the specified XmlWriter.
             </summary> 
             
             <param name="nodeName">
             The name of the node to write XML.
             </param>
             
             <param name="writer">
             The XmlWriter to write the test result range data to.
             </param>
             
             <exception cref="T:System.ArgumentException">
             If <paramref name="nodeName"/> is <b> null </b> or empty.
             </exception>
             
             <exception cref="T:System.ArgumentNullException">
             If <paramref name="writer"/> is <b> null </b>.
             </exception>
            
             <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
             If <see cref="T:System.Type"/> or <see cref="P:Microsoft.Health.ItemTypes.TestResultRange.Text"/> is <b> null </b>.
             </exception> 
             
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRange.ToString">
             <summary>
             Gets a string representation of the test result range item.
             </summary> 
            
             <returns>
             A string representation of the test result range item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRange.Value">
            <summary>
            Gets or sets the minimum and maximum of the range.
            </summary>
            
            <remarks>
            The minimum or maximum value may be omitted to specify open-ended ranges. 
            Example:
            The range "greater than 3.5" would be coded by setting the minimum to 3.5 and omitting the maximum.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRange.RangeType">
            <summary>
            Gets or sets the type of the range.  
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="RangeType"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRange.Text">
            <summary>
            Gets or sets the range expressed as text.
            </summary>
            <remarks>
            The text element is used in two different ways:
            When a numeric range is used, the text element should contain a textual version of the
            numeric range. 
            When the range is non-numeric, the text element contains the range and the range value is omitted. The range may
            also be coded to a vocabulary.
            
            Examples:
            A color range (such as clear to yellow) would be coded using by setting the text element to "clear to yellow",
            and by assigning a code from an appropriate vocabulary.
            
            A numeric range (such as 0.5 - 1.6) would be stored in the minimum and maximum elements of the value, and \
            additionally would be coded by setting the text element to "0.5 - 1.6".
            
            Contact the HealthVault team to help define this vocabulary.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="Text"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.TestResultRangeValue">
            <summary>
            Represents a lab test result range value.
            </summary>
            
            <remarks>
            A range consists of minimum and/or maximum values.
            An open-ended range may be created by omitting the minimum or maximum value.
            
            For example, "greater than 3.5" is created by setting the minimum value to 3.5 and
            the maximum value to null. 
            </remarks>
            
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRangeValue.#ctor">
            <summary>
            Creates a new instance of the LabTestResultRangeValue class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRangeValue.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the range from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the range.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRangeValue.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary> 
            Writes the range data to the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer element for the range data.
            </param>
            
            <param name="writer"> 
            The XmlWriter to write the range data to.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TestResultRangeValue.ToString">
             <summary>
             Gets a string representation of the test result range value.
             </summary> 
            
             <returns>
             A string representation of the test result range value item.
             </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRangeValue.Minimum">
            <summary>
            Gets or sets the minimum value of the range.
            </summary>
            
            <value>
            A value of type double? that represents the minimum value of the range.
            </value>
        </member>
        <member name="P:Microsoft.Health.ItemTypes.TestResultRangeValue.Maximum">
            <summary>
            Gets or sets the maximum value of the range.
            </summary>
            
            <value>
            A value of type double? that represents the maximum value of the range.
            </value>
        </member>
        <member name="T:Microsoft.Health.ItemTypes.TorqueMeasurement">
            <summary>
            Represents a torque measurement and display.
            </summary>
            
            <remarks>
            In HealthVault, torque measurements have values and display values. 
            All values are stored in a base unit of newton meters. 
            An application can take a torque value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the torque value must be 
            converted to newton meters to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TorqueMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TorqueMeasurement"/> 
            class with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TorqueMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TorqueMeasurement"/> 
            class with the specified value in newton meters.
            </summary>
            
            <param name="newtonMeters">
            The torque in newton meters.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TorqueMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.TorqueMeasurement"/> 
            class with the specified value in newton meters and optional display value.
            </summary>
            
            <param name="newtonMeters">
            The torque in newton meters.
            </param>
            
            <param name="displayValue">
            The display value of the torque. This should contain the
            exact torque as entered by the user even if it uses some
            other unit of measure besides newton meters. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TorqueMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies that the value is a legal torque value.
            </summary>
            
            <param name="value">
            The torque measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TorqueMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the torque from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the torque.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TorqueMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the torque to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the torque to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.TorqueMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the torque in the base units.
            </summary>
            
            <returns>
            The torque as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.VitalSigns">
            <summary>
            Represents a health record item type that encapsulates vital signs.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSigns.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.VitalSigns"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSigns.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.VitalSigns"/> class with 
            the specified date.
            </summary>
            
            <param name="when">
            The date/time when the vital signs were taken.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="when"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.VitalSigns.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSigns.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this vital signs instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the vital signs data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a vital signs node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSigns.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the vital signs data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the vital signs data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.VitalSigns.When"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSigns.ToString">
            <summary>
            Gets a string representation of the vital signs results.
            </summary>
            
            <returns>
            A string representing the vital signs results.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSigns.When">
            <summary>
            Gets or sets the date/time when the vital signs were taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> representing the 
            date. The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSigns.VitalSignsResults">
            <summary>
            Gets or sets the vital sign results.
            </summary>
            
            <value>
            A collection of vital sign results.
            </value>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSigns.Site">
            <summary>
            Gets or sets the site for the vital signs.
            </summary>
            
            <value>
            A string representing the site.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the site should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSigns.Position">
            <summary>
            Gets or sets the position for the vital signs.
            </summary>
            
            <value>
            A string representing the position.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the position should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.VitalSignsResultType">
            <summary>
            Represents a vital sign result type.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSignsResultType.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.VitalSignsResultType"/> class with 
            default values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSignsResultType.#ctor(Microsoft.Health.ItemTypes.CodableValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.VitalSignsResultType"/> class
            with the specified name.
            </summary>
            
            <param name="title">
            The name of the vital sign result.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="title"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSignsResultType.ParseXml(System.Xml.XPath.XPathNavigator)">
            <summary>
            Populates the data from the specified XML.
            </summary>
            
            <param name="navigator">
            The XML containing the vital sign result information.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="navigator"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSignsResultType.WriteXml(System.String,System.Xml.XmlWriter)">
            <summary>
            Writes the XML representation of the vital sign result into
            the specified XML writer.
            </summary>
            
            <param name="nodeName">
            The name of the outer node for the vital sign result.
            </param>
            
            <param name="writer">
            The XML writer into which the vital sign result should be 
            written.
            </param>
            
            <exception cref="T:System.ArgumentException">
            The <paramref name="nodeName"/> parameter is <b>null</b> or empty.
            </exception>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="writer"/> parameter is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            If <see cref="P:Microsoft.Health.ItemTypes.VitalSignsResultType.Title"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VitalSignsResultType.ToString">
            <summary>
            Gets a string representation of the vital signs result type.
            </summary>
            
            <returns>
            A string representing the vital signs result type.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSignsResultType.Title">
            <summary>
            Gets or sets the title for the vital signs.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing 
            the title.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the title should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSignsResultType.Value">
            <summary>
            Gets or sets the vital sign value.
            </summary>
            
            <value>
            A number representing the vital sign value.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the value should not
            be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSignsResultType.Unit">
            <summary>
            Gets or sets the unit for the vital signs.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing 
            the unit.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the unit should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSignsResultType.ReferenceMinimum">
            <summary>
            Gets or sets the reference minimum for the vital signs.
            </summary>
            
            <value>
            A number representing the reference minimum.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the reference minimum should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSignsResultType.ReferenceMaximum">
            <summary>
            Gets or sets the reference maximum for the vital signs.
            </summary>
            
            <value>
            A number representing the reference maximum.
            </value> 
            
            <remarks>
            Set the value to <b>null</b> if the reference maximum should not be 
            stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSignsResultType.TextValue">
            <summary>
            Gets or sets the text value for the vital signs.
            </summary>
            
            <value>
            A string representing the text value.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the text value should not be 
            stored.
            </remarks>
            
            <exception cref="T:System.ArgumentException">
            If <paramref name="value"/> contains only whitespace.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.VitalSignsResultType.Flag">
            <summary>
            Gets or sets the flag for the vital signs.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.CodableValue"/> instance representing 
            the flag.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the flag should not be 
            stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.VolumeMeasurement">
            <summary>
            Represents the volume of a gas, liquid, etc. and a display value
            associated with the measurement.
            </summary>
            
            <remarks>
            In HealthVault, volume measurements have values and display values. 
            All values are stored in a base unit of liters (L). 
            An application can take a volume value using any scale the application 
            chooses and can store the user-entered value as the display value, 
            but the volumn value must be converted to liters to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VolumeMeasurement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.VolumeMeasurement"/> class 
            with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VolumeMeasurement.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.VolumeMeasurement"/> class 
            with the specified value in liters.
            </summary>
            
            <param name="liters">
            The volume in liters.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="liters"/> is less than zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VolumeMeasurement.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.VolumeMeasurement"/> class with 
            the specified value in liters and optional display value.
            </summary>
            
            <param name="liters">
            The volume in liters.
            </param>
            
            <param name="displayValue">
            The display value of the volume. This should contain the
            exact volume as entered by the user even if it uses some
            other unit of measure besides liters. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            If <paramref name="liters"/> is less than zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VolumeMeasurement.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies the value is a legal volume value in liters.
            </summary>
            
            <param name="value">
            The volume measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VolumeMeasurement.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the volume from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the volume.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VolumeMeasurement.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the volume to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the volume to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.VolumeMeasurement.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the volume in the base units.
            </summary>
            
            <returns>
            The volume as a string in the base units.
            </returns>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.WakeState">
            <summary>
            Provides values describing how awake a person feels when they awake 
            from sleep.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.WakeState.Unknown">
            <summary>
            The waking state is unknown.
            </summary>
            
            <remarks>
            This is not a valid state and will cause an exception if used.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.WakeState.WideAwake">
            <summary>
            The person awoke feeling refreshed.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.WakeState.Tired">
            <summary>
            The person awoke but was still somewhat tired.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.WakeState.Sleepy">
            <summary>
            The person awoke but was still very sleepy.
            </summary>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Weight">
            <summary>
            Represents a health record item type that encapsulates a person's weight.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Weight.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Weight"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Weight.#ctor(Microsoft.Health.ItemTypes.HealthServiceDateTime,Microsoft.Health.ItemTypes.WeightValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.Weight"/> class with the 
            specified date/time and weight.
            </summary>
            
            <param name="when">
            The date/time when the weight measurement occurred.
            </param>
            
            <param name="weight">
            The person's weight.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="when"/> or <paramref name="weight"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Weight.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Weight.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.Weight"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the weight data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a weight node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Weight.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the weight data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the weight data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
            <exception cref="T:Microsoft.Health.HealthRecordItemSerializationException">
            The <see cref="P:Microsoft.Health.ItemTypes.Weight.Value"/> property has not been set.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.Weight.ToString">
            <summary>
            Gets a string representation of the object.
            </summary>
            
            <returns>
            <see cref="P:Microsoft.Health.ItemTypes.Weight.Value"/> if set; otherwise, or String.Empty.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Weight.When">
            <summary>
            Gets or sets the date/time when the weight measurement
            was taken.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.HealthServiceDateTime"/> for the weight measurement. 
            The default value is the current year, month, and day.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b>.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.Weight.Value">
            <summary>
            Gets or sets the person's weight.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/>.
            </value>
            
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> parameter is <b>null</b> during set.
            </exception>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.WeightGoal">
            <summary>
            Represents a health record item type that encapsulates a weight goal.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightGoal.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.WeightGoal"/> class with default 
            values.
            </summary>
            
            <remarks>
            The item is not added to the health record until the
            <see cref="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)"/> method 
            is called.
            </remarks>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.WeightGoal.TypeId">
            <summary>
            Retrieves the unique identifier for the item type.
            </summary>
            
            <value>
            A GUID.
            </value>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightGoal.ParseXml(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Populates this <see cref="T:Microsoft.Health.ItemTypes.WeightGoal"/> instance from the data in the XML.
            </summary>
            
            <param name="typeSpecificXml">
            The XML to get the weight goal data from.
            </param>
            
            <exception cref="T:System.InvalidOperationException">
            The first node in <paramref name="typeSpecificXml"/> is not
            a weight-goal node.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightGoal.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the weight goal data to the specified XmlWriter.
            </summary>
            
            <param name="writer">
            The XmlWriter to write the weight goal data to.
            </param>
            
            <exception cref="T:System.ArgumentNullException">
            If <paramref name="writer"/> is <b>null</b>.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightGoal.ToString">
            <summary>
            Gets a string representation of the weight goal.
            </summary>
            
            <returns>
            A string containing the value of the weight goal.
            </returns>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.WeightGoal.InitialWeight">
            <summary>
            Gets or sets the person's initial weight.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the initial weight.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the initial weight should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.WeightGoal.MinimumWeight">
            <summary>
            Gets or sets the person's minimum weight.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the minimum weight.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the minimum weight should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.WeightGoal.MaximumWeight">
            <summary>
            Gets or sets the person's maximum weight.
            </summary>
            
            <value>
            A <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> representing the maximum weight.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the maximum weight should not be stored.
            </remarks>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.WeightGoal.Goal">
            <summary>
            Gets or sets the goal information.
            </summary>
            
            <value>
            A <see cref="P:Microsoft.Health.ItemTypes.WeightGoal.Goal"/> value containing the information.
            </value>
            
            <remarks>
            Set the value to <b>null</b> if the goal information should not be stored.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.WeightValue">
            <summary>
            Represents a weight value and display.
            </summary>
            
            <remarks>
            In HealthVault, weights have values and display values. All values are
            stored in a base unit of kilograms. An application can take a length
            value using any scale the application chooses and can store the user-
            entered value as the display value, but the length value must be 
            converted to kilograms to be stored in HealthVault.
            </remarks>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightValue.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> class 
            with empty values.
            </summary>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightValue.#ctor(System.Double)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> class with 
            the specified value in kilograms.
            </summary>
            
            <param name="kilograms">
            The weight value in kilograms.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightValue.#ctor(System.Double,Microsoft.Health.ItemTypes.DisplayValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> class with 
            the specified value in kilograms and the specified display value.
            </summary>
            
            <param name="kilograms">
            The weight value in kilograms.
            </param>
            
            <param name="displayValue">
            The display value of the weight. This should contain the
            exact weight as entered by the user, even if it uses some
            other unit of measure besides kilograms. The display value
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.Units"/> and 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/> 
            represents the unit of measure for the user-entered value.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightValue.AssertMeasurementValue(System.Double)">
            <summary>
            Verifies the value is a legal weight value in kilograms (kg).
            </summary>
            
            <param name="value">
            The weight measurement.
            </param>
            
            <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="value"/> parameter is less than or equal to zero.
            </exception>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightValue.ParseValueXml(System.Xml.XPath.XPathNavigator)">
            <summary> 
            Populates the data for the weight from the XML.
            </summary>
            
            <param name="navigator"> 
            The XML node representing the weight.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightValue.WriteValueXml(System.Xml.XmlWriter)">
            <summary> 
            Writes the weight to the specified XML writer.
            </summary>
            
            <param name="writer"> 
            The XmlWriter to write the weight to.
            </param>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightValue.GetValueString(System.Double)">
            <summary>
            Gets a string representation of the weight in the base units.
            </summary>
            
            <value>
            A string representing the weight.
            </value>
            
            <returns>
            The weight as a string in the base units.
            </returns>
            
        </member>
        <member name="M:Microsoft.Health.ItemTypes.WeightValue.op_Subtraction(Microsoft.Health.ItemTypes.WeightValue,Microsoft.Health.ItemTypes.WeightValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> class by subtracting 
            the operand from this weight value.
            </summary>
            
            <param name="value1">
            The weight value from which <paramref name="value2"/> is to 
            be subtracted.
            </param>
            
            <param name="value2">
            The weight value to subtract from <paramref name="value1"/>.
            </param>
            
            <remarks>
            This constructor creates a <see cref="T:Microsoft.Health.ItemTypes.WeightValue"/> that is 
            the difference between this weight value and the operand. The value is
            always subtracted. If both operands have a 
            <see cref="T:Microsoft.Health.ItemTypes.DisplayValue"/> set and they have the same 
            <see cref="P:Microsoft.Health.ItemTypes.DisplayValue.UnitsCode"/>,  
            then the result sets DisplayValue with the same units code and the 
            value is the difference between the operands.
            </remarks>
            
            <exception cref="T:System.InvalidOperationException">
            The <paramref name="value2"/> parameter is larger than the <paramref name="value1"/> parameter.
            </exception>
            
        </member>
        <member name="P:Microsoft.Health.ItemTypes.WeightValue.Kilograms">
            <summary>
            Gets or sets the value of the weight in kilograms.
            </summary>
            
            <value>
            A number representing the weight.
            </value>
            
            <remarks>
            The value must be in kilograms. The <see cref="T:Microsoft.Health.ItemTypes.DisplayValue"/> can
            be used to store the user-entered value in a scale other than
            metric.
            </remarks>
            
        </member>
        <member name="T:Microsoft.Health.ItemTypes.Wellbeing">
            <summary>
            Describes the general wellbeing of a person from sick to healthy.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Wellbeing.None">
            <summary>
            The wellbeing of the person is unknown.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Wellbeing.Sick">
            <summary>
            The person is sick.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Wellbeing.Impaired">
            <summary>
            The person is not functioning at a normal level. 
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Wellbeing.Able">
            <summary>
            The person is functioning at a normal level but might still have
            symptoms.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Wellbeing.Healthy">
            <summary>
            The person is functioning at a normal level without any
            symptoms.
            </summary>
            
        </member>
        <member name="F:Microsoft.Health.ItemTypes.Wellbeing.Vigorous">
            <summary>
            The person is functioning beyond their normal level. 
            </summary>
            
        </member>
    </members>
</doc>
